/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinicd;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar ;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JTable;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.Timer;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author aymen
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public Connection CON ;
    static private DBconnection dbc;
    static Admin admin = new Admin();
    static Client curClient = new Client() ;
    static int currActCost = 0 ;
    
    public mainFrame(DBconnection dbc , String adminName) {
        admin.name = adminName ;
        admin.id = 1 ;
        this.dbc = dbc ;
        initComponents();
        
        connectToDataBase();
        displayTime();
        adminNameFade();
        try {
            UQM.updateCombo(operationsComboBox , dbc );
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(parentPanel, ex);
        }
        
    }
    static uiController UIC = new uiController();
    UserQueryManager UQM = new UserQueryManager();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dialogBox = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        time = new javax.swing.JLabel();
        parentPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        quitBtn = new javax.swing.JButton();
        mainContainer = new javax.swing.JPanel();
        newVisit = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        newClient = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        consultPatients = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        newOp1 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        newOp = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        visitsList = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        newAdmin1 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        newAdmin = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        newClient1 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        visitPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        clientSearchBar = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        visitsTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        allTeethPanel = new javax.swing.JPanel();
        teethpanel = new javax.swing.JPanel();
        toothLbl1 = new javax.swing.JLabel();
        toothLbl2 = new javax.swing.JLabel();
        toothLbl3 = new javax.swing.JLabel();
        toothLbl4 = new javax.swing.JLabel();
        toothLbl5 = new javax.swing.JLabel();
        toothLbl6 = new javax.swing.JLabel();
        toothLbl7 = new javax.swing.JLabel();
        toothLbl8 = new javax.swing.JLabel();
        toothLbl9 = new javax.swing.JLabel();
        toothLbl10 = new javax.swing.JLabel();
        toothLbl11 = new javax.swing.JLabel();
        toothLbl12 = new javax.swing.JLabel();
        toothLbl13 = new javax.swing.JLabel();
        toothLbl14 = new javax.swing.JLabel();
        toothLbl15 = new javax.swing.JLabel();
        toothLbl16 = new javax.swing.JLabel();
        toothLbl17 = new javax.swing.JLabel();
        toothLbl18 = new javax.swing.JLabel();
        toothLbl19 = new javax.swing.JLabel();
        toothLbl20 = new javax.swing.JLabel();
        toothLbl21 = new javax.swing.JLabel();
        toothLbl22 = new javax.swing.JLabel();
        toothLbl23 = new javax.swing.JLabel();
        toothLbl24 = new javax.swing.JLabel();
        toothLbl25 = new javax.swing.JLabel();
        toothLbl26 = new javax.swing.JLabel();
        toothLbl27 = new javax.swing.JLabel();
        toothLbl28 = new javax.swing.JLabel();
        toothLbl29 = new javax.swing.JLabel();
        toothLbl30 = new javax.swing.JLabel();
        toothLbl31 = new javax.swing.JLabel();
        toothLbl32 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        babyTeethPanel = new javax.swing.JPanel();
        babytoothLbl1 = new javax.swing.JLabel();
        babytoothLbl2 = new javax.swing.JLabel();
        babytoothLbl3 = new javax.swing.JLabel();
        babytoothLbl4 = new javax.swing.JLabel();
        babytoothLbl5 = new javax.swing.JLabel();
        babytoothLbl6 = new javax.swing.JLabel();
        babytoothLbl7 = new javax.swing.JLabel();
        babytoothLbl8 = new javax.swing.JLabel();
        babytoothLbl9 = new javax.swing.JLabel();
        babytoothLbl10 = new javax.swing.JLabel();
        babytoothLbl11 = new javax.swing.JLabel();
        babytoothLbl12 = new javax.swing.JLabel();
        babytoothLbl13 = new javax.swing.JLabel();
        babytoothLbl14 = new javax.swing.JLabel();
        babytoothLbl15 = new javax.swing.JLabel();
        babytoothLbl16 = new javax.swing.JLabel();
        babytoothLbl17 = new javax.swing.JLabel();
        babytoothLbl18 = new javax.swing.JLabel();
        babytoothLbl19 = new javax.swing.JLabel();
        babytoothLbl20 = new javax.swing.JLabel();
        background1 = new javax.swing.JLabel();
        procedureLabel = new javax.swing.JLabel();
        nomLabel = new javax.swing.JLabel();
        prenomLabel = new javax.swing.JLabel();
        visitTypeCards = new javax.swing.JPanel();
        newVisitSect = new javax.swing.JPanel();
        operationsComboBox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        savebtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        notesTextAreaNV = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        SpinnerModel model2 = new SpinnerNumberModel(0, 0, 100000, 500);
        priceTF = new javax.swing.JSpinner(model2);
        termineRadio = new javax.swing.JCheckBox();
        newSeanceSect = new javax.swing.JPanel();
        SpinnerModel model = new SpinnerNumberModel(0, 0, 10000, 500);
        updatePrice = new javax.swing.JSpinner(model);
        jLabel38 = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        termineradio1 = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        notesTextAreaNV1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        warningLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        patientsPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        clientsSearch = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        clientTextAreaFetch = new javax.swing.JTextArea();
        detailedVisitPanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        termineCombo = new javax.swing.JComboBox<>();
        searchTypeCombo = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        searchFieldPanel = new javax.swing.JPanel();
        nom_prenomSearch = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        nomSearchField = new javax.swing.JTextField();
        prenomSearchField = new javax.swing.JTextField();
        priceSearch = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        SpinnerModel model3 = new SpinnerNumberModel(0, 0, 100000, 500);
        minPriceSpinner = new javax.swing.JSpinner(model3);
        SpinnerModel model4 = new SpinnerNumberModel(10000, 0, 100000, 500);
        maxPriceSpinner = new javax.swing.JSpinner(model4);
        actSearch = new javax.swing.JPanel();
        actDentSearchField = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        dateFieldPanel = new javax.swing.JPanel();
        noDateSearch = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        dateSearch = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        minDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        maxDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        actFilter = new javax.swing.JLabel();
        cashFilter = new javax.swing.JLabel();
        personFilter = new javax.swing.JLabel();
        searchTypePanel = new javax.swing.JPanel();
        consultationsPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        visitsTable1 = new javax.swing.JTable();
        seancesPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        seancesTable = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTextField8 = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("add new operation");
        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "500 da", "1000 da", "1500 da", "2000 da" }));

        jLabel2.setText("nom d'operation");

        jLabel3.setText("prix par default");

        jLabel4.setText("description");

        jButton1.setText("save");

        jButton2.setText("discard");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogBoxLayout = new javax.swing.GroupLayout(dialogBox.getContentPane());
        dialogBox.getContentPane().setLayout(dialogBoxLayout);
        dialogBoxLayout.setHorizontalGroup(
            dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogBoxLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(83, 83, 83))
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(dialogBoxLayout.createSequentialGroup()
                        .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(58, 58, 58))
        );
        dialogBoxLayout.setVerticalGroup(
            dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(49, 49, 49)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("*** bienvenue "+admin.name+ " ***");
        setBackground(new java.awt.Color(153, 255, 204));

        time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time.setText("Sep 27  02 : 37");
        time.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        time.setFont(new java.awt.Font("Dyuthi", 0, 18)); // NOI18N
        time.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        parentPanel.setLayout(new java.awt.CardLayout());

        homePanel.setPreferredSize(new java.awt.Dimension(960, 600));

        quitBtn.setText("quitter");
        quitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBtnActionPerformed(evt);
            }
        });

        newVisit.setBackground(new java.awt.Color(247, 247, 247));
        newVisit.setPreferredSize(new java.awt.Dimension(170, 170));
        newVisit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newVisitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newVisitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newVisitMouseExited(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("nouvelle visite");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/operation.png"))); // NOI18N

        javax.swing.GroupLayout newVisitLayout = new javax.swing.GroupLayout(newVisit);
        newVisit.setLayout(newVisitLayout);
        newVisitLayout.setHorizontalGroup(
            newVisitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newVisitLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        newVisitLayout.setVerticalGroup(
            newVisitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(12, 12, 12))
        );

        newClient.setBackground(new java.awt.Color(247, 247, 247));
        newClient.setPreferredSize(new java.awt.Dimension(170, 170));
        newClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newClientMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newClientMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newClientMouseExited(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("nouveau patient");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customer.png"))); // NOI18N

        javax.swing.GroupLayout newClientLayout = new javax.swing.GroupLayout(newClient);
        newClient.setLayout(newClientLayout);
        newClientLayout.setHorizontalGroup(
            newClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newClientLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(40, 40, 40))
        );
        newClientLayout.setVerticalGroup(
            newClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newClientLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(23, 23, 23))
        );

        consultPatients.setBackground(new java.awt.Color(247, 247, 247));
        consultPatients.setPreferredSize(new java.awt.Dimension(170, 170));
        consultPatients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consultPatientsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                consultPatientsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                consultPatientsMouseExited(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("détails des patients");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customers.png"))); // NOI18N

        javax.swing.GroupLayout consultPatientsLayout = new javax.swing.GroupLayout(consultPatients);
        consultPatients.setLayout(consultPatientsLayout);
        consultPatientsLayout.setHorizontalGroup(
            consultPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultPatientsLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultPatientsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        consultPatientsLayout.setVerticalGroup(
            consultPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultPatientsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newOp1.setBackground(new java.awt.Color(247, 247, 247));
        newOp1.setPreferredSize(new java.awt.Dimension(170, 170));
        newOp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newOp1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newOp1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newOp1MouseExited(evt);
            }
        });

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("gestions des acts");

        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/database-notfiler.png"))); // NOI18N
        jLabel63.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout newOp1Layout = new javax.swing.GroupLayout(newOp1);
        newOp1.setLayout(newOp1Layout);
        newOp1Layout.setHorizontalGroup(
            newOp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOp1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOp1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel39)
                .addGap(44, 44, 44))
        );
        newOp1Layout.setVerticalGroup(
            newOp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOp1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel39)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newOp.setBackground(new java.awt.Color(247, 247, 247));
        newOp.setPreferredSize(new java.awt.Dimension(170, 170));
        newOp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newOpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newOpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newOpMouseExited(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("nouvelle procédure");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/op.png"))); // NOI18N
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout newOpLayout = new javax.swing.GroupLayout(newOp);
        newOp.setLayout(newOpLayout);
        newOpLayout.setHorizontalGroup(
            newOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(36, 36, 36))
        );
        newOpLayout.setVerticalGroup(
            newOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOpLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(23, 23, 23))
        );

        visitsList.setBackground(new java.awt.Color(247, 247, 247));
        visitsList.setPreferredSize(new java.awt.Dimension(170, 170));
        visitsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsListMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                visitsListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                visitsListMouseExited(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("détails des visites");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/list.png"))); // NOI18N

        javax.swing.GroupLayout visitsListLayout = new javax.swing.GroupLayout(visitsList);
        visitsList.setLayout(visitsListLayout);
        visitsListLayout.setHorizontalGroup(
            visitsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitsListLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        visitsListLayout.setVerticalGroup(
            visitsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitsListLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        newAdmin1.setBackground(new java.awt.Color(247, 247, 247));
        newAdmin1.setPreferredSize(new java.awt.Dimension(170, 170));
        newAdmin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAdmin1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newAdmin1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newAdmin1MouseExited(evt);
            }
        });

        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("gestion des admins");

        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel68.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/admina.png"))); // NOI18N

        javax.swing.GroupLayout newAdmin1Layout = new javax.swing.GroupLayout(newAdmin1);
        newAdmin1.setLayout(newAdmin1Layout);
        newAdmin1Layout.setHorizontalGroup(
            newAdmin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAdmin1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(newAdmin1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel67)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newAdmin1Layout.setVerticalGroup(
            newAdmin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAdmin1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel67)
                .addGap(28, 28, 28))
        );

        newAdmin.setBackground(new java.awt.Color(247, 247, 247));
        newAdmin.setPreferredSize(new java.awt.Dimension(170, 170));
        newAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAdminMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newAdminMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newAdminMouseExited(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText(" nouvel admin");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-user.png"))); // NOI18N

        javax.swing.GroupLayout newAdminLayout = new javax.swing.GroupLayout(newAdmin);
        newAdmin.setLayout(newAdminLayout);
        newAdminLayout.setHorizontalGroup(
            newAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAdminLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(43, 43, 43))
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        newAdminLayout.setVerticalGroup(
            newAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAdminLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(23, 23, 23))
        );

        newClient1.setBackground(new java.awt.Color(247, 247, 247));
        newClient1.setPreferredSize(new java.awt.Dimension(170, 170));
        newClient1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newClient1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newClient1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newClient1MouseExited(evt);
            }
        });

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("informations financiere");

        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cash-in-hand.png"))); // NOI18N

        javax.swing.GroupLayout newClient1Layout = new javax.swing.GroupLayout(newClient1);
        newClient1.setLayout(newClient1Layout);
        newClient1Layout.setHorizontalGroup(
            newClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newClient1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(18, 18, 18))
            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        newClient1Layout.setVerticalGroup(
            newClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newClient1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout mainContainerLayout = new javax.swing.GroupLayout(mainContainer);
        mainContainer.setLayout(mainContainerLayout);
        mainContainerLayout.setHorizontalGroup(
            mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContainerLayout.createSequentialGroup()
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newVisit, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(newClient, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(consultPatients, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newOp, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(newOp1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(visitsList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newClient1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(newAdmin1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(newAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        mainContainerLayout.setVerticalGroup(
            mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContainerLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newClient1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitsList, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newOp, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newClient, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(newAdmin1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(consultPatients, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(newOp1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainContainerLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {newAdmin, newClient, newOp});

        newVisit.setToolTipText("pour ajouter une nouvelle visite ..");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(1019, 1019, 1019)
                        .addComponent(quitBtn))
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(mainContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );

        parentPanel.add(homePanel, "card2");

        visitPanel.setPreferredSize(new java.awt.Dimension(1000, 680));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel18.setText("back");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        clientSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientSearchBarActionPerformed(evt);
            }
        });
        clientSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientSearchBarKeyReleased(evt);
            }
        });

        jLabel19.setText("client");

        visitsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "tooth", "procedure", "sessions", "date", "total", "state"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        visitsTable.setRowHeight(19);
        visitsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(visitsTable);
        if (visitsTable.getColumnModel().getColumnCount() > 0) {
            visitsTable.getColumnModel().getColumn(0).setMaxWidth(50);
            visitsTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            visitsTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            visitsTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        }
        visitsTable.setDefaultRenderer(Object.class, new CustomCellRenderer());

        visitsTable.setSelectionBackground(Color.CYAN);

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "n", "family name", "name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(usersTable);
        if (usersTable.getColumnModel().getColumnCount() > 0) {
            usersTable.getColumnModel().getColumn(0).setMinWidth(20);
            usersTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jLabel25.setText("+");
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });

        allTeethPanel.setLayout(new java.awt.CardLayout());

        teethpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toothLbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth1.png"))); // NOI18N
        toothLbl1.setName("18"); // NOI18N
        teethpanel.add(toothLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl1.setVisible(false);

        toothLbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth2.png"))); // NOI18N
        toothLbl2.setName("17"); // NOI18N
        teethpanel.add(toothLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl2.setVisible(false);

        toothLbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth3.png"))); // NOI18N
        toothLbl3.setName("16"); // NOI18N
        teethpanel.add(toothLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl3.setVisible(false);

        toothLbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth4.png"))); // NOI18N
        toothLbl4.setName("15"); // NOI18N
        teethpanel.add(toothLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl4.setVisible(false);

        toothLbl5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth5.png"))); // NOI18N
        toothLbl5.setName("14"); // NOI18N
        teethpanel.add(toothLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl5.setVisible(false);

        toothLbl6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth6.png"))); // NOI18N
        toothLbl6.setName("13"); // NOI18N
        teethpanel.add(toothLbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl6.setVisible(false);

        toothLbl7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth7.png"))); // NOI18N
        toothLbl7.setName("12"); // NOI18N
        teethpanel.add(toothLbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl7.setVisible(false);

        toothLbl8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth8.png"))); // NOI18N
        toothLbl8.setName("11"); // NOI18N
        teethpanel.add(toothLbl8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl8.setVisible(false);

        toothLbl9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth9.png"))); // NOI18N
        toothLbl9.setName("21"); // NOI18N
        teethpanel.add(toothLbl9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl9.setVisible(false);

        toothLbl10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth10.png"))); // NOI18N
        toothLbl10.setName("22"); // NOI18N
        teethpanel.add(toothLbl10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl10.setVisible(false);

        toothLbl11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth11.png"))); // NOI18N
        toothLbl11.setName("23"); // NOI18N
        teethpanel.add(toothLbl11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl11.setVisible(false);

        toothLbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth12.png"))); // NOI18N
        toothLbl12.setName("24"); // NOI18N
        teethpanel.add(toothLbl12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl12.setVisible(false);

        toothLbl13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth13.png"))); // NOI18N
        toothLbl13.setName("25"); // NOI18N
        teethpanel.add(toothLbl13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl13.setVisible(false);

        toothLbl14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth14.png"))); // NOI18N
        toothLbl14.setName("26"); // NOI18N
        teethpanel.add(toothLbl14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl14.setVisible(false);

        toothLbl15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth15.png"))); // NOI18N
        toothLbl15.setName("27"); // NOI18N
        teethpanel.add(toothLbl15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl15.setVisible(false);

        toothLbl16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth16.png"))); // NOI18N
        toothLbl16.setName("28"); // NOI18N
        teethpanel.add(toothLbl16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl16.setVisible(false);

        toothLbl17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth17.png"))); // NOI18N
        toothLbl17.setName("38"); // NOI18N
        teethpanel.add(toothLbl17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl17.setVisible(false);

        toothLbl18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth18.png"))); // NOI18N
        toothLbl18.setName("37"); // NOI18N
        teethpanel.add(toothLbl18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl18.setVisible(false);

        toothLbl19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth19.png"))); // NOI18N
        toothLbl19.setName("36"); // NOI18N
        teethpanel.add(toothLbl19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl19.setVisible(false);

        toothLbl20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth20.png"))); // NOI18N
        toothLbl20.setName("35"); // NOI18N
        teethpanel.add(toothLbl20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl20.setVisible(false);

        toothLbl21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth21.png"))); // NOI18N
        toothLbl21.setName("34"); // NOI18N
        teethpanel.add(toothLbl21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl21.setVisible(false);

        toothLbl22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth22.png"))); // NOI18N
        toothLbl22.setName("33"); // NOI18N
        teethpanel.add(toothLbl22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl22.setVisible(false);

        toothLbl23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth23.png"))); // NOI18N
        toothLbl23.setName("32"); // NOI18N
        teethpanel.add(toothLbl23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl23.setVisible(false);

        toothLbl24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth24.png"))); // NOI18N
        toothLbl24.setName("31"); // NOI18N
        teethpanel.add(toothLbl24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl24.setVisible(false);

        toothLbl25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth25.png"))); // NOI18N
        toothLbl25.setName("41"); // NOI18N
        teethpanel.add(toothLbl25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl25.setVisible(false);

        toothLbl26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth26.png"))); // NOI18N
        toothLbl26.setName("42"); // NOI18N
        teethpanel.add(toothLbl26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl26.setVisible(false);

        toothLbl27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth27.png"))); // NOI18N
        toothLbl27.setName("43"); // NOI18N
        teethpanel.add(toothLbl27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl27.setVisible(false);

        toothLbl28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth28.png"))); // NOI18N
        toothLbl28.setName("44"); // NOI18N
        teethpanel.add(toothLbl28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl28.setVisible(false);

        toothLbl29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth29.png"))); // NOI18N
        toothLbl29.setName("45"); // NOI18N
        teethpanel.add(toothLbl29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl29.setVisible(false);

        toothLbl30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth30.png"))); // NOI18N
        toothLbl30.setName("46"); // NOI18N
        teethpanel.add(toothLbl30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl30.setVisible(false);

        toothLbl31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth31.png"))); // NOI18N
        toothLbl31.setName("47"); // NOI18N
        teethpanel.add(toothLbl31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl31.setVisible(false);

        toothLbl32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/tooth32.png"))); // NOI18N
        toothLbl32.setName("48"); // NOI18N
        teethpanel.add(toothLbl32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl32.setVisible(false);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mouthImages/My project.png"))); // NOI18N
        background.setName("9999999"); // NOI18N
        background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backgroundMouseClicked(evt);
            }
        });
        teethpanel.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));

        allTeethPanel.add(teethpanel, "card2");

        babyTeethPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        babytoothLbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth1.png"))); // NOI18N
        babytoothLbl1.setName("55"); // NOI18N
        babyTeethPanel.add(babytoothLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl1.setVisible(false);

        babytoothLbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth2.png"))); // NOI18N
        babytoothLbl2.setName("54"); // NOI18N
        babyTeethPanel.add(babytoothLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl2.setVisible(false);

        babytoothLbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth3.png"))); // NOI18N
        babytoothLbl3.setName("53"); // NOI18N
        babyTeethPanel.add(babytoothLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl3.setVisible(false);

        babytoothLbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth4.png"))); // NOI18N
        babytoothLbl4.setName("52"); // NOI18N
        babyTeethPanel.add(babytoothLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl4.setVisible(false);

        babytoothLbl5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth5.png"))); // NOI18N
        babytoothLbl5.setName("51"); // NOI18N
        babyTeethPanel.add(babytoothLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl5.setVisible(false);

        babytoothLbl6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth6.png"))); // NOI18N
        babytoothLbl6.setName("61"); // NOI18N
        babyTeethPanel.add(babytoothLbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl6.setVisible(false);

        babytoothLbl7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth7.png"))); // NOI18N
        babytoothLbl7.setName("62"); // NOI18N
        babyTeethPanel.add(babytoothLbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl7.setVisible(false);

        babytoothLbl8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth8.png"))); // NOI18N
        babytoothLbl8.setName("63"); // NOI18N
        babyTeethPanel.add(babytoothLbl8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl8.setVisible(false);

        babytoothLbl9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth9.png"))); // NOI18N
        babytoothLbl9.setName("64"); // NOI18N
        babyTeethPanel.add(babytoothLbl9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl9.setVisible(false);

        babytoothLbl10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth10.png"))); // NOI18N
        babytoothLbl10.setName("65"); // NOI18N
        babyTeethPanel.add(babytoothLbl10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl10.setVisible(false);

        babytoothLbl11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth11.png"))); // NOI18N
        babytoothLbl11.setName("75"); // NOI18N
        babyTeethPanel.add(babytoothLbl11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl11.setVisible(false);

        babytoothLbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth12.png"))); // NOI18N
        babytoothLbl12.setName("74"); // NOI18N
        babyTeethPanel.add(babytoothLbl12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl12.setVisible(false);

        babytoothLbl13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth13.png"))); // NOI18N
        babytoothLbl13.setName("73"); // NOI18N
        babyTeethPanel.add(babytoothLbl13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl13.setVisible(false);

        babytoothLbl14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth14.png"))); // NOI18N
        babytoothLbl14.setName("72"); // NOI18N
        babyTeethPanel.add(babytoothLbl14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl14.setVisible(false);

        babytoothLbl15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth15.png"))); // NOI18N
        babytoothLbl15.setName("71"); // NOI18N
        babyTeethPanel.add(babytoothLbl15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl15.setVisible(false);

        babytoothLbl16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth16.png"))); // NOI18N
        babytoothLbl16.setName("81"); // NOI18N
        babyTeethPanel.add(babytoothLbl16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl16.setVisible(false);

        babytoothLbl17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth17.png"))); // NOI18N
        babytoothLbl17.setName("82"); // NOI18N
        babyTeethPanel.add(babytoothLbl17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl17.setVisible(false);

        babytoothLbl18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth18.png"))); // NOI18N
        babytoothLbl18.setName("83"); // NOI18N
        babyTeethPanel.add(babytoothLbl18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl18.setVisible(false);

        babytoothLbl19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth19.png"))); // NOI18N
        babytoothLbl19.setName("84"); // NOI18N
        babyTeethPanel.add(babytoothLbl19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl19.setVisible(false);

        babytoothLbl20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-tooth20.png"))); // NOI18N
        babytoothLbl20.setName("85"); // NOI18N
        babyTeethPanel.add(babytoothLbl20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl20.setVisible(false);

        background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/babyTeeth/baby-teeth.png"))); // NOI18N
        background1.setName("9999999"); // NOI18N
        background1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                background1MouseClicked(evt);
            }
        });
        babyTeethPanel.add(background1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));

        allTeethPanel.add(babyTeethPanel, "card2");

        procedureLabel.setText("operation");

        nomLabel.setText("houche");

        prenomLabel.setText("aymen");

        visitTypeCards.setLayout(new java.awt.CardLayout());

        newVisitSect.setBackground(new java.awt.Color(217, 242, 250));
        newVisitSect.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        operationsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                operationsComboBoxItemStateChanged(evt);
            }
        });

        jLabel20.setText("procedure");

        jLabel27.setText("+");
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        savebtn.setText("sauvegarder");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });

        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        notesTextAreaNV.setColumns(20);
        notesTextAreaNV.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        notesTextAreaNV.setLineWrap(true);
        notesTextAreaNV.setRows(5);
        notesTextAreaNV.setTabSize(5);
        notesTextAreaNV.setText("                                \n                                   laisser une remarque");
        notesTextAreaNV.setForeground(new java.awt.Color(204, 204, 204));
        notesTextAreaNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                notesTextAreaNVFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                notesTextAreaNVFocusLost(evt);
            }
        });
        jScrollPane7.setViewportView(notesTextAreaNV);

        jLabel23.setText("marquer comme");

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel58.setText("prescrire des medicaments");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel58)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel58)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel64.setText("montant ");

        priceTF.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        priceTF.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                priceTFMouseWheelMoved(evt);
            }
        });
        priceTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceTFMouseClicked(evt);
            }
        });

        termineRadio.setText("terminé");
        termineRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termineRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newVisitSectLayout = new javax.swing.GroupLayout(newVisitSect);
        newVisitSect.setLayout(newVisitSectLayout);
        newVisitSectLayout.setHorizontalGroup(
            newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newVisitSectLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(newVisitSectLayout.createSequentialGroup()
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(operationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(newVisitSectLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27)))
                        .addGap(56, 56, 56)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitSectLayout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addGap(37, 37, 37)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(newVisitSectLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(termineRadio))))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(savebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        newVisitSectLayout.setVerticalGroup(
            newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newVisitSectLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newVisitSectLayout.createSequentialGroup()
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel64)
                            .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20)
                                .addComponent(jLabel27)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(operationsComboBox)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))
                    .addGroup(newVisitSectLayout.createSequentialGroup()
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(newVisitSectLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(termineRadio)))
                        .addGap(33, 33, 33)))
                .addGap(3, 3, 3)
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        operationsComboBox.setName("operationsComboBox");

        visitTypeCards.add(newVisitSect, "card2");

        newSeanceSect.setBackground(new java.awt.Color(218, 231, 255));

        updatePrice.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        updatePrice.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                updatePriceMouseWheelMoved(evt);
            }
        });
        updatePrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePriceMouseClicked(evt);
            }
        });

        jLabel38.setText("montant ajoutée");

        updatebtn.setText("mettre a jour");
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebtnMouseClicked(evt);
            }
        });
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        termineradio1.setText("termine");

        jLabel24.setText("marquer comme");

        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        notesTextAreaNV1.setColumns(20);
        notesTextAreaNV1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        notesTextAreaNV1.setForeground(new java.awt.Color(204, 204, 204));
        notesTextAreaNV1.setLineWrap(true);
        notesTextAreaNV1.setRows(5);
        notesTextAreaNV1.setTabSize(5);
        notesTextAreaNV1.setText("                                \n                                   laisser une remarque");
        notesTextAreaNV1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                notesTextAreaNV1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                notesTextAreaNV1FocusLost(evt);
            }
        });
        jScrollPane10.setViewportView(notesTextAreaNV1);

        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel66.setText("prescrire des medicaments");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel66)
                .addGap(14, 14, 14))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel66)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout newSeanceSectLayout = new javax.swing.GroupLayout(newSeanceSect);
        newSeanceSect.setLayout(newSeanceSectLayout);
        newSeanceSectLayout.setHorizontalGroup(
            newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSeanceSectLayout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSeanceSectLayout.createSequentialGroup()
                        .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(16, 16, 16)))
                        .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(termineradio1))
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jLabel24)))
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSeanceSectLayout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)))
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(151, 151, 151))
        );
        newSeanceSectLayout.setVerticalGroup(
            newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newSeanceSectLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSeanceSectLayout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newSeanceSectLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(termineradio1)))))
                .addGap(41, 41, 41)
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        visitTypeCards.add(newSeanceSect, "card3");

        jLabel55.setText("reste :");

        jLabel61.setText(">");
        jLabel61.setBackground(new java.awt.Color(204, 204, 204));
        jLabel61.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel61MouseClicked(evt);
            }
        });

        warningLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/warning.png"))); // NOI18N
        warningLabel.setText("vous avez laissé des remarques concernant ce patient , vous pouvez les consulter en double cliquant sur ce message");
        warningLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                warningLabelMouseClicked(evt);
            }
        });

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        jLabel62.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        jLabel65.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        javax.swing.GroupLayout visitPanelLayout = new javax.swing.GroupLayout(visitPanel);
        visitPanel.setLayout(visitPanelLayout);
        visitPanelLayout.setHorizontalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                    .addComponent(clientSearchBar))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2))
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prenomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel62)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(procedureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel55)
                                .addGap(341, 341, 341))
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(26, 26, 26))
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visitTypeCards, javax.swing.GroupLayout.PREFERRED_SIZE, 1090, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel25))
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addGap(462, 462, 462)
                                .addComponent(jLabel21)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allTeethPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(263, 263, 263))
        );
        visitPanelLayout.setVerticalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clientSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel65)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel43)
                                    .addGroup(visitPanelLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(procedureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel55)
                                        .addGap(33, 33, 33))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                                        .addComponent(prenomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addComponent(warningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, visitPanelLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(5, 5, 5)
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addComponent(visitTypeCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(2, 2, 2))))
                    .addComponent(allTeethPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        warningLabel.setVisible(false);

        parentPanel.add(visitPanel, "card3");

        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "nom", "prenom", "adresse", "numero tel", "date naissance"
            }
        ));
        clientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(clientsTable);
        if (clientsTable.getColumnModel().getColumnCount() > 0) {
            clientsTable.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel48.setText("back");
        jLabel48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel48MouseClicked(evt);
            }
        });

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel49MouseClicked(evt);
            }
        });

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addnew.png"))); // NOI18N
        jLabel50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel50MouseClicked(evt);
            }
        });

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel51MouseClicked(evt);
            }
        });

        jLabel52.setText("search");
        jLabel52.setFont(new java.awt.Font("URW Palladio L", 0, 18)); // NOI18N

        clientsSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientsSearchKeyReleased(evt);
            }
        });

        jLabel53.setText("remarques : ");

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        clientTextAreaFetch.setColumns(20);
        clientTextAreaFetch.setEditable(false);
        clientTextAreaFetch.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        clientTextAreaFetch.setLineWrap(true);
        clientTextAreaFetch.setRows(6);
        clientTextAreaFetch.setForeground(new java.awt.Color(255, 153, 153));
        clientTextAreaFetch.setMargin(new java.awt.Insets(8, 10, 8, 10));
        jScrollPane9.setViewportView(clientTextAreaFetch);

        javax.swing.GroupLayout patientsPanelLayout = new javax.swing.GroupLayout(patientsPanel);
        patientsPanel.setLayout(patientsPanelLayout);
        patientsPanelLayout.setHorizontalGroup(
            patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174)
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clientsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel50)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientsPanelLayout.createSequentialGroup()
                        .addGap(0, 222, Short.MAX_VALUE)
                        .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel53)
                            .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1075, Short.MAX_VALUE)
                                .addComponent(jScrollPane9)))))
                .addGap(130, 130, 130))
        );
        patientsPanelLayout.setVerticalGroup(
            patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientsPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel52)
                        .addComponent(clientsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel51))
                        .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel53)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        jLabel49.setToolTipText("modifier des informations");
        jLabel50.setToolTipText("ajouter un patient");
        jLabel51.setToolTipText("supprimer ce client");

        parentPanel.add(patientsPanel, "card5");

        detailedVisitPanel.setLayout(new java.awt.GridBagLayout());

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel34.setText("back");
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 6, 0, 0);
        detailedVisitPanel.add(jLabel34, gridBagConstraints);

        searchPanel.setInheritsPopupMenu(true);
        searchPanel.setMaximumSize(new java.awt.Dimension(1199, 146));
        searchPanel.setMinimumSize(new java.awt.Dimension(1199, 146));
        searchPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchPanelMouseClicked(evt);
            }
        });

        termineCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tout les operations", "les operatoins termine", "les operatoins en cours" }));
        termineCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termineComboActionPerformed(evt);
            }
        });

        searchTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nom de client", "procedure", "montant" }));
        searchTypeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchTypeComboItemStateChanged(evt);
            }
        });
        searchTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeComboActionPerformed(evt);
            }
        });

        jLabel17.setText("recherche :");
        jLabel17.setFont(new java.awt.Font("URW Palladio L", 0, 18)); // NOI18N

        searchFieldPanel.setMinimumSize(new java.awt.Dimension(299, 100));
        searchFieldPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldPanelMouseClicked(evt);
            }
        });
        searchFieldPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldPanelKeyPressed(evt);
            }
        });
        searchFieldPanel.setLayout(new java.awt.CardLayout());

        nom_prenomSearch.setBackground(new java.awt.Color(230, 255, 230));

        jLabel40.setText("nom");

        jLabel42.setText("prenom");

        nomSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomSearchFieldKeyReleased(evt);
            }
        });

        prenomSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prenomSearchFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout nom_prenomSearchLayout = new javax.swing.GroupLayout(nom_prenomSearch);
        nom_prenomSearch.setLayout(nom_prenomSearchLayout);
        nom_prenomSearchLayout.setHorizontalGroup(
            nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nom_prenomSearchLayout.createSequentialGroup()
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel40))
                    .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(prenomSearchField)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nom_prenomSearchLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(jLabel42)
                        .addGap(69, 69, 69))))
        );
        nom_prenomSearchLayout.setVerticalGroup(
            nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prenomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchFieldPanel.add(nom_prenomSearch, "card3");

        priceSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceSearchFocusGained(evt);
            }
        });
        priceSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceSearchMouseClicked(evt);
            }
        });

        jLabel44.setText("min");

        jLabel45.setText("max");

        minPriceSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minPriceSpinnerStateChanged(evt);
            }
        });

        maxPriceSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxPriceSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout priceSearchLayout = new javax.swing.GroupLayout(priceSearch);
        priceSearch.setLayout(priceSearchLayout);
        priceSearchLayout.setHorizontalGroup(
            priceSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(priceSearchLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        priceSearchLayout.setVerticalGroup(
            priceSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(priceSearchLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(priceSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45)
                    .addComponent(maxPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        searchFieldPanel.add(priceSearch, "card5");

        actSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                actSearchFocusGained(evt);
            }
        });

        actDentSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actDentSearchFieldActionPerformed(evt);
            }
        });
        actDentSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                actDentSearchFieldKeyReleased(evt);
            }
        });

        jLabel28.setText("acte dentaire");

        javax.swing.GroupLayout actSearchLayout = new javax.swing.GroupLayout(actSearch);
        actSearch.setLayout(actSearchLayout);
        actSearchLayout.setHorizontalGroup(
            actSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actSearchLayout.createSequentialGroup()
                .addGroup(actSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actSearchLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(actDentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(actSearchLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel28)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        actSearchLayout.setVerticalGroup(
            actSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actDentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchFieldPanel.add(actSearch, "card2");

        dateFieldPanel.setLayout(new java.awt.CardLayout());

        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-calendar-48.png"))); // NOI18N
        jLabel46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel46MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout noDateSearchLayout = new javax.swing.GroupLayout(noDateSearch);
        noDateSearch.setLayout(noDateSearchLayout);
        noDateSearchLayout.setHorizontalGroup(
            noDateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noDateSearchLayout.createSequentialGroup()
                .addContainerGap(786, Short.MAX_VALUE)
                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        noDateSearchLayout.setVerticalGroup(
            noDateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel46.setToolTipText("Ajouter une contrainte de temps.");

        dateFieldPanel.add(noDateSearch, "card2");

        jLabel35.setText("a");
        jLabel35.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel36.setText("de");
        jLabel36.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-collapse-48.png"))); // NOI18N
        jLabel47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel47MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout dateSearchLayout = new javax.swing.GroupLayout(dateSearch);
        dateSearch.setLayout(dateSearchLayout);
        dateSearchLayout.setHorizontalGroup(
            dateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateSearchLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(minDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel35)
                .addGap(18, 18, 18)
                .addComponent(maxDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 320, Short.MAX_VALUE)
                .addComponent(jLabel47)
                .addContainerGap())
        );
        dateSearchLayout.setVerticalGroup(
            dateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateSearchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(minDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dateFieldPanel.add(dateSearch, "card3");

        actFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tooth-filter.png"))); // NOI18N
        actFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actFilterMouseClicked(evt);
            }
        });

        cashFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cash-filter.png"))); // NOI18N
        cashFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashFilterMouseClicked(evt);
            }
        });

        personFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/person-filter.png"))); // NOI18N
        personFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personFilterMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(307, 307, 307)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(termineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(dateFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(personFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cashFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(101, 101, 101))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchFieldPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(searchTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(termineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addGap(26, 26, 26)))
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cashFilter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateFieldPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(personFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actFilter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        actFilter.setVisible(false);
        cashFilter.setVisible(false);
        personFilter.setVisible(false);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(47, 6, 0, 0);
        detailedVisitPanel.add(searchPanel, gridBagConstraints);

        searchTypePanel.setLayout(new java.awt.CardLayout());

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel32.setText("dent");
        jLabel32.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel31.setText("procedure");
        jLabel31.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel30.setText("client");
        jLabel30.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel54.setText("statue");
        jLabel54.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jCheckBox1.setText("TERMINÉ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel32)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel54))
                    .addComponent(jCheckBox1))
                .addGap(136, 136, 136)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(7, 7, 7)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel54))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jCheckBox1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel33))
                .addGap(31, 31, 31))
        );

        jLabel29.setToolTipText("supprimer la visit");
        jLabel29.setToolTipText("modifier la visit");

        visitsTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "nom et prenom", "tooth", "procedure", "sessions", "date", "total", "state"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        visitsTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsTable1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(visitsTable1);
        if (visitsTable1.getColumnModel().getColumnCount() > 0) {
            visitsTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            visitsTable1.getColumnModel().getColumn(1).setMinWidth(50);
            visitsTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            visitsTable1.getColumnModel().getColumn(4).setPreferredWidth(50);
            visitsTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        javax.swing.GroupLayout consultationsPanelLayout = new javax.swing.GroupLayout(consultationsPanel);
        consultationsPanel.setLayout(consultationsPanelLayout);
        consultationsPanelLayout.setHorizontalGroup(
            consultationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultationsPanelLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(consultationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        consultationsPanelLayout.setVerticalGroup(
            consultationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultationsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        searchTypePanel.add(consultationsPanel, "card4");

        seancesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "seance ", "date", "note", "montant", "saiser par"
            }
        ));
        jScrollPane5.setViewportView(seancesTable);

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
        jLabel41.setText("voir moins de details");
        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(51, 153, 255));
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });

        jTextField8.setMinimumSize(new java.awt.Dimension(5, 20));
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel56.setText("montant");
        jLabel56.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel57.setText("remarque");
        jLabel57.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel57))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel56)
                            .addGap(20, 20, 20)))
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60))
                .addGap(31, 31, 31))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel29.setToolTipText("supprimer la visit");
        jLabel29.setToolTipText("modifier la visit");

        javax.swing.GroupLayout seancesPanelLayout = new javax.swing.GroupLayout(seancesPanel);
        seancesPanel.setLayout(seancesPanelLayout);
        seancesPanelLayout.setHorizontalGroup(
            seancesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seancesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1190, Short.MAX_VALUE)
            .addGroup(seancesPanelLayout.createSequentialGroup()
                .addGap(517, 517, 517)
                .addComponent(jLabel41)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        seancesPanelLayout.setVerticalGroup(
            seancesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seancesPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        searchTypePanel.add(seancesPanel, "card4");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 101;
        gridBagConstraints.ipady = 51;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 17, 134, 123);
        detailedVisitPanel.add(searchTypePanel, gridBagConstraints);

        parentPanel.add(detailedVisitPanel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(time)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(parentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        String termine = "0" ;
        
        if(currActCost < Integer.parseInt(priceTF.getValue().toString()) && !termineRadio.isSelected()){
           int answer = JOptionPane.showConfirmDialog(null, "do you watn to set this operations as finished?", "fini ", JOptionPane.YES_NO_OPTION);
           if(answer == JOptionPane.YES_OPTION){
               termine = "1" ;
           }else{
               termine = "0";
           }
        }
        
            
        DefaultTableModel model = (DefaultTableModel)usersTable.getModel();
        int selectedRowIndex = usersTable.getSelectedRow();
        
        String client_id  = model.getValueAt(selectedRowIndex, 0).toString();
        //later use CURRENT_TIMESTAMP() 
        String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        
        if(termineRadio.isSelected()){
            termine = "1" ;
        }
        String operation = String.valueOf(operationsComboBox.getSelectedItem())  ;
        
        int[] selectedTeeth1 =getVisibleComponentIndexes(teethpanel) ;
        int[] selectedTeeth2 =getVisibleComponentIndexes(babyTeethPanel) ;
        int[] allSelectedTeeth = new int[selectedTeeth1.length + selectedTeeth2.length];
        
        System.arraycopy(selectedTeeth1, 0, allSelectedTeeth, 0, selectedTeeth1.length);
        System.arraycopy(selectedTeeth2, 0, allSelectedTeeth, selectedTeeth1.length, selectedTeeth2.length);


                
        try {
           
            String operation_id = String.valueOf(UQM.getOperationIdByName(dbc ,  operation));
            // parameter #5 is admin id
            UQM.insertVisit(dbc, timeStamp , client_id, operation_id , "1", priceTF.getValue().toString(), termine  , allSelectedTeeth , notesTextAreaNV.getText() );
            System.out.println("visit added");
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_savebtnActionPerformed
    
    private void clientSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientSearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientSearchBarActionPerformed

    private void newVisitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newVisitMouseClicked
        
        parentPanel.removeAll();
        parentPanel.add(visitPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_newVisitMouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_jLabel18MouseClicked
    Boolean on = false ;
    private void newClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClientMouseClicked
        try {
            PopUp ppup = new PopUp("client" , dbc  , 0);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
            System.out.println("the new client button is clicked ");
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_newClientMouseClicked

    private void newOpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOpMouseClicked
        try {
            PopUp ppup = new PopUp("operation" ,dbc , 0);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_newOpMouseClicked

    private void newAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdminMouseClicked
        try {
            PopUp ppup = new PopUp("admin" , dbc , 0);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newAdminMouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        try {
            PopUp ppup = new PopUp("client", dbc , 0);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        try {
            PopUp ppup = new PopUp("operation", dbc , 0);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jLabel27MouseClicked

    private void quitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBtnActionPerformed
        login m = new login();
        this.setVisible(false);
        this.dispose();
        m.setVisible(true);
        
    }//GEN-LAST:event_quitBtnActionPerformed

    private void clientSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientSearchBarKeyReleased
        System.out.println("key released");
        String[] searchResult = new String[3];
        try {
            searchResult = UQM.getClientsResults(dbc , clientSearchBar.getText());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // setting the table
        try {

                DefaultTableModel d = (DefaultTableModel) usersTable.getModel();
                d.setRowCount(0);
                String[] searchResultRow = null;
                
                for (int i = 0; i<searchResult.length ; i++) {
                    searchResultRow = searchResult[i].split(":::");
                    Vector v2 = new Vector();

                    v2.add(Integer.parseInt(searchResultRow[0]));
                    v2.add(searchResultRow[1]);
                    v2.add(searchResultRow[2]);
                    
                    d.addRow(v2);
                }
                
            } catch (Exception e) {
                System.out.println(e.toString());
                System.out.println("error in key released...");
            }
    }//GEN-LAST:event_clientSearchBarKeyReleased

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)usersTable.getModel();
        int selectedRowIndex = usersTable.getSelectedRow();
        
        visitTypeCards.removeAll();
        visitTypeCards.add(newVisitSect);
        visitTypeCards.repaint();
        visitTypeCards.revalidate();

        nomLabel.setText(model.getValueAt(selectedRowIndex, 1).toString());
        prenomLabel.setText(model.getValueAt(selectedRowIndex, 2).toString());
        updatePrice.setValue(500);
        
        try {
            curClient = UQM.currentClient(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        /*setting up the visits table */
        String[] searchResult = new String[6];
        try {
            searchResult = UQM.getVisitsResults(dbc , model.getValueAt(selectedRowIndex, 0).toString() , 2);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {

                DefaultTableModel d = (DefaultTableModel) visitsTable.getModel();
                d.setRowCount(0);
                String[] searchResultRow = null;
                
                for (int i = 0; i<searchResult.length ; i++) {
                    searchResultRow = searchResult[i].split(":::");
                    Vector v2 = new Vector();

                    v2.add(searchResultRow[0]);
                    v2.add(searchResultRow[1]);
                    v2.add(searchResultRow[2]);
                    v2.add(searchResultRow[3]);
                    v2.add(searchResultRow[4]);
                    v2.add(searchResultRow[5]);
                    v2.add(searchResultRow[6]);
                    
                    
                    d.addRow(v2);
                }
                
            } catch (Exception e) {
                System.out.println(e.toString());
                System.out.println("error in mouse clicked ...");
            }
        
        System.out.println("notes : " +curClient.notes );
        if(curClient.notes== null || "".equals(curClient.notes) ){
            warningLabel.setVisible(false);
        }else{
            warningLabel.setVisible(true);
        }
        UIC.emptyTeethpanel(babyTeethPanel);
        UIC.emptyTeethpanel(teethpanel);
        
    }//GEN-LAST:event_usersTableMouseClicked

    private void updatePriceMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_updatePriceMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePriceMouseWheelMoved

    private void updatePriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePriceMouseClicked
        updatePrice.setValue((Integer)updatePrice.getValue() +500);
    }//GEN-LAST:event_updatePriceMouseClicked

    private void updatebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseClicked
        
        
        DefaultTableModel model = (DefaultTableModel)visitsTable.getModel();
        int selectedRowIndex = visitsTable.getSelectedRow();
        
        
        
        String client_id  = model.getValueAt(selectedRowIndex, 0).toString();
        String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        
       
        String visit_id = model.getValueAt(selectedRowIndex, 0).toString(); 
        String seance_nbr = model.getValueAt(selectedRowIndex, 3).toString();
        //update consultatoin when : the stutus is 0 and 
        
        if("0".equals(model.getValueAt(selectedRowIndex, 6).toString())){
            if (termineradio1.isSelected()) {
                try {
                    UQM.setVisitTermine(dbc, visit_id);
                    try {
                        // parameter #5 is admin id
                        UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, "1", updatePrice.getValue().toString(), notesTextAreaNV.getText());
                        System.out.println("visit updated in interface");
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        System.out.println("exception code : " + ex.getErrorCode() + "select an operation");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (currActCost < Integer.parseInt(updatePrice.getValue().toString()) + Integer.parseInt(model.getValueAt(selectedRowIndex, 5).toString()) && !termineradio1.isSelected()) {
                int answer = JOptionPane.showConfirmDialog(null, "do you watn to set this operations as finished?", "fini ", JOptionPane.YES_NO_OPTION);
                if (answer == JOptionPane.YES_OPTION) {
                    try {
                        UQM.setVisitTermine(dbc, visit_id);
                        try {
                            // parameter #5 is admin id
                            UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, "1", updatePrice.getValue().toString(), notesTextAreaNV.getText());
                            System.out.println("visit updated in interface");
                        } catch (SQLException ex) {
                            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            System.out.println("exception code : " + ex.getErrorCode() + "select an operation");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    try {
                        // parameter #5 is admin id
                        UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, "1", updatePrice.getValue().toString() , notesTextAreaNV.getText());
                        System.out.println("visit updated in interface");
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        System.out.println("exception code : " + ex.getErrorCode() + "select an operation");
                    }
                }

        }
        }else{
            JOptionPane.showMessageDialog(parentPanel, "cette operation est deja marque comme termine");
        }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_updatebtnMouseClicked

    private void visitsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) visitsTable.getModel();
        int selectedRowIndex = visitsTable.getSelectedRow();
        System.out.println("the search panell was created  : x " + searchPanel.getLocation().x  +" y "+ searchPanel.getLocation().y + searchPanel.isVisible());
            
        visitTypeCards.removeAll();
        visitTypeCards.add(newSeanceSect);
        visitTypeCards.repaint();
        visitTypeCards.revalidate();
        
        if (evt.getClickCount() == 2) {
            
            parentPanel.removeAll();
            parentPanel.add(detailedVisitPanel);
            parentPanel.repaint();
            parentPanel.revalidate();

            searchTypePanel.removeAll();
            searchTypePanel.add(consultationsPanel);
            searchTypePanel.repaint();
            searchTypePanel.revalidate();
            System.out.println("the search panell was created  : x " + searchPanel.getLocation().x  +" y "+ searchPanel.getLocation().y );
            
            searchPanel.setVisible(true);
            System.out.println("the search panell was created  : x " + searchPanel.getLocation().x  +" y "+ searchPanel.getLocation().y );
            
            String[] searchResult = new String[4];
            try {
                searchResult = UQM.getseancesResults(dbc, model.getValueAt(selectedRowIndex, 0).toString());
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                
            }

            try {

                DefaultTableModel d = (DefaultTableModel) seancesTable.getModel();
                d.setRowCount(0);
                String[] searchResultRow = null;

                for (int i = 0; i < searchResult.length; i++) {
                    searchResultRow = searchResult[i].split(":::");
                    Vector v2 = new Vector();

                    v2.add(searchResultRow[0]);
                    v2.add(searchResultRow[1]);
                    v2.add(searchResultRow[2]);
                    v2.add(searchResultRow[3]);
                    v2.add(searchResultRow[4]);

                    d.addRow(v2);
                }

            } catch (Exception e) {
                System.out.println(e.toString());
                System.out.println("error in mouse clicked ...");
            }

        } else {

            try {
                Component[] components = teethpanel.getComponents();
                Component[] otherComponents = babyTeethPanel.getComponents();
// Calculate the size of the combined array
                int totalSize = components.length + otherComponents.length;

// Create a new array with the combined size
                Component[] allComponents = new Component[totalSize];

// Copy the contents of the first array into the new array
                System.arraycopy(components, 0, allComponents, 0, components.length);

// Copy the contents of the second array into the new array
                System.arraycopy(otherComponents, 0, allComponents, components.length, otherComponents.length);

                for (Component component : allComponents) {
                    if ("9999999".equals(component.getName())) {
                        continue;
                    }
                    component.setVisible(false);
                    System.out.println("all components :" + component.getName());
                }

                model = (DefaultTableModel) visitsTable.getModel();
                selectedRowIndex = visitsTable.getSelectedRow();
                String[] teethIndexes = model.getValueAt(selectedRowIndex, 1).toString().split(",");
                //tweli a for loop (multipe children effected !)
                for (String index : teethIndexes) {
                    System.out.println("this :");
                    System.out.println(index);
                }

                for (int i = 0; i < teethIndexes.length; i++) {
                    String toothIndex = teethIndexes[i].trim();
                    for (Component component : components) {

                        System.out.println("component name :" + component.getName());
                        if (component.getName() == null ? toothIndex == null : component.getName().equals(toothIndex)) {
                            System.out.println("match");
                            component.setVisible(true);
                        }
                    }
                }
                //for baby teeth
                for (int i = 0; i < teethIndexes.length; i++) {
                    String toothIndex = teethIndexes[i].trim();
                    for (Component component : otherComponents) {

                        System.out.println("component name :" + component.getName());
                        if (component.getName() == null ? toothIndex == null : component.getName().equals(toothIndex)) {
                            System.out.println("match");
                            component.setVisible(true);
                        }
                    }
                }

                procedureLabel.setText(model.getValueAt(selectedRowIndex, 2).toString());
            } catch (Exception ex) {
                System.out.println(ex);
                System.err.println("select a client first");
            }

        }


    }//GEN-LAST:event_visitsTableMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatebtnActionPerformed

    private void visitsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsListMouseClicked
        parentPanel.removeAll();
        parentPanel.add(detailedVisitPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
        
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_visitsListMouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_jLabel34MouseClicked
        
    private void visitsTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel)visitsTable1.getModel();
        int selectedRowIndex = visitsTable1.getSelectedRow();
        
        if (evt.getClickCount() == 2) {
            
            
            searchTypePanel.removeAll();
            searchTypePanel.add(seancesPanel);
            searchTypePanel.repaint();
            searchTypePanel.revalidate();
            
            /*setting up the seances table */
        String[] searchResult = new String[4];
        try {
            searchResult = UQM.getseancesResults(dbc , model.getValueAt(selectedRowIndex, 0).toString());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {

                DefaultTableModel d = (DefaultTableModel) seancesTable.getModel();
                d.setRowCount(0);
                String[] searchResultRow = null;
                
                for (int i = 0; i<searchResult.length ; i++) {
                    searchResultRow = searchResult[i].split(":::");
                    Vector v2 = new Vector();

                    v2.add(searchResultRow[0]);
                    v2.add(searchResultRow[1]);
                    v2.add(searchResultRow[2]);
                    v2.add(searchResultRow[3]);
                    v2.add(searchResultRow[4]);
                    
                    
                    d.addRow(v2);
                }
                
            } catch (Exception e) {
                System.out.println(e.toString());
                System.out.println("error in mouse clicked ...");
            }
            
        }
    }//GEN-LAST:event_visitsTable1MouseClicked

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_jLabel41MouseClicked

    private void backgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseClicked
        Point point = evt.getPoint(); // get the cursor position relative to the panel
        int x = point.x; // get the x coordinate of the cursor
        int y = point.y; 
        System.out.println("coordinates : "+x +", "+y);
        if (x >= 33 && x <= 46 && y <= 134 && y >= 118) {
            toothLbl1.setVisible(!toothLbl1.isVisible());
        } else if (x >= 30 && x <= 46 && y <= 116 && y >= 99) {
            toothLbl2.setVisible(!toothLbl2.isVisible());
        } else if (x >= 34 && x <= 49 && y <= 98 && y >= 84) {
            toothLbl3.setVisible(!toothLbl3.isVisible());
        } else if (x >= 37 && x <= 55 && y <= 80 && y >= 69) {
            toothLbl4.setVisible(!toothLbl4.isVisible());
        } else if (x >= 46 && x <= 62 && y <= 66 && y >= 55) {
            toothLbl5.setVisible(!toothLbl5.isVisible());
        } else if (x >= 54 && x <= 69 && y <= 51 && y >= 45) {
            toothLbl6.setVisible(!toothLbl6.isVisible());
        } else if (x >= 62 && x <= 79 && y <= 42 && y >= 31) {
            toothLbl7.setVisible(!toothLbl7.isVisible());
        } else if (x >= 80 && x <= 97 && y <= 41 && y >= 20) {
            toothLbl8.setVisible(!toothLbl8.isVisible());
        } else if (x >= 97 && x <= 115 && y <= 42 && y >= 23) {
            toothLbl9.setVisible(!toothLbl9.isVisible());
        } else if (x >= 114 && x <= 131 && y <= 46 && y >= 32) {
            toothLbl10.setVisible(!toothLbl10.isVisible());
        } else if (x >= 124 && x <= 137 && y <= 57 && y >= 42) {
            toothLbl11.setVisible(!toothLbl11.isVisible());
        } else if (x >= 132 && x <= 143 && y <= 69 && y >= 50) {
            toothLbl12.setVisible(!toothLbl12.isVisible());
        } else if (x >= 138 && x <= 151 && y <= 84 && y >= 65) {
            toothLbl13.setVisible(!toothLbl13.isVisible());
        } else if (x >= 143 && x <= 160 && y <= 100 && y >= 81) {
            toothLbl14.setVisible(!toothLbl14.isVisible());
        } else if (x >= 145 && x <= 164 && y <= 115 && y >= 98) {
            toothLbl15.setVisible(!toothLbl15.isVisible());
        } else if (x >= 142 && x <= 164 && y <= 134 && y >= 117) {
            toothLbl16.setVisible(!toothLbl16.isVisible());
        } else if (x >= 146 && x <= 163 && y <= 197 && y >= 177) {
            toothLbl17.setVisible(!toothLbl17.isVisible());
        } else if (x >= 147 && x <= 163 && y <= 216 && y >= 197) {
            toothLbl18.setVisible(!toothLbl18.isVisible());
        } else if (x >= 147 && x <= 163 && y <= 216 && y >= 197) {
            toothLbl18.setVisible(!toothLbl18.isVisible());
        } else if (x >= 143 && x <= 160 && y <= 231 && y >= 217) {
            toothLbl19.setVisible(!toothLbl19.isVisible());
        } else if (x >= 135 && x <= 155 && y <= 248 && y >= 234) {
            toothLbl20.setVisible(!toothLbl20.isVisible());
        } else if (x >= 125 && x <= 141 && y <= 261 && y >= 249) {
            toothLbl21.setVisible(!toothLbl21.isVisible());
        } else if (x >= 120 && x <= 130 && y <= 274 && y >= 261) {
            toothLbl22.setVisible(!toothLbl22.isVisible());
        } else if (x >= 110 && x <= 118 && y <= 282 && y >= 267) {
            toothLbl23.setVisible(!toothLbl23.isVisible());
        } else if (x >= 98 && x <= 108 && y <= 282 && y >= 268) {
            toothLbl24.setVisible(!toothLbl24.isVisible());
        } else if (x >= 84 && x <= 98 && y <= 283 && y >= 271) {
            toothLbl25.setVisible(!toothLbl25.isVisible());
        } else if (x >= 72 && x <= 86 && y <= 277 && y >= 267) {
            toothLbl26.setVisible(!toothLbl26.isVisible());
        } else if (x >= 62 && x <= 76 && y <= 274 && y >= 262) {
            toothLbl27.setVisible(!toothLbl27.isVisible());
        } else if (x >= 53 && x <= 67 && y <= 263 && y >= 247) {
            toothLbl28.setVisible(!toothLbl28.isVisible());
        } else if (x >= 43 && x <= 58 && y <= 250 && y >= 232) {
            toothLbl29.setVisible(!toothLbl29.isVisible());
        } else if (x >= 36 && x <= 50 && y <= 234 && y >= 214) {
            toothLbl30.setVisible(!toothLbl30.isVisible());
        } else if (x >= 33 && x <= 48 && y <= 218 && y >= 198) {
            toothLbl31.setVisible(!toothLbl31.isVisible());
        } else if (x >= 28 && x <= 50 && y <= 197 && y >= 177) {
            toothLbl32.setVisible(!toothLbl32.isVisible());
        } 


        
    }//GEN-LAST:event_backgroundMouseClicked

    private void termineComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termineComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_termineComboActionPerformed

    private void searchTypeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchTypeComboItemStateChanged
        System.out.println(searchTypeCombo.getSelectedIndex());
        
        switch (searchTypeCombo.getSelectedIndex()) {
            case 0:
                searchFieldPanel.removeAll();
                searchFieldPanel.add(nom_prenomSearch);
                searchFieldPanel.repaint();
                searchFieldPanel.revalidate();
                System.out.println("painted nom prenom");
                break;
            case 1:
                searchFieldPanel.removeAll();
                searchFieldPanel.add(actSearch);
                searchFieldPanel.repaint();
                searchFieldPanel.revalidate();
                
                break;
            case 2:
                searchFieldPanel.removeAll();
                searchFieldPanel.add(priceSearch);
                searchFieldPanel.repaint();
                searchFieldPanel.revalidate();
                System.out.println("painted admin search ");
                break;         
            default:
                break;
        }
    }//GEN-LAST:event_searchTypeComboItemStateChanged

    private void actDentSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actDentSearchFieldKeyReleased

        /*setting up the visits table */
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_actDentSearchFieldKeyReleased

    private void jLabel46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel46MouseClicked
        dateFieldPanel.removeAll();
        dateFieldPanel.add(dateSearch);
        dateFieldPanel.repaint();
        dateFieldPanel.revalidate();
    }//GEN-LAST:event_jLabel46MouseClicked

    private void jLabel47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseClicked
        dateFieldPanel.removeAll();
        dateFieldPanel.add(noDateSearch);
        dateFieldPanel.repaint();
        dateFieldPanel.revalidate();
    }//GEN-LAST:event_jLabel47MouseClicked

    private void actDentSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actDentSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actDentSearchFieldActionPerformed

    private void operationsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_operationsComboBoxItemStateChanged
        try {
            currActCost = UQM.getOperationCostByName(dbc , operationsComboBox.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.emptyTeethpanel(teethpanel);
        UIC.emptyTeethpanel(babyTeethPanel);
        
        
    }//GEN-LAST:event_operationsComboBoxItemStateChanged

    private void nomSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomSearchFieldKeyReleased
        /*setting up the visits table */
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
        
    }//GEN-LAST:event_nomSearchFieldKeyReleased

    private void jLabel48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel48MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_jLabel48MouseClicked

    private void jLabel50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel50MouseClicked
        try {
            PopUp ppup = new PopUp("client", dbc , 0);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel50MouseClicked

    private void clientsSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientsSearchKeyReleased
        String[] searchResult = new String[6];
        try {
            searchResult = UQM.getDetailedClientsResults(dbc , clientsSearch.getText() );
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        UIC.paintPatientsTable(clientsTable, searchResult);
    }//GEN-LAST:event_clientsSearchKeyReleased

    private void consultPatientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultPatientsMouseClicked
        parentPanel.removeAll();
        parentPanel.add(patientsPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_consultPatientsMouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void newVisitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newVisitMouseExited
        newVisit.setBackground(new Color(247,247,247));
        
    }//GEN-LAST:event_newVisitMouseExited

    private void consultPatientsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultPatientsMouseExited
        consultPatients.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_consultPatientsMouseExited

    private void visitsListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsListMouseExited
        visitsList.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_visitsListMouseExited

    private void newClientMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClientMouseExited
        newClient.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newClientMouseExited

    private void newOpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOpMouseExited
        newOp.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newOpMouseExited

    private void newAdminMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdminMouseExited
        newAdmin.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newAdminMouseExited

    private void newVisitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newVisitMouseEntered
        newVisit.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newVisitMouseEntered

    private void consultPatientsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultPatientsMouseEntered
        consultPatients.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_consultPatientsMouseEntered

    private void visitsListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsListMouseEntered
        visitsList.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_visitsListMouseEntered

    private void newClientMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClientMouseEntered
        newClient.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newClientMouseEntered

    private void newOpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOpMouseEntered
        newOp.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newOpMouseEntered

    private void newAdminMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdminMouseEntered
        newAdmin.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newAdminMouseEntered

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        try {
            //selected teet indexes
            PopUp ppup = new PopUp("facture" , dbc  , 0);
            ppup.setLocationRelativeTo(this);
            ppup.setVisible(true);
            System.out.println("the new client button is clicked ");
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jPanel2MouseClicked

    private void background1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_background1MouseClicked
        Point point = evt.getPoint(); // get the cursor position relative to the panel
        int x = point.x; // get the x coordinate of the cursor
        int y = point.y; 
        System.out.println("baby coordinates : "+x +", "+y);
        
        if (x >= 25 && x <= 50 && y >= 108 && y <= 132) {
            babytoothLbl1.setVisible(!babytoothLbl1.isVisible());
        } else if (x >= 32 && x <= 56 && y >= 88 && y <= 106) {
            babytoothLbl2.setVisible(!babytoothLbl2.isVisible());
        } else if (x >= 44 && x <= 65 && y >= 68 && y <= 82) {
            babytoothLbl3.setVisible(!babytoothLbl3.isVisible());
        } else if (x >= 58 && x <= 76 && y >= 52 && y <= 68) {
            babytoothLbl4.setVisible(!babytoothLbl4.isVisible());
        } else if (x >= 77 && x <= 95 && y >= 44 && y <= 67) {
            babytoothLbl5.setVisible(!babytoothLbl5.isVisible());
        } else if (x >= 94 && x <= 114 && y >= 45 && y <= 69) {
            babytoothLbl6.setVisible(!babytoothLbl6.isVisible());
        } else if (x >= 110 && x <= 130 && y >= 50 && y <= 73) {
            babytoothLbl7.setVisible(!babytoothLbl7.isVisible());
        } else if (x >= 124 && x <= 142 && y >= 66 && y <= 88) {
            babytoothLbl8.setVisible(!babytoothLbl8.isVisible());
        } else if (x >= 134 && x <= 156 && y >= 82 && y <= 109) {
            babytoothLbl9.setVisible(!babytoothLbl9.isVisible());
        } else if (x >= 141 && x <= 164 && y >= 104 && y <= 131) {
            babytoothLbl10.setVisible(!babytoothLbl10.isVisible());
        } else if (x >= 139 && x <= 166 && y >= 175 && y <= 200) {
            babytoothLbl11.setVisible(!babytoothLbl11.isVisible());
        } else if (x >= 132 && x <= 157 && y >= 203 && y <= 224) {
            babytoothLbl12.setVisible(!babytoothLbl12.isVisible());
        } else if (x >= 121 && x <= 140 && y >= 226 && y <= 236) {
            babytoothLbl13.setVisible(!babytoothLbl13.isVisible());
        } else if (x >= 113 && x <= 125 && y >= 235 && y <= 257) {
            babytoothLbl14.setVisible(!babytoothLbl14.isVisible());
        } else if ((x >= 76 && x <= 112 && y >= 236 && y <= 258) || (x >= 112 && x <= 125 && y >= 235 && y <= 236)) {
            babytoothLbl15.setVisible(!babytoothLbl15.isVisible());
        } else if (x >= 59 && x <= 95 && y >= 237 && y <= 252) {
            babytoothLbl16.setVisible(!babytoothLbl16.isVisible());
        } else if (x >= 57 && x <= 78 && y >= 238 && y <= 253) {
            babytoothLbl17.setVisible(!babytoothLbl17.isVisible());
        } else if (x >= 47 && x <= 65 && y >= 223 && y <= 239) {
            babytoothLbl18.setVisible(!babytoothLbl18.isVisible());
        } else if (x >= 36 && x <= 54 && y >= 200 && y <= 224) {
            babytoothLbl19.setVisible(!babytoothLbl19.isVisible());
        } else if (x >= 26 && x <= 46 && y >= 174 && y <= 201) {
            babytoothLbl20.setVisible(!babytoothLbl20.isVisible());
        }
    }//GEN-LAST:event_background1MouseClicked

    private void jLabel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel61MouseClicked
        
        
        
        if(teethpanel.isVisible()){
            
            teethpanel.setVisible(false);
            allTeethPanel.removeAll();
            allTeethPanel.add(babyTeethPanel);
            allTeethPanel.repaint();
            allTeethPanel.revalidate();  
            babyTeethPanel.setVisible(true);
        }else{
            
            babyTeethPanel.setVisible(false);
            allTeethPanel.removeAll();
            allTeethPanel.add(teethpanel);
            allTeethPanel.repaint();
            allTeethPanel.revalidate();   
            teethpanel.setVisible(true);
        
        }
        
        
        
        
    }//GEN-LAST:event_jLabel61MouseClicked

    private void priceTFMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_priceTFMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTFMouseWheelMoved

    private void priceTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceTFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTFMouseClicked

    private void termineRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termineRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_termineRadioActionPerformed

    private void clientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)clientsTable.getModel();
        int selectedRowIndex = clientsTable.getSelectedRow();
        try {
            curClient = UQM.currentClient(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        clientTextAreaFetch.setText(curClient.notes);
        
        
        
        
    }//GEN-LAST:event_clientsTableMouseClicked

    private void searchFieldPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldPanelMouseClicked
        String[] searchResult = new String[8] ;
                
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate() ,  termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);  
        System.out.println("panel mouse Clicked");
    }//GEN-LAST:event_searchFieldPanelMouseClicked

    private void searchFieldPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldPanelKeyPressed
        String[] searchResult = new String[8] ;
                
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate() ,  termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel); 
        System.out.println("panel clicked");
    }//GEN-LAST:event_searchFieldPanelKeyPressed

    private void warningLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warningLabelMouseClicked
        
        String[] myArray = new String[1];
        
        myArray[0] = String.valueOf(curClient.id)+":::"+curClient.nom+":::"+curClient.prenom+"::: "+curClient.adresse+":::"+curClient.num_tel+":::"+"---------";
        if(evt.getClickCount() == 2){
            parentPanel.removeAll();
            parentPanel.add(patientsPanel);
            parentPanel.repaint();
            parentPanel.revalidate();
            
            UIC.paintPatientsTable(clientsTable, myArray);
            clientTextAreaFetch.setText(curClient.notes);
        }
        
        
        
    }//GEN-LAST:event_warningLabelMouseClicked

    private void searchTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTypeComboActionPerformed

    private void personFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personFilterMouseClicked
        nomSearchField.setText(""); prenomSearchField.setText("") ;
        personFilter.setVisible(false);
        
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_personFilterMouseClicked

    private void actFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actFilterMouseClicked
        
        actDentSearchField.setText("");
        actFilter.setVisible(false);
        
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_actFilterMouseClicked

    private void cashFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashFilterMouseClicked
        minPriceSpinner.setValue(0);
        maxPriceSpinner.setValue(10000);
        
        cashFilter.setVisible(false);
        
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
        
    }//GEN-LAST:event_cashFilterMouseClicked

    private void prenomSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prenomSearchFieldKeyReleased
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_prenomSearchFieldKeyReleased

    private void actSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_actSearchFocusGained
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_actSearchFocusGained

    private void minPriceSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minPriceSpinnerStateChanged
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_minPriceSpinnerStateChanged

    private void maxPriceSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxPriceSpinnerStateChanged
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_maxPriceSpinnerStateChanged

    private void priceSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceSearchFocusGained
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_priceSearchFocusGained

    private void priceSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceSearchMouseClicked
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_priceSearchMouseClicked

    private void notesTextAreaNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_notesTextAreaNVFocusGained
        notesTextAreaNV.setFont(new Font("Arial", Font.PLAIN, 12));
        notesTextAreaNV.setForeground(Color.BLACK);
        notesTextAreaNV.setText("");
        
    }//GEN-LAST:event_notesTextAreaNVFocusGained

    private void notesTextAreaNVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_notesTextAreaNVFocusLost
        notesTextAreaNV.setFont(new Font("Arial", Font.BOLD, 16));
        notesTextAreaNV.setForeground(Color.GRAY);
        notesTextAreaNV.setText("                                \n" +
"                                   laisser une remarque");
    }//GEN-LAST:event_notesTextAreaNVFocusLost

    private void notesTextAreaNV1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_notesTextAreaNV1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_notesTextAreaNV1FocusGained

    private void notesTextAreaNV1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_notesTextAreaNV1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_notesTextAreaNV1FocusLost

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jLabel49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel49MouseClicked
        
        if (clientsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner un patient");
        } else {
            try {
                PopUp ppup = new PopUp("client", dbc , curClient.id);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel49MouseClicked

    private void newClient1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClient1MouseClicked
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newClient1MouseClicked

    private void newClient1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClient1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_newClient1MouseEntered

    private void newClient1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClient1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_newClient1MouseExited

    private void newOp1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOp1MouseClicked
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newOp1MouseClicked

    private void newOp1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOp1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_newOp1MouseEntered

    private void newOp1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOp1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_newOp1MouseExited

    private void newAdmin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin1MouseClicked
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newAdmin1MouseClicked

    private void newAdmin1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_newAdmin1MouseEntered

    private void newAdmin1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_newAdmin1MouseExited

    private void jLabel51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel51MouseClicked
        if (clientsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner un patient");
        } else {
            int confirmed = JOptionPane.showConfirmDialog(null, "la suppression de cet utilisateur supprimera toutes les informations \n "
                    + "le concernant, ainsi que les sessions qu'il a faites , êtes-vous sûr de vouloir continuer ?", "Confirmation", JOptionPane.YES_NO_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                 try {
                    UQM.deleteClient(dbc, curClient.id);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
            
        }        
    }//GEN-LAST:event_jLabel51MouseClicked

    private void searchPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchPanelMouseClicked
        System.out.println("panel exists");
    }//GEN-LAST:event_searchPanelMouseClicked
    
    private void connectToDataBase() {
        
        try
        {
            CON = DriverManager.getConnection("jdbc:mysql://localhost:3306/clinicdatabase" ,"aymen" , "aymenhhh");
        } catch ( SQLException e)
            {
                System.out.println("mainFrame couldnt connect !");
                System.out.println(e.getMessage());
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame(dbc , admin.name).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actDentSearchField;
    private javax.swing.JLabel actFilter;
    private javax.swing.JPanel actSearch;
    private javax.swing.JPanel allTeethPanel;
    private javax.swing.JPanel babyTeethPanel;
    private javax.swing.JLabel babytoothLbl1;
    private javax.swing.JLabel babytoothLbl10;
    private javax.swing.JLabel babytoothLbl11;
    private javax.swing.JLabel babytoothLbl12;
    private javax.swing.JLabel babytoothLbl13;
    private javax.swing.JLabel babytoothLbl14;
    private javax.swing.JLabel babytoothLbl15;
    private javax.swing.JLabel babytoothLbl16;
    private javax.swing.JLabel babytoothLbl17;
    private javax.swing.JLabel babytoothLbl18;
    private javax.swing.JLabel babytoothLbl19;
    private javax.swing.JLabel babytoothLbl2;
    private javax.swing.JLabel babytoothLbl20;
    private javax.swing.JLabel babytoothLbl3;
    private javax.swing.JLabel babytoothLbl4;
    private javax.swing.JLabel babytoothLbl5;
    private javax.swing.JLabel babytoothLbl6;
    private javax.swing.JLabel babytoothLbl7;
    private javax.swing.JLabel babytoothLbl8;
    private javax.swing.JLabel babytoothLbl9;
    private javax.swing.JLabel background;
    private javax.swing.JLabel background1;
    private javax.swing.JLabel cashFilter;
    private javax.swing.JTextField clientSearchBar;
    private javax.swing.JTextArea clientTextAreaFetch;
    private javax.swing.JTextField clientsSearch;
    private javax.swing.JTable clientsTable;
    private javax.swing.JPanel consultPatients;
    private javax.swing.JPanel consultationsPanel;
    private javax.swing.JPanel dateFieldPanel;
    private javax.swing.JPanel dateSearch;
    private javax.swing.JPanel detailedVisitPanel;
    private javax.swing.JDialog dialogBox;
    private javax.swing.JPanel homePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JPanel mainContainer;
    private com.github.lgooddatepicker.components.DatePicker maxDatePicker;
    private javax.swing.JSpinner maxPriceSpinner;
    private com.github.lgooddatepicker.components.DatePicker minDatePicker;
    private javax.swing.JSpinner minPriceSpinner;
    private javax.swing.JPanel newAdmin;
    private javax.swing.JPanel newAdmin1;
    private javax.swing.JPanel newClient;
    private javax.swing.JPanel newClient1;
    private javax.swing.JPanel newOp;
    private javax.swing.JPanel newOp1;
    private javax.swing.JPanel newSeanceSect;
    private javax.swing.JPanel newVisit;
    private javax.swing.JPanel newVisitSect;
    private javax.swing.JPanel noDateSearch;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JTextField nomSearchField;
    private javax.swing.JPanel nom_prenomSearch;
    private javax.swing.JTextArea notesTextAreaNV;
    private javax.swing.JTextArea notesTextAreaNV1;
    private javax.swing.JComboBox<String> operationsComboBox;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JPanel patientsPanel;
    private javax.swing.JLabel personFilter;
    private javax.swing.JLabel prenomLabel;
    private javax.swing.JTextField prenomSearchField;
    private javax.swing.JPanel priceSearch;
    private javax.swing.JSpinner priceTF;
    private javax.swing.JLabel procedureLabel;
    private javax.swing.JButton quitBtn;
    private javax.swing.JButton savebtn;
    private javax.swing.JPanel seancesPanel;
    private javax.swing.JTable seancesTable;
    private javax.swing.JPanel searchFieldPanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> searchTypeCombo;
    private javax.swing.JPanel searchTypePanel;
    private javax.swing.JPanel teethpanel;
    private javax.swing.JComboBox<String> termineCombo;
    private javax.swing.JCheckBox termineRadio;
    private javax.swing.JCheckBox termineradio1;
    private javax.swing.JLabel time;
    private javax.swing.JLabel toothLbl1;
    private javax.swing.JLabel toothLbl10;
    private javax.swing.JLabel toothLbl11;
    private javax.swing.JLabel toothLbl12;
    private javax.swing.JLabel toothLbl13;
    private javax.swing.JLabel toothLbl14;
    private javax.swing.JLabel toothLbl15;
    private javax.swing.JLabel toothLbl16;
    private javax.swing.JLabel toothLbl17;
    private javax.swing.JLabel toothLbl18;
    private javax.swing.JLabel toothLbl19;
    private javax.swing.JLabel toothLbl2;
    private javax.swing.JLabel toothLbl20;
    private javax.swing.JLabel toothLbl21;
    private javax.swing.JLabel toothLbl22;
    private javax.swing.JLabel toothLbl23;
    private javax.swing.JLabel toothLbl24;
    private javax.swing.JLabel toothLbl25;
    private javax.swing.JLabel toothLbl26;
    private javax.swing.JLabel toothLbl27;
    private javax.swing.JLabel toothLbl28;
    private javax.swing.JLabel toothLbl29;
    private javax.swing.JLabel toothLbl3;
    private javax.swing.JLabel toothLbl30;
    private javax.swing.JLabel toothLbl31;
    private javax.swing.JLabel toothLbl32;
    private javax.swing.JLabel toothLbl4;
    private javax.swing.JLabel toothLbl5;
    private javax.swing.JLabel toothLbl6;
    private javax.swing.JLabel toothLbl7;
    private javax.swing.JLabel toothLbl8;
    private javax.swing.JLabel toothLbl9;
    private javax.swing.JSpinner updatePrice;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTable usersTable;
    private javax.swing.JPanel visitPanel;
    private javax.swing.JPanel visitTypeCards;
    private javax.swing.JPanel visitsList;
    private javax.swing.JTable visitsTable;
    private javax.swing.JTable visitsTable1;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
//timer 
void displayTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat(" MMM d,  HH:mm");
                time.setText(s.format(d));
            }

        }).start();
    }


void adminNameFade() {
        new Timer(5000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                setTitle("");
            }

        }).start();
    }

public static int[] getVisibleComponentIndexes(Container container) {
    Component[] components = container.getComponents() ;
    int count = 0;
    for (Component component : components) {
        if (component.isVisible()) {
            count++;
        }
    }
    // minus one because that's the background and it's always set to visible
    int[] indexes = new int[count-1];
    int index = 0;
    int tooth  ;
    for (int i = 0; i < components.length -1 ; i++) {
        if (components[i].isVisible()) {
            tooth = Integer.parseInt( components[i].getName());
            indexes[index] = tooth;
            index++;
        }
    }
    return indexes;
}
//cell render component code : 

public class CustomCellRenderer extends DefaultTableCellRenderer {
  @Override
  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    
    Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
   
    
    if(column == 6 ){
        
        Object tm = table.getModel().getValueAt(row, column);
        if (tm != null) {
            //because when the first table is initialized the values are null and it raises exception
            
             String termine = tm.toString();
             int termine_int = Integer.parseInt(termine);
            Color color = null ;
             if (termine_int == 1) {
                 color =  new Color(52, 235, 94);
            } else {
            color = new Color(251, 255, 125);
            }
             
            cellComponent.setBackground(color);
        } 
        
    }else {
        
        cellComponent.setBackground(Color.WHITE);
        if (isSelected) {
            cellComponent.setBackground(new Color(184, 207, 229));
         } else {
            cellComponent.setBackground(table.getBackground());
        }
    }
    // when it's selected 
    
    
    return cellComponent;
  }
}

}




/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinicd;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar ;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.ListModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author aymen
 */
public class mainFrame extends javax.swing.JFrame implements PopupListener{

    /**
     * Creates new form mainFrame
     */
    public Connection CON ;
    static private DBconnection dbc;
    static Admin admin = new Admin();
    static Admin modifAdmin = new Admin();
    static Client curClient = new Client();
    static act currAct = new act();
    static Seance currSeance = new Seance();
    static Consultation currCons = new Consultation();
    static Facture currFact = new Facture() ;
    
    
    public mainFrame(DBconnection dbc , String adminName) throws SQLException {
        
        admin =  UQM.currentAdmin(dbc, adminName) ;
        
        this.dbc = dbc ;
        initComponents();
        
        connectToDataBase();
        displayTime();
        adminNameFade();
        try {
            UQM.updateCombo(operationsComboBox , dbc );
            UQM.updateCombo(operationsComboBox1 , dbc);
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(parentPanel, ex);
        }
        
    }
    static uiController UIC = new uiController();
    UserQueryManager UQM = new UserQueryManager();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogBox = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        time = new javax.swing.JLabel();
        parentPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        mainContainer = new javax.swing.JPanel();
        newVisit = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        newClient = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        consultPatients = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        newOp1 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        newOp = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        visitsList = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        newAdmin1 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        newAdmin = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        newClient1 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        newAdmin2 = new javax.swing.JPanel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel11 = new roundEdgeRec(   new Color( 255 , 255,255 ),20);
        backupText = new javax.swing.JLabel();
        patientsPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        clientsSearch = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        clientTextAreaFetch = new javax.swing.JTextArea();
        detailedVisitPanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        termineCombo = new javax.swing.JComboBox<>();
        searchTypeCombo = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        searchFieldPanel = new javax.swing.JPanel();
        nom_prenomSearch = new roundEdgeRec(new Color(230,255,230), 30);
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        nomSearchField = new javax.swing.JTextField();
        prenomSearchField = new javax.swing.JTextField();
        priceSearch = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        SpinnerModel model3 = new SpinnerNumberModel(0, 0, 100000, 500);
        minPriceSpinner = new javax.swing.JSpinner(model3);
        SpinnerModel model4 = new SpinnerNumberModel(10000, 0, 100000, 500);
        maxPriceSpinner = new javax.swing.JSpinner(model4);
        actSearch = new javax.swing.JPanel();
        actDentSearchField = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        dateFieldPanel = new javax.swing.JPanel();
        nothing = new javax.swing.JPanel();
        dateSearch = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        minDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        maxDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        actFilter = new javax.swing.JLabel();
        cashFilter = new javax.swing.JLabel();
        personFilter = new javax.swing.JLabel();
        calLabel = new javax.swing.JLabel();
        searchTypePanel = new javax.swing.JPanel();
        consultationsPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        modifyClientTextField = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        modifyTermine = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        modifyDentsTextField = new javax.swing.JTextField();
        suggestionList = new javax.swing.JList<>();
        SpinnerModel model123 = new SpinnerNumberModel(0, 0, 10000, 500);
        coutFinalSpinner = new javax.swing.JSpinner(model123);
        jLabel95 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        visitsTable1 = new javax.swing.JTable();
        seancesPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        seancesTable = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        SpinnerModel model55 = new SpinnerNumberModel(0, 0, 100000, 500);
        seanceMontant = new javax.swing.JSpinner(model55);
        jLabel31 = new javax.swing.JLabel();
        modifyActConsCombo = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        seanceRemarque = new javax.swing.JTextArea();
        actsPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        actsTable = new javax.swing.JTable();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        actsSearch = new javax.swing.JTextField();
        adminsPanel = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        rightsTable = new javax.swing.JTable();
        apercusPanel = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        apercu4 = new javax.swing.JLabel();
        apercu3 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        apercu5 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        apercu6 = new javax.swing.JLabel();
        apercu7 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        apercu1 = new javax.swing.JLabel();
        apercu2 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        visitPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        clientSearchBar = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        visitsTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        warningLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        resteLabel = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        procedureLabel = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        prenomLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        nomLabel = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        visitTypeCards = new javax.swing.JPanel(){
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Dimension arcs = new Dimension(50, 50);
                int width = getWidth();
                int height = getHeight();
                Graphics2D graphics = (Graphics2D) g;
                graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                //Draws the rounded panel with borders.
                graphics.setColor(new Color(242,242,242));

                graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint background
                graphics.setColor(getForeground());
                graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
            }
        };
        newVisitSect = new roundEdgeRec(new Color(217,242,250) , 50);
        operationsComboBox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        savebtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        notesTextAreaNV = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        SpinnerModel model2 = new SpinnerNumberModel(0, 0, 100000, 500);
        priceTF = new javax.swing.JSpinner(model2);
        termineRadio = new javax.swing.JCheckBox();
        jLabel89 = new javax.swing.JLabel();
        SpinnerModel model99 = new SpinnerNumberModel(0, 0, 100000, 500);
        priceFinalTF = new javax.swing.JSpinner(model99);
        jLabel91 = new javax.swing.JLabel();
        jPanel3 = new roundEdgeRec(new Color(185, 234, 250) , 30);
        jLabel105 = new javax.swing.JLabel();
        newSeanceSect = new roundEdgeRec(new Color(170, 195, 240) , 50);
        SpinnerModel model9 = new SpinnerNumberModel(0, 0, 10000, 500);
        updatePrice = new javax.swing.JSpinner(model9);
        jLabel38 = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        termineradio1 = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        notesTextAreaNV1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel90.setVisible(false);
        jLabel92 = new javax.swing.JLabel();
        operationsComboBox1 = new javax.swing.JComboBox<>();
        jLabel94 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jPanel10 = new roundEdgeRec(new Color(137, 186, 201) , 30);
        jLabel107 = new javax.swing.JLabel();
        doneSect = new roundEdgeRec(new Color(204,255,204)  , 50);
        jLabel46 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        allTeethPanel = new javax.swing.JPanel();
        teethpanel = new javax.swing.JPanel();
        toothLbl1 = new javax.swing.JLabel();
        toothLbl2 = new javax.swing.JLabel();
        toothLbl3 = new javax.swing.JLabel();
        toothLbl4 = new javax.swing.JLabel();
        toothLbl5 = new javax.swing.JLabel();
        toothLbl6 = new javax.swing.JLabel();
        toothLbl7 = new javax.swing.JLabel();
        toothLbl8 = new javax.swing.JLabel();
        toothLbl9 = new javax.swing.JLabel();
        toothLbl10 = new javax.swing.JLabel();
        toothLbl11 = new javax.swing.JLabel();
        toothLbl12 = new javax.swing.JLabel();
        toothLbl13 = new javax.swing.JLabel();
        toothLbl14 = new javax.swing.JLabel();
        toothLbl15 = new javax.swing.JLabel();
        toothLbl16 = new javax.swing.JLabel();
        toothLbl17 = new javax.swing.JLabel();
        toothLbl18 = new javax.swing.JLabel();
        toothLbl19 = new javax.swing.JLabel();
        toothLbl20 = new javax.swing.JLabel();
        toothLbl21 = new javax.swing.JLabel();
        toothLbl22 = new javax.swing.JLabel();
        toothLbl23 = new javax.swing.JLabel();
        toothLbl24 = new javax.swing.JLabel();
        toothLbl25 = new javax.swing.JLabel();
        toothLbl26 = new javax.swing.JLabel();
        toothLbl27 = new javax.swing.JLabel();
        toothLbl28 = new javax.swing.JLabel();
        toothLbl29 = new javax.swing.JLabel();
        toothLbl30 = new javax.swing.JLabel();
        toothLbl31 = new javax.swing.JLabel();
        toothLbl32 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        babyTeethPanel = new javax.swing.JPanel();
        babytoothLbl1 = new javax.swing.JLabel();
        babytoothLbl2 = new javax.swing.JLabel();
        babytoothLbl3 = new javax.swing.JLabel();
        babytoothLbl4 = new javax.swing.JLabel();
        babytoothLbl5 = new javax.swing.JLabel();
        babytoothLbl6 = new javax.swing.JLabel();
        babytoothLbl7 = new javax.swing.JLabel();
        babytoothLbl8 = new javax.swing.JLabel();
        babytoothLbl9 = new javax.swing.JLabel();
        babytoothLbl10 = new javax.swing.JLabel();
        babytoothLbl11 = new javax.swing.JLabel();
        babytoothLbl12 = new javax.swing.JLabel();
        babytoothLbl13 = new javax.swing.JLabel();
        babytoothLbl14 = new javax.swing.JLabel();
        babytoothLbl15 = new javax.swing.JLabel();
        babytoothLbl16 = new javax.swing.JLabel();
        babytoothLbl17 = new javax.swing.JLabel();
        babytoothLbl18 = new javax.swing.JLabel();
        babytoothLbl19 = new javax.swing.JLabel();
        babytoothLbl20 = new javax.swing.JLabel();
        background1 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        facturesPanel = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        facturesTable = new javax.swing.JTable();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        facturesSearch = new javax.swing.JTextField();
        jLabel104 = new javax.swing.JLabel();
        depenseMois = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("add new operation");
        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "500 da", "1000 da", "1500 da", "2000 da" }));

        jLabel2.setText("nom d'operation");

        jLabel3.setText("prix par default");

        jLabel4.setText("description");

        jButton1.setText("save");

        jButton2.setText("discard");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogBoxLayout = new javax.swing.GroupLayout(dialogBox.getContentPane());
        dialogBox.getContentPane().setLayout(dialogBoxLayout);
        dialogBoxLayout.setHorizontalGroup(
            dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogBoxLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(83, 83, 83))
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(dialogBoxLayout.createSequentialGroup()
                        .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(58, 58, 58))
        );
        dialogBoxLayout.setVerticalGroup(
            dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(49, 49, 49)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPopupMenu.setMinimumSize(new java.awt.Dimension(50, 100));

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-edit-24.png"))); // NOI18N
        jMenuItem1.setText("modifie informations generales ( patient /dents / cout finale / etat )");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-edit-24.png"))); // NOI18N
        jMenuItem2.setText("modifier les détails des séances( acte dentaire/ montant paye / remarques )");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItem2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-delete-trash-24.png"))); // NOI18N
        jMenuItem3.setText("supprimer cette visite");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("*** bienvenue "+admin.name+ " ***");
        setBackground(new java.awt.Color(153, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time.setText("Sep 27  02 : 37");
        time.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        time.setFont(new java.awt.Font("Dyuthi", 0, 18)); // NOI18N
        time.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        parentPanel.setLayout(new java.awt.CardLayout());

        homePanel.setPreferredSize(new java.awt.Dimension(960, 600));

        newVisit.setBackground(new java.awt.Color(247, 247, 247));
        newVisit.setPreferredSize(new java.awt.Dimension(170, 170));
        newVisit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newVisitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newVisitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newVisitMouseExited(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("nouvelle visite");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/operation.png"))); // NOI18N

        javax.swing.GroupLayout newVisitLayout = new javax.swing.GroupLayout(newVisit);
        newVisit.setLayout(newVisitLayout);
        newVisitLayout.setHorizontalGroup(
            newVisitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newVisitLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        newVisitLayout.setVerticalGroup(
            newVisitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(12, 12, 12))
        );

        newClient.setBackground(new java.awt.Color(247, 247, 247));
        newClient.setName("gestionPatients"); // NOI18N
        newClient.setPreferredSize(new java.awt.Dimension(170, 170));
        newClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newClientMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newClientMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newClientMouseExited(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("nouveau patient");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customer.png"))); // NOI18N

        javax.swing.GroupLayout newClientLayout = new javax.swing.GroupLayout(newClient);
        newClient.setLayout(newClientLayout);
        newClientLayout.setHorizontalGroup(
            newClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        newClientLayout.setVerticalGroup(
            newClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newClientLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(23, 23, 23))
        );

        consultPatients.setBackground(new java.awt.Color(247, 247, 247));
        consultPatients.setName("gestionPatients"); // NOI18N
        consultPatients.setPreferredSize(new java.awt.Dimension(170, 170));
        consultPatients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consultPatientsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                consultPatientsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                consultPatientsMouseExited(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("détails des patients");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customers.png"))); // NOI18N

        javax.swing.GroupLayout consultPatientsLayout = new javax.swing.GroupLayout(consultPatients);
        consultPatients.setLayout(consultPatientsLayout);
        consultPatientsLayout.setHorizontalGroup(
            consultPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultPatientsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        consultPatientsLayout.setVerticalGroup(
            consultPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultPatientsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newOp1.setBackground(new java.awt.Color(247, 247, 247));
        newOp1.setName("gestionActs"); // NOI18N
        newOp1.setPreferredSize(new java.awt.Dimension(170, 170));
        newOp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newOp1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newOp1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newOp1MouseExited(evt);
            }
        });

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("gestions des acts");

        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/database-notfiler.png"))); // NOI18N
        jLabel63.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout newOp1Layout = new javax.swing.GroupLayout(newOp1);
        newOp1.setLayout(newOp1Layout);
        newOp1Layout.setHorizontalGroup(
            newOp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOp1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOp1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel39)
                .addGap(44, 44, 44))
        );
        newOp1Layout.setVerticalGroup(
            newOp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOp1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel39)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        newOp.setBackground(new java.awt.Color(247, 247, 247));
        newOp.setName("gestionActs"); // NOI18N
        newOp.setPreferredSize(new java.awt.Dimension(170, 170));
        newOp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newOpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newOpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newOpMouseExited(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("nouvel acte dentaire");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/op.png"))); // NOI18N
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout newOpLayout = new javax.swing.GroupLayout(newOp);
        newOp.setLayout(newOpLayout);
        newOpLayout.setHorizontalGroup(
            newOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        newOpLayout.setVerticalGroup(
            newOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOpLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(23, 23, 23))
        );

        visitsList.setBackground(new java.awt.Color(247, 247, 247));
        visitsList.setPreferredSize(new java.awt.Dimension(170, 170));
        visitsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsListMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                visitsListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                visitsListMouseExited(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("détails des visites");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/list.png"))); // NOI18N

        javax.swing.GroupLayout visitsListLayout = new javax.swing.GroupLayout(visitsList);
        visitsList.setLayout(visitsListLayout);
        visitsListLayout.setHorizontalGroup(
            visitsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitsListLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        visitsListLayout.setVerticalGroup(
            visitsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitsListLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        newAdmin1.setBackground(new java.awt.Color(247, 247, 247));
        newAdmin1.setName("gestionAdmins"); // NOI18N
        newAdmin1.setPreferredSize(new java.awt.Dimension(170, 170));
        newAdmin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAdmin1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newAdmin1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newAdmin1MouseExited(evt);
            }
        });

        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("gestion des admins");

        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel68.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/admina.png"))); // NOI18N

        javax.swing.GroupLayout newAdmin1Layout = new javax.swing.GroupLayout(newAdmin1);
        newAdmin1.setLayout(newAdmin1Layout);
        newAdmin1Layout.setHorizontalGroup(
            newAdmin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAdmin1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(newAdmin1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel67)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        newAdmin1Layout.setVerticalGroup(
            newAdmin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAdmin1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel67)
                .addGap(28, 28, 28))
        );

        newAdmin.setBackground(new java.awt.Color(247, 247, 247));
        newAdmin.setName("gestionAdmins"); // NOI18N
        newAdmin.setPreferredSize(new java.awt.Dimension(170, 170));
        newAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAdminMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newAdminMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newAdminMouseExited(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText(" nouvel admin");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-user.png"))); // NOI18N

        javax.swing.GroupLayout newAdminLayout = new javax.swing.GroupLayout(newAdmin);
        newAdmin.setLayout(newAdminLayout);
        newAdminLayout.setHorizontalGroup(
            newAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        newAdminLayout.setVerticalGroup(
            newAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAdminLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(23, 23, 23))
        );

        newClient1.setBackground(new java.awt.Color(247, 247, 247));
        newClient1.setName("voirApercus"); // NOI18N
        newClient1.setPreferredSize(new java.awt.Dimension(170, 170));
        newClient1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newClient1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newClient1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newClient1MouseExited(evt);
            }
        });

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("analytiques");

        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cash-in-hand.png"))); // NOI18N

        javax.swing.GroupLayout newClient1Layout = new javax.swing.GroupLayout(newClient1);
        newClient1.setLayout(newClient1Layout);
        newClient1Layout.setHorizontalGroup(
            newClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(newClient1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        newClient1Layout.setVerticalGroup(
            newClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newClient1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addGap(17, 17, 17))
        );

        newAdmin2.setBackground(new java.awt.Color(247, 247, 247));
        newAdmin2.setName("gestionAdmins"); // NOI18N
        newAdmin2.setPreferredSize(new java.awt.Dimension(170, 170));
        newAdmin2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAdmin2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newAdmin2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newAdmin2MouseExited(evt);
            }
        });

        jLabel97.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel97.setText("factures");

        jLabel98.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel98.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bill.png"))); // NOI18N

        javax.swing.GroupLayout newAdmin2Layout = new javax.swing.GroupLayout(newAdmin2);
        newAdmin2.setLayout(newAdmin2Layout);
        newAdmin2Layout.setHorizontalGroup(
            newAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel98, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
            .addComponent(jLabel97, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        newAdmin2Layout.setVerticalGroup(
            newAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAdmin2Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel97)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout mainContainerLayout = new javax.swing.GroupLayout(mainContainer);
        mainContainer.setLayout(mainContainerLayout);
        mainContainerLayout.setHorizontalGroup(
            mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContainerLayout.createSequentialGroup()
                .addComponent(newClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(newOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(newAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(newAdmin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(mainContainerLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainContainerLayout.createSequentialGroup()
                        .addComponent(consultPatients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(newOp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(newAdmin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainContainerLayout.createSequentialGroup()
                        .addComponent(newVisit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(visitsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(newClient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152))))
        );
        mainContainerLayout.setVerticalGroup(
            mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContainerLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newClient1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitsList, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newOp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newClient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newAdmin2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(newAdmin1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                        .addComponent(consultPatients, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                    .addComponent(newOp1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainContainerLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {newAdmin, newClient, newOp});

        newVisit.setToolTipText("pour ajouter une nouvelle visite ..");

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/turn-off.png"))); // NOI18N
        jLabel47.setText(" quitter");
        jLabel47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel47MouseClicked(evt);
            }
        });

        jPanel11.setForeground(new java.awt.Color(255, 255, 255));

        backupText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/data-backup.png"))); // NOI18N
        backupText.setText("back-up data");
        backupText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backupText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backupTextMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backupText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backupText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(mainContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2261, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addComponent(mainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(220, 220, 220))
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        parentPanel.add(homePanel, "card2");

        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "nom", "prenom", "adresse", "numero tel", "age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientsTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clientsTable.setRowHeight(27);
        clientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(clientsTable);
        if (clientsTable.getColumnModel().getColumnCount() > 0) {
            clientsTable.getColumnModel().getColumn(0).setMaxWidth(50);
            clientsTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            clientsTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            clientsTable.getColumnModel().getColumn(3).setPreferredWidth(160);
            clientsTable.getColumnModel().getColumn(4).setMinWidth(110);
            clientsTable.getColumnModel().getColumn(4).setMaxWidth(150);
            clientsTable.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel48MouseClicked(evt);
            }
        });

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel49MouseClicked(evt);
            }
        });

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addnew.png"))); // NOI18N
        jLabel50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel50MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel50MouseEntered(evt);
            }
        });

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel51MouseClicked(evt);
            }
        });

        jLabel52.setText("recherche :");
        jLabel52.setFont(new java.awt.Font("URW Palladio L", 0, 18)); // NOI18N

        clientsSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientsSearchKeyReleased(evt);
            }
        });

        jLabel53.setText("remarques : ");

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        clientTextAreaFetch.setColumns(20);
        clientTextAreaFetch.setEditable(false);
        clientTextAreaFetch.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        clientTextAreaFetch.setLineWrap(true);
        clientTextAreaFetch.setRows(6);
        clientTextAreaFetch.setForeground(new java.awt.Color(0, 51, 51));
        clientTextAreaFetch.setMargin(new java.awt.Insets(8, 10, 8, 10));
        jScrollPane9.setViewportView(clientTextAreaFetch);

        javax.swing.GroupLayout patientsPanelLayout = new javax.swing.GroupLayout(patientsPanel);
        patientsPanel.setLayout(patientsPanelLayout);
        patientsPanelLayout.setHorizontalGroup(
            patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientsPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clientsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(398, 398, 398)
                        .addComponent(jLabel50)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel53)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1075, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(130, 130, 130))
        );
        patientsPanelLayout.setVerticalGroup(
            patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientsPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel52)
                        .addComponent(clientsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(patientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel51))
                        .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel53)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        jLabel49.setToolTipText("modifier des informations");
        jLabel50.setToolTipText("ajouter un patient");
        jLabel51.setToolTipText("supprimer ce client");

        parentPanel.add(patientsPanel, "card5");

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });

        searchPanel.setInheritsPopupMenu(true);
        searchPanel.setMaximumSize(new java.awt.Dimension(1199, 146));
        searchPanel.setMinimumSize(new java.awt.Dimension(1199, 146));
        searchPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchPanelMouseClicked(evt);
            }
        });

        termineCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tout les operations", "les operatoins termine", "les operatoins en cours" }));
        termineCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termineComboActionPerformed(evt);
            }
        });

        searchTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nom et prenom", "acte dentaire", "montant payé" }));
        searchTypeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchTypeComboItemStateChanged(evt);
            }
        });
        searchTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeComboActionPerformed(evt);
            }
        });

        jLabel17.setText("recherche :");
        jLabel17.setFont(new java.awt.Font("URW Palladio L", 0, 18)); // NOI18N

        searchFieldPanel.setMinimumSize(new java.awt.Dimension(299, 100));
        searchFieldPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldPanelMouseClicked(evt);
            }
        });
        searchFieldPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldPanelKeyPressed(evt);
            }
        });
        searchFieldPanel.setLayout(new java.awt.CardLayout());

        nom_prenomSearch.setForeground(new java.awt.Color(204, 204, 204));

        jLabel40.setText("nom");

        jLabel42.setText("prenom");

        nomSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomSearchFieldKeyReleased(evt);
            }
        });

        prenomSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prenomSearchFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout nom_prenomSearchLayout = new javax.swing.GroupLayout(nom_prenomSearch);
        nom_prenomSearch.setLayout(nom_prenomSearchLayout);
        nom_prenomSearchLayout.setHorizontalGroup(
            nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel40)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prenomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nom_prenomSearchLayout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(72, 72, 72)))
                .addGap(25, 25, 25))
        );
        nom_prenomSearchLayout.setVerticalGroup(
            nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nom_prenomSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nom_prenomSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchFieldPanel.add(nom_prenomSearch, "card3");

        priceSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceSearchFocusGained(evt);
            }
        });
        priceSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceSearchMouseClicked(evt);
            }
        });

        jLabel44.setText("min");

        jLabel45.setText("max");

        minPriceSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minPriceSpinnerStateChanged(evt);
            }
        });

        maxPriceSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxPriceSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout priceSearchLayout = new javax.swing.GroupLayout(priceSearch);
        priceSearch.setLayout(priceSearchLayout);
        priceSearchLayout.setHorizontalGroup(
            priceSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(priceSearchLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        priceSearchLayout.setVerticalGroup(
            priceSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(priceSearchLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(priceSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45)
                    .addComponent(maxPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        searchFieldPanel.add(priceSearch, "card5");

        actSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                actSearchFocusGained(evt);
            }
        });

        actDentSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actDentSearchFieldActionPerformed(evt);
            }
        });
        actDentSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                actDentSearchFieldKeyReleased(evt);
            }
        });

        jLabel28.setText("acte dentaire");

        javax.swing.GroupLayout actSearchLayout = new javax.swing.GroupLayout(actSearch);
        actSearch.setLayout(actSearchLayout);
        actSearchLayout.setHorizontalGroup(
            actSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actSearchLayout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(actSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actDentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(actSearchLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel28)))
                .addGap(106, 106, 106))
        );
        actSearchLayout.setVerticalGroup(
            actSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actDentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchFieldPanel.add(actSearch, "card2");

        dateFieldPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout nothingLayout = new javax.swing.GroupLayout(nothing);
        nothing.setLayout(nothingLayout);
        nothingLayout.setHorizontalGroup(
            nothingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 662, Short.MAX_VALUE)
        );
        nothingLayout.setVerticalGroup(
            nothingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        dateFieldPanel.add(nothing, "card3");

        jLabel35.setText("a");
        jLabel35.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel36.setText("de");
        jLabel36.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        minDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                minDatePickerPropertyChange(evt);
            }
        });

        maxDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                maxDatePickerPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout dateSearchLayout = new javax.swing.GroupLayout(dateSearch);
        dateSearch.setLayout(dateSearchLayout);
        dateSearchLayout.setHorizontalGroup(
            dateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateSearchLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(minDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(maxDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );
        dateSearchLayout.setVerticalGroup(
            dateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateSearchLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(dateSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(minDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        dateFieldPanel.add(dateSearch, "card3");
        dateSearch.setVisible(false);

        actFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tooth-filter.png"))); // NOI18N
        actFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actFilterMouseClicked(evt);
            }
        });

        cashFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cash-filter.png"))); // NOI18N
        cashFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashFilterMouseClicked(evt);
            }
        });

        personFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/person-filter.png"))); // NOI18N
        personFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personFilterMouseClicked(evt);
            }
        });

        calLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.png"))); // NOI18N
        calLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(calLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(personFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cashFilter))
                    .addComponent(searchTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(termineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(162, 162, 162))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addGap(26, 26, 26))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(searchTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(termineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFieldPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(actFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cashFilter)
                            .addComponent(personFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        actFilter.setVisible(false);
        cashFilter.setVisible(false);
        personFilter.setVisible(false);
        ImageIcon icon1 = new javax.swing.ImageIcon(getClass().getResource("/images/calendar.png"));
        calLabel.setIcon(icon1);
        calLabel.setToolTipText("Ajouter une contrainte de temps.");

        searchTypePanel.setLayout(new java.awt.CardLayout());

        jLabel32.setText("dents");
        jLabel32.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        modifyClientTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modifyClientTextFieldFocusGained(evt);
            }
        });
        modifyClientTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                modifyClientTextFieldKeyReleased(evt);
            }
        });

        jLabel30.setText("patient");
        jLabel30.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel54.setText("État");
        jLabel54.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        modifyTermine.setText("TERMINÉ");
        modifyTermine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyTermineActionPerformed(evt);
            }
        });

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel29.setName("gestionVisits"); // NOI18N
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel33.setName("gestionVisits"); // NOI18N
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        suggestionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        suggestionList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                suggestionListFocusLost(evt);
            }
        });
        suggestionList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suggestionListMouseClicked(evt);
            }
        });

        jLabel95.setText("cout final");
        jLabel95.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(179, Short.MAX_VALUE)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suggestionList, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(modifyClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel32)
                        .addGap(12, 12, 12)
                        .addComponent(modifyDentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifyTermine)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel95)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coutFinalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(74, 74, 74)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modifyClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modifyDentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modifyTermine)
                            .addComponent(coutFinalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel32)
                            .addComponent(jLabel54)
                            .addComponent(jLabel95))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(suggestionList, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel33))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel29.setToolTipText("supprimer la visit");
        jLabel29.setToolTipText("modifier la visit");
        suggestionList.setVisible(false);

        visitsTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "nom et prenom", "date de dernière visite", "le dernier acte dentaire", "dent(s)", "nbr seances", "total payé", "cout final", "Etat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        visitsTable1.setRowHeight(30);
        visitsTable1.setRowMargin(3);
        visitsTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsTable1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(visitsTable1);
        if (visitsTable1.getColumnModel().getColumnCount() > 0) {
            visitsTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            visitsTable1.getColumnModel().getColumn(1).setMinWidth(50);
            visitsTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            visitsTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            visitsTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
            visitsTable1.getColumnModel().getColumn(5).setPreferredWidth(50);
        }

        javax.swing.GroupLayout consultationsPanelLayout = new javax.swing.GroupLayout(consultationsPanel);
        consultationsPanel.setLayout(consultationsPanelLayout);
        consultationsPanelLayout.setHorizontalGroup(
            consultationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1266, Short.MAX_VALUE)
                    .addGroup(consultationsPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        consultationsPanelLayout.setVerticalGroup(
            consultationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultationsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        searchTypePanel.add(consultationsPanel, "card4");

        seancesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "seance", "date", "acte dentaire", "montat", "saisi par", "remarque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        seancesTable.setRowHeight(30);
        seancesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seancesTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(seancesTable);
        if (seancesTable.getColumnModel().getColumnCount() > 0) {
            seancesTable.getColumnModel().getColumn(0).setMaxWidth(50);
            seancesTable.getColumnModel().getColumn(5).setMinWidth(300);
        }

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow .png"))); // NOI18N
        jLabel41.setText("voir moins de details");
        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(51, 153, 255));
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });

        jLabel56.setText("montant");
        jLabel56.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel57.setText("remarque");
        jLabel57.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel59.setName("gestionVisits"); // NOI18N
        jLabel59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel59MouseClicked(evt);
            }
        });

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel60.setName("gestionVisits"); // NOI18N
        jLabel60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel60MouseClicked(evt);
            }
        });

        jLabel31.setText("acte dentaire");
        jLabel31.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        modifyActConsCombo.setName("operationsComboBox"); // NOI18N
        modifyActConsCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyActConsComboActionPerformed(evt);
            }
        });

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        seanceRemarque.setColumns(20);
        seanceRemarque.setLineWrap(true);
        seanceRemarque.setRows(5);
        jScrollPane4.setViewportView(seanceRemarque);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel56))
                    .addComponent(seanceMontant, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(modifyActConsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(43, 43, 43)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                        .addComponent(jLabel57)
                        .addGap(432, 432, 432))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(18, 18, 18)
                        .addComponent(modifyActConsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel56)
                            .addComponent(jLabel57))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seanceMontant, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel59, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel60, javax.swing.GroupLayout.Alignment.TRAILING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel29.setToolTipText("supprimer la visit");
        jLabel29.setToolTipText("modifier la visit");

        javax.swing.GroupLayout seancesPanelLayout = new javax.swing.GroupLayout(seancesPanel);
        seancesPanel.setLayout(seancesPanelLayout);
        seancesPanelLayout.setHorizontalGroup(
            seancesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(seancesPanelLayout.createSequentialGroup()
                .addGroup(seancesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(seancesPanelLayout.createSequentialGroup()
                        .addGap(517, 517, 517)
                        .addComponent(jLabel41))
                    .addGroup(seancesPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        seancesPanelLayout.setVerticalGroup(
            seancesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seancesPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        searchTypePanel.add(seancesPanel, "card4");

        javax.swing.GroupLayout detailedVisitPanelLayout = new javax.swing.GroupLayout(detailedVisitPanel);
        detailedVisitPanel.setLayout(detailedVisitPanelLayout);
        detailedVisitPanelLayout.setHorizontalGroup(
            detailedVisitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailedVisitPanelLayout.createSequentialGroup()
                .addGroup(detailedVisitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailedVisitPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(detailedVisitPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(searchTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(2185, Short.MAX_VALUE))
        );
        detailedVisitPanelLayout.setVerticalGroup(
            detailedVisitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailedVisitPanelLayout.createSequentialGroup()
                .addGroup(detailedVisitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailedVisitPanelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(detailedVisitPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        parentPanel.add(detailedVisitPanel, "card4");

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        actsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "nom d'acte", "cout", "description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        actsTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        actsTable.setRowHeight(30);
        actsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actsTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(actsTable);
        if (actsTable.getColumnModel().getColumnCount() > 0) {
            actsTable.getColumnModel().getColumn(0).setMaxWidth(50);
            actsTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            actsTable.getColumnModel().getColumn(2).setMaxWidth(80);
            actsTable.getColumnModel().getColumn(3).setPreferredWidth(200);
        }

        jLabel71.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel71.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel71MouseClicked(evt);
            }
        });

        jLabel72.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel72.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel72MouseClicked(evt);
            }
        });

        jLabel73.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addnew.png"))); // NOI18N
        jLabel73.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel73MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel73MouseEntered(evt);
            }
        });

        jLabel74.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel74.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel74MouseClicked(evt);
            }
        });

        jLabel75.setText("search");
        jLabel75.setFont(new java.awt.Font("URW Palladio L", 0, 18)); // NOI18N

        actsSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                actsSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout actsPanelLayout = new javax.swing.GroupLayout(actsPanel);
        actsPanel.setLayout(actsPanelLayout);
        actsPanelLayout.setHorizontalGroup(
            actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actsPanelLayout.createSequentialGroup()
                .addGroup(actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actsPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174)
                        .addComponent(jLabel75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(287, 287, 287)
                        .addComponent(jLabel73)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(actsPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 1075, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(2328, Short.MAX_VALUE))
        );
        actsPanelLayout.setVerticalGroup(
            actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actsPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel75)
                        .addComponent(actsSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(actsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel74))
                        .addComponent(jLabel73, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        jLabel49.setToolTipText("modifier des informations");
        jLabel50.setToolTipText("ajouter un patient");
        jLabel51.setToolTipText("supprimer ce client");

        parentPanel.add(actsPanel, "card5");

        jLabel76.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel76.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel76MouseClicked(evt);
            }
        });

        jLabel77.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel77.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel77MouseClicked(evt);
            }
        });

        jLabel78.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addnew.png"))); // NOI18N
        jLabel78.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel78MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel78MouseEntered(evt);
            }
        });

        jLabel79.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel79.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel79MouseClicked(evt);
            }
        });

        rightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "aymen", null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "l'utilisateur", "gestion des admins", "gestion des actes dentaires", "gestion des patients ", "modification / suppression des visites", "voir les apercus statistiques"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rightsTable.setBackground(new java.awt.Color(242, 242, 242));
        rightsTable.setShowVerticalLines(true);
        rightsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rightsTableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(rightsTable);
        if (rightsTable.getColumnModel().getColumnCount() > 0) {
            rightsTable.getColumnModel().getColumn(0).setMaxWidth(30);
            rightsTable.getColumnModel().getColumn(1).setMaxWidth(300);
            rightsTable.getColumnModel().getColumn(2).setMinWidth(300);
            rightsTable.getColumnModel().getColumn(2).setMaxWidth(300);
        }
        rightsTable.setDefaultRenderer(Object.class, new adminsTableRenderer());

        javax.swing.GroupLayout adminsPanelLayout = new javax.swing.GroupLayout(adminsPanel);
        adminsPanel.setLayout(adminsPanelLayout);
        adminsPanelLayout.setHorizontalGroup(
            adminsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminsPanelLayout.createSequentialGroup()
                .addGroup(adminsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(adminsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel78)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminsPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 1162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(2243, Short.MAX_VALUE))
        );
        adminsPanelLayout.setVerticalGroup(
            adminsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminsPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(adminsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(adminsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel79))
                        .addComponent(jLabel78, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jLabel49.setToolTipText("modifier des informations");
        jLabel50.setToolTipText("ajouter un patient");
        jLabel51.setToolTipText("supprimer ce client");

        parentPanel.add(adminsPanel, "card5");

        jLabel80.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel80.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel80MouseClicked(evt);
            }
        });

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel83.setText("nouveaux patients ce mois-ci :");
        jPanel7.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, -1));

        jLabel84.setText("procédures effectuées ce mois-ci :");
        jPanel7.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 79, -1, -1));

        apercu4.setText("143");
        apercu4.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        apercu4.setForeground(new java.awt.Color(204, 0, 0));
        jPanel7.add(apercu4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));

        apercu3.setText("143");
        apercu3.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        apercu3.setForeground(new java.awt.Color(204, 0, 0));
        jPanel7.add(apercu3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        jLabel93.setText("  sont marqués comme terminés");
        jPanel7.add(jLabel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, -1, -1));

        apercu5.setText("86");
        apercu5.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jPanel7.add(apercu5, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 76, 46, -1));

        jLabel87.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N
        jPanel7.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 0, 880, 115));

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel85.setText("les gains  ce mois  :");
        jPanel9.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        jLabel86.setText("dépense moyenne par patient");
        jPanel9.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        apercu6.setText("143");
        apercu6.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        apercu6.setForeground(new java.awt.Color(204, 0, 0));
        jPanel9.add(apercu6, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 21, -1, -1));

        apercu7.setText("143");
        apercu7.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        apercu7.setForeground(new java.awt.Color(204, 0, 0));
        jPanel9.add(apercu7, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 64, -1, -1));

        jLabel88.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3.png"))); // NOI18N
        jPanel9.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 0, 880, 110));

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel81.setText("nombre totale des patients inscrit :");
        jPanel8.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 26, -1, -1));

        jLabel82.setText("nombre des procédures effectuées :");
        jPanel8.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 69, -1, -1));

        apercu1.setText("143");
        apercu1.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        apercu1.setForeground(new java.awt.Color(204, 0, 0));
        jPanel8.add(apercu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 19, -1, -1));

        apercu2.setText("143");
        apercu2.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        apercu2.setForeground(new java.awt.Color(204, 0, 0));
        jPanel8.add(apercu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 62, -1, -1));

        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.png"))); // NOI18N
        jPanel8.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 0, 880, 113));

        javax.swing.GroupLayout apercusPanelLayout = new javax.swing.GroupLayout(apercusPanel);
        apercusPanel.setLayout(apercusPanelLayout);
        apercusPanelLayout.setHorizontalGroup(
            apercusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(apercusPanelLayout.createSequentialGroup()
                .addGroup(apercusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 2613, Short.MAX_VALUE))
            .addGroup(apercusPanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        apercusPanelLayout.setVerticalGroup(
            apercusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(apercusPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        parentPanel.add(apercusPanel, "card5");

        visitPanel.setPreferredSize(new java.awt.Dimension(1000, 680));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        clientSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientSearchBarActionPerformed(evt);
            }
        });
        clientSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientSearchBarKeyReleased(evt);
            }
        });

        jLabel19.setText("patient ");
        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        visitsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "date de dernière visite", "le dernier acte dentaire", "dent(s)", "nbr seances", "payé", "État"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        visitsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        visitsTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitsTable.setGridColor(new java.awt.Color(0, 102, 102));
        visitsTable.setRowHeight(23);
        visitsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                visitsTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(visitsTable);
        if (visitsTable.getColumnModel().getColumnCount() > 0) {
            visitsTable.getColumnModel().getColumn(0).setMaxWidth(50);
            visitsTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            visitsTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            visitsTable.getColumnModel().getColumn(4).setPreferredWidth(50);
            visitsTable.getColumnModel().getColumn(6).setMaxWidth(50);
        }
        visitsTable.setDefaultRenderer(Object.class, new CustomCellRenderer());

        visitsTable.setSelectionBackground(Color.CYAN);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "n°", "nom", "prenom"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usersTable.setRowHeight(30);
        usersTable.setShowGrid(true);
        usersTable.setShowVerticalLines(false);
        usersTable.getTableHeader().setReorderingAllowed(false);
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(usersTable);
        if (usersTable.getColumnModel().getColumnCount() > 0) {
            usersTable.getColumnModel().getColumn(0).setMinWidth(20);
            usersTable.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addSq.png"))); // NOI18N
        jLabel25.setName("gestionPatients"); // NOI18N
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });

        warningLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/warning.png"))); // NOI18N
        warningLabel.setText("vous avez laissé des remarques concernant ce patient , vous pouvez les consulter en double cliquant sur ce message");
        warningLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        warningLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                warningLabelMouseClicked(evt);
            }
        });

        jLabel65.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        jLabel55.setText("reste :");

        resteLabel.setText("0");
        resteLabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        resteLabel.setForeground(new java.awt.Color(153, 0, 0));

        jLabel69.setText("da");

        procedureLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel62.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        prenomLabel.setText("prenom");
        prenomLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        nomLabel.setText("nom");
        nomLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vertical-line.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prenomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(procedureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel62)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel55)
                .addGap(18, 18, 18)
                .addComponent(resteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel69)
                .addContainerGap(375, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel62)
                    .addComponent(jLabel43)
                    .addComponent(jLabel65)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel55)
                                .addComponent(resteLabel)
                                .addComponent(jLabel69))
                            .addComponent(prenomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(procedureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );

        visitTypeCards.setLayout(new java.awt.CardLayout());

        newVisitSect.setForeground(new java.awt.Color(204, 204, 204));
        newVisitSect.setPreferredSize(new java.awt.Dimension(868, 268));

        operationsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                operationsComboBoxItemStateChanged(evt);
            }
        });

        jLabel20.setText("acte dentaire :");

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addSq.png"))); // NOI18N
        jLabel27.setName("gestionActs"); // NOI18N
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        savebtn.setText("sauvegarder");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });

        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        notesTextAreaNV.setColumns(20);
        notesTextAreaNV.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        notesTextAreaNV.setLineWrap(true);
        notesTextAreaNV.setRows(5);
        notesTextAreaNV.setTabSize(5);
        notesTextAreaNV.setText("                                \n                                   laisser une remarque");
        notesTextAreaNV.setForeground(new java.awt.Color(204, 204, 204));
        notesTextAreaNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                notesTextAreaNVFocusGained(evt);
            }
        });
        jScrollPane7.setViewportView(notesTextAreaNV);

        jLabel23.setText("marquer comme");

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel58.setText("prescrire des medicaments");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel58)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel58)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel64.setText("montant payé");

        priceTF.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        priceTF.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                priceTFStateChanged(evt);
            }
        });
        priceTF.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                priceTFMouseWheelMoved(evt);
            }
        });
        priceTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceTFMouseClicked(evt);
            }
        });

        termineRadio.setBackground(new java.awt.Color(217, 242, 250));
        termineRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termineRadioActionPerformed(evt);
            }
        });

        jLabel89.setText("terminé :");

        priceFinalTF.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        priceFinalTF.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                priceFinalTFMouseWheelMoved(evt);
            }
        });
        priceFinalTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceFinalTFMouseClicked(evt);
            }
        });

        jLabel91.setText("coût final");

        jPanel3.setBackground(new java.awt.Color(217, 242, 250));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel105.setText("nouvelle visite");
        jLabel105.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel105.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel105, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel105)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout newVisitSectLayout = new javax.swing.GroupLayout(newVisitSect);
        newVisitSect.setLayout(newVisitSectLayout);
        newVisitSectLayout.setHorizontalGroup(
            newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newVisitSectLayout.createSequentialGroup()
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newVisitSectLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(newVisitSectLayout.createSequentialGroup()
                                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newVisitSectLayout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel27))
                                    .addComponent(operationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitSectLayout.createSequentialGroup()
                                        .addComponent(jLabel64)
                                        .addGap(16, 16, 16)))
                                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newVisitSectLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(priceFinalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel23)
                                            .addGroup(newVisitSectLayout.createSequentialGroup()
                                                .addComponent(jLabel89)
                                                .addGap(18, 18, 18)
                                                .addComponent(termineRadio))))
                                    .addGroup(newVisitSectLayout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane7))
                        .addGap(70, 70, 70)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(savebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(newVisitSectLayout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newVisitSectLayout.setVerticalGroup(
            newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitSectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitSectLayout.createSequentialGroup()
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel64)
                            .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20)
                                .addComponent(jLabel27))
                            .addComponent(jLabel91))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(operationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceFinalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newVisitSectLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel89)
                            .addComponent(termineRadio)))
                    .addComponent(savebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(newVisitSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        operationsComboBox.setName("operationsComboBox");

        visitTypeCards.add(newVisitSect, "card2");

        newSeanceSect.setForeground(new java.awt.Color(204, 204, 204));

        updatePrice.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        updatePrice.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                updatePriceMouseWheelMoved(evt);
            }
        });
        updatePrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePriceMouseClicked(evt);
            }
        });

        jLabel38.setText("   montant a ajouter :");

        updatebtn.setText("mettre a jour");
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebtnMouseClicked(evt);
            }
        });
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        termineradio1.setBackground(new java.awt.Color(170, 195, 240));

        jLabel24.setText("marquer comme");

        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        notesTextAreaNV1.setColumns(20);
        notesTextAreaNV1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        notesTextAreaNV1.setLineWrap(true);
        notesTextAreaNV1.setRows(5);
        notesTextAreaNV1.setTabSize(5);
        notesTextAreaNV1.setText("                                \n                                   laisser une remarque");
        notesTextAreaNV1.setForeground(new java.awt.Color(204, 204, 204));
        notesTextAreaNV1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                notesTextAreaNV1FocusGained(evt);
            }
        });
        jScrollPane10.setViewportView(notesTextAreaNV1);

        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel66.setText("prescrire des medicaments");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel66)
                .addGap(14, 14, 14))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel66)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/warning.png"))); // NOI18N
        jLabel90.setToolTipText("vous en avez laissé des remarques , double cliquez pour les consulter");
        jLabel90.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel90MouseClicked(evt);
            }
        });

        jLabel92.setText("terminé  :");

        operationsComboBox1.setName("operationsComboBox"); // NOI18N

        jLabel94.setText("            acte dentaire :");

        jLabel96.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addSq.png"))); // NOI18N
        jLabel96.setName("gestionActs"); // NOI18N
        jLabel96.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel96MouseClicked(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(170, 195, 240));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));

        jLabel107.setText("  continuation");
        jLabel107.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel107, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel107)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout newSeanceSectLayout = new javax.swing.GroupLayout(newSeanceSect);
        newSeanceSect.setLayout(newSeanceSectLayout);
        newSeanceSectLayout.setHorizontalGroup(
            newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newSeanceSectLayout.createSequentialGroup()
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newSeanceSectLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newSeanceSectLayout.createSequentialGroup()
                                        .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel96))
                                    .addComponent(operationsComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newSeanceSectLayout.createSequentialGroup()
                                        .addComponent(jLabel92)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(termineradio1))
                                    .addComponent(jLabel24))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel90))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(newSeanceSectLayout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        newSeanceSectLayout.setVerticalGroup(
            newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newSeanceSectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newSeanceSectLayout.createSequentialGroup()
                        .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel94)
                                    .addComponent(jLabel96))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(operationsComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newSeanceSectLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(termineradio1)
                                    .addComponent(jLabel92))))
                        .addGap(3, 3, 3))
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(newSeanceSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        visitTypeCards.add(newSeanceSect, "card3");

        doneSect.setForeground(new java.awt.Color(204, 204, 204));
        doneSect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doneSectMouseClicked(evt);
            }
        });

        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/done.png"))); // NOI18N
        jLabel46.setText("cette operation est marque comme terminé");
        jLabel46.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N

        jLabel70.setText("double-cliquez ici si vous souhaitez modifier cela");

        javax.swing.GroupLayout doneSectLayout = new javax.swing.GroupLayout(doneSect);
        doneSect.setLayout(doneSectLayout);
        doneSectLayout.setHorizontalGroup(
            doneSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doneSectLayout.createSequentialGroup()
                .addGroup(doneSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doneSectLayout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(jLabel46))
                    .addGroup(doneSectLayout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel70)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        doneSectLayout.setVerticalGroup(
            doneSectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doneSectLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel46)
                .addGap(18, 18, 18)
                .addComponent(jLabel70)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        visitTypeCards.add(doneSect, "card4");

        jButton3.setText(">");
        jButton3.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        allTeethPanel.setLayout(new java.awt.CardLayout());

        teethpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toothLbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth1.png"))); // NOI18N
        toothLbl1.setName("28"); // NOI18N
        teethpanel.add(toothLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl1.setVisible(false);

        toothLbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth2.png"))); // NOI18N
        toothLbl2.setName("27"); // NOI18N
        teethpanel.add(toothLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl2.setVisible(false);

        toothLbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth3.png"))); // NOI18N
        toothLbl3.setName("26"); // NOI18N
        teethpanel.add(toothLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl3.setVisible(false);

        toothLbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth4.png"))); // NOI18N
        toothLbl4.setName("25"); // NOI18N
        teethpanel.add(toothLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl4.setVisible(false);

        toothLbl5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth5.png"))); // NOI18N
        toothLbl5.setName("24"); // NOI18N
        teethpanel.add(toothLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl5.setVisible(false);

        toothLbl6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth6.png"))); // NOI18N
        toothLbl6.setName("23"); // NOI18N
        teethpanel.add(toothLbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl6.setVisible(false);

        toothLbl7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/teeth7.png"))); // NOI18N
        toothLbl7.setName("22"); // NOI18N
        teethpanel.add(toothLbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl7.setVisible(false);

        toothLbl8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth8.png"))); // NOI18N
        toothLbl8.setName("21"); // NOI18N
        teethpanel.add(toothLbl8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl8.setVisible(false);

        toothLbl9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth9.png"))); // NOI18N
        toothLbl9.setName("11"); // NOI18N
        teethpanel.add(toothLbl9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl9.setVisible(false);

        toothLbl10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth10.png"))); // NOI18N
        toothLbl10.setName("12"); // NOI18N
        teethpanel.add(toothLbl10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl10.setVisible(false);

        toothLbl11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth11.png"))); // NOI18N
        toothLbl11.setName("13"); // NOI18N
        teethpanel.add(toothLbl11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl11.setVisible(false);

        toothLbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth12.png"))); // NOI18N
        toothLbl12.setName("14"); // NOI18N
        teethpanel.add(toothLbl12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl12.setVisible(false);

        toothLbl13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth13.png"))); // NOI18N
        toothLbl13.setName("15"); // NOI18N
        teethpanel.add(toothLbl13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl13.setVisible(false);

        toothLbl14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth14.png"))); // NOI18N
        toothLbl14.setName("16"); // NOI18N
        teethpanel.add(toothLbl14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl14.setVisible(false);

        toothLbl15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth15.png"))); // NOI18N
        toothLbl15.setName("17"); // NOI18N
        teethpanel.add(toothLbl15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl15.setVisible(false);

        toothLbl16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth16.png"))); // NOI18N
        toothLbl16.setName("18"); // NOI18N
        teethpanel.add(toothLbl16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl16.setVisible(false);

        toothLbl17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth17.png"))); // NOI18N
        toothLbl17.setName("48"); // NOI18N
        teethpanel.add(toothLbl17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl17.setVisible(false);

        toothLbl18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth18.png"))); // NOI18N
        toothLbl18.setName("47"); // NOI18N
        teethpanel.add(toothLbl18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl18.setVisible(false);

        toothLbl19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth19.png"))); // NOI18N
        toothLbl19.setName("46"); // NOI18N
        teethpanel.add(toothLbl19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl19.setVisible(false);

        toothLbl20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth20.png"))); // NOI18N
        toothLbl20.setName("45"); // NOI18N
        teethpanel.add(toothLbl20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl20.setVisible(false);

        toothLbl21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth21.png"))); // NOI18N
        toothLbl21.setName("44"); // NOI18N
        teethpanel.add(toothLbl21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl21.setVisible(false);

        toothLbl22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth22.png"))); // NOI18N
        toothLbl22.setName("43"); // NOI18N
        teethpanel.add(toothLbl22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl22.setVisible(false);

        toothLbl23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth23.png"))); // NOI18N
        toothLbl23.setName("42"); // NOI18N
        teethpanel.add(toothLbl23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl23.setVisible(false);

        toothLbl24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth24.png"))); // NOI18N
        toothLbl24.setName("41"); // NOI18N
        teethpanel.add(toothLbl24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl24.setVisible(false);

        toothLbl25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth25.png"))); // NOI18N
        toothLbl25.setName("31"); // NOI18N
        teethpanel.add(toothLbl25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl25.setVisible(false);

        toothLbl26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth26.png"))); // NOI18N
        toothLbl26.setName("32"); // NOI18N
        teethpanel.add(toothLbl26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl26.setVisible(false);

        toothLbl27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth27.png"))); // NOI18N
        toothLbl27.setName("33"); // NOI18N
        teethpanel.add(toothLbl27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl27.setVisible(false);

        toothLbl28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth28.png"))); // NOI18N
        toothLbl28.setName("34"); // NOI18N
        teethpanel.add(toothLbl28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl28.setVisible(false);

        toothLbl29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth29.png"))); // NOI18N
        toothLbl29.setName("35"); // NOI18N
        teethpanel.add(toothLbl29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl29.setVisible(false);

        toothLbl30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth30.png"))); // NOI18N
        toothLbl30.setName("36"); // NOI18N
        teethpanel.add(toothLbl30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl30.setVisible(false);

        toothLbl31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth31.png"))); // NOI18N
        toothLbl31.setName("37"); // NOI18N
        teethpanel.add(toothLbl31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl31.setVisible(false);

        toothLbl32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/tooth32.png"))); // NOI18N
        toothLbl32.setName("38"); // NOI18N
        teethpanel.add(toothLbl32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        toothLbl32.setVisible(false);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teeth/My project.png"))); // NOI18N
        background.setName("9999999"); // NOI18N
        background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backgroundMouseClicked(evt);
            }
        });
        teethpanel.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));

        allTeethPanel.add(teethpanel, "card2");

        babyTeethPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        babytoothLbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth1.png"))); // NOI18N
        babytoothLbl1.setName("65"); // NOI18N
        babyTeethPanel.add(babytoothLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl1.setVisible(false);

        babytoothLbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth2.png"))); // NOI18N
        babytoothLbl2.setName("64"); // NOI18N
        babyTeethPanel.add(babytoothLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl2.setVisible(false);

        babytoothLbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth3.png"))); // NOI18N
        babytoothLbl3.setName("63"); // NOI18N
        babyTeethPanel.add(babytoothLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl3.setVisible(false);

        babytoothLbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth4.png"))); // NOI18N
        babytoothLbl4.setName("62"); // NOI18N
        babyTeethPanel.add(babytoothLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl4.setVisible(false);

        babytoothLbl5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth5.png"))); // NOI18N
        babytoothLbl5.setName("61"); // NOI18N
        babyTeethPanel.add(babytoothLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl5.setVisible(false);

        babytoothLbl6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth6.png"))); // NOI18N
        babytoothLbl6.setName("51"); // NOI18N
        babyTeethPanel.add(babytoothLbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl6.setVisible(false);

        babytoothLbl7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth7.png"))); // NOI18N
        babytoothLbl7.setName("52"); // NOI18N
        babyTeethPanel.add(babytoothLbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl7.setVisible(false);

        babytoothLbl8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth8.png"))); // NOI18N
        babytoothLbl8.setName("53"); // NOI18N
        babyTeethPanel.add(babytoothLbl8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl8.setVisible(false);

        babytoothLbl9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth9.png"))); // NOI18N
        babytoothLbl9.setName("54"); // NOI18N
        babyTeethPanel.add(babytoothLbl9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl9.setVisible(false);

        babytoothLbl10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth10.png"))); // NOI18N
        babytoothLbl10.setName("55"); // NOI18N
        babyTeethPanel.add(babytoothLbl10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl10.setVisible(false);

        babytoothLbl11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth11.png"))); // NOI18N
        babytoothLbl11.setName("85"); // NOI18N
        babyTeethPanel.add(babytoothLbl11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl11.setVisible(false);

        babytoothLbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth12.png"))); // NOI18N
        babytoothLbl12.setName("84"); // NOI18N
        babyTeethPanel.add(babytoothLbl12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl12.setVisible(false);

        babytoothLbl13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTeeth13.png"))); // NOI18N
        babytoothLbl13.setName("83"); // NOI18N
        babyTeethPanel.add(babytoothLbl13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl13.setVisible(false);

        babytoothLbl14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTeeth14.png"))); // NOI18N
        babytoothLbl14.setName("82"); // NOI18N
        babyTeethPanel.add(babytoothLbl14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl14.setVisible(false);

        babytoothLbl15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTeeth15.png"))); // NOI18N
        babytoothLbl15.setName("81"); // NOI18N
        babyTeethPanel.add(babytoothLbl15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl15.setVisible(false);

        babytoothLbl16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTeeth16.png"))); // NOI18N
        babytoothLbl16.setName("71"); // NOI18N
        babyTeethPanel.add(babytoothLbl16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl16.setVisible(false);

        babytoothLbl17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTeeth17.png"))); // NOI18N
        babytoothLbl17.setName("72"); // NOI18N
        babyTeethPanel.add(babytoothLbl17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl17.setVisible(false);

        babytoothLbl18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth18.png"))); // NOI18N
        babytoothLbl18.setName("73"); // NOI18N
        babyTeethPanel.add(babytoothLbl18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl18.setVisible(false);

        babytoothLbl19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth19.png"))); // NOI18N
        babytoothLbl19.setName("74"); // NOI18N
        babyTeethPanel.add(babytoothLbl19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl19.setVisible(false);

        babytoothLbl20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/babyTooth20.png"))); // NOI18N
        babytoothLbl20.setName("75"); // NOI18N
        babyTeethPanel.add(babytoothLbl20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));
        babytoothLbl20.setVisible(false);

        background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BTeeth/backgroundBBteeth.png"))); // NOI18N
        background1.setName("9999999"); // NOI18N
        background1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                background1MouseClicked(evt);
            }
        });
        babyTeethPanel.add(background1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 300));

        allTeethPanel.add(babyTeethPanel, "card2");

        jLabel106.setText("visites précédentes ");
        jLabel106.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout visitPanelLayout = new javax.swing.GroupLayout(visitPanel);
        visitPanel.setLayout(visitPanelLayout);
        visitPanelLayout.setHorizontalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                            .addComponent(clientSearchBar))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 928, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279)
                        .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(visitPanelLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                                .addComponent(allTeethPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(254, 254, 254)))
                        .addComponent(jLabel21))
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25)
                        .addGap(550, 550, 550)
                        .addComponent(jLabel106)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(visitPanelLayout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(visitTypeCards, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(525, Short.MAX_VALUE)))
        );
        visitPanelLayout.setVerticalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(warningLabel)))
                .addGap(23, 23, 23)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel25)
                    .addComponent(jLabel106))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel21))
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(allTeethPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                    .addContainerGap(345, Short.MAX_VALUE)
                    .addComponent(visitTypeCards, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(55, Short.MAX_VALUE)))
        );

        warningLabel.setVisible(false);

        parentPanel.add(visitPanel, "card3");

        jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        facturesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "n°", "designation", "date de creation", "dépense", "description", "saisi par"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        facturesTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        facturesTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        facturesTable.setMaximumSize(new java.awt.Dimension(2147483647, 120000));
        facturesTable.setRowHeight(30);
        facturesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        facturesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facturesTableMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(facturesTable);
        if (facturesTable.getColumnModel().getColumnCount() > 0) {
            facturesTable.getColumnModel().getColumn(0).setMaxWidth(50);
            facturesTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            facturesTable.getColumnModel().getColumn(3).setMaxWidth(80);
            facturesTable.getColumnModel().getColumn(4).setPreferredWidth(200);
            facturesTable.getColumnModel().getColumn(5).setMaxWidth(70);
        }
        facturesTable.getColumnModel().getColumn(4).setCellRenderer(new MultiLineCellRenderer());

        jLabel99.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        jLabel99.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel99MouseClicked(evt);
            }
        });

        jLabel100.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change.png"))); // NOI18N
        jLabel100.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel100MouseClicked(evt);
            }
        });

        jLabel101.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addnew.png"))); // NOI18N
        jLabel101.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel101MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel101MouseEntered(evt);
            }
        });

        jLabel102.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jLabel102.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel102MouseClicked(evt);
            }
        });

        jLabel103.setText("recherche");
        jLabel103.setFont(new java.awt.Font("URW Palladio L", 0, 18)); // NOI18N

        facturesSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                facturesSearchKeyReleased(evt);
            }
        });

        jLabel104.setText("dépenses totales ce mois :");
        jLabel104.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        depenseMois.setText("30000 da");
        depenseMois.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N

        jButton4.setText("factures de ce mois");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("toutes les factures");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout facturesPanelLayout = new javax.swing.GroupLayout(facturesPanel);
        facturesPanel.setLayout(facturesPanelLayout);
        facturesPanelLayout.setHorizontalGroup(
            facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturesPanelLayout.createSequentialGroup()
                .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(facturesPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1075, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)
                            .addGroup(facturesPanelLayout.createSequentialGroup()
                                .addComponent(jLabel103)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(facturesSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(262, 262, 262)
                                .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturesPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel101)
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel100, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturesPanelLayout.createSequentialGroup()
                                        .addComponent(jButton4)
                                        .addGap(140, 140, 140))))))
                    .addGroup(facturesPanelLayout.createSequentialGroup()
                        .addGap(525, 525, 525)
                        .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(depenseMois)))
                .addContainerGap(2300, Short.MAX_VALUE))
        );
        facturesPanelLayout.setVerticalGroup(
            facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturesPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(facturesPanelLayout.createSequentialGroup()
                        .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(facturesPanelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel103)
                                    .addComponent(facturesSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel101, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel100, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel102, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(facturesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel104)
                    .addComponent(depenseMois))
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jLabel49.setToolTipText("modifier des informations");
        jLabel50.setToolTipText("ajouter un patient");
        jLabel51.setToolTipText("supprimer ce client");

        parentPanel.add(facturesPanel, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(parentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(637, 637, 637)
                .addComponent(time)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        if (usersTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner d'abord un patient ");
        } else {

            String termine = "0";
            /*hedi ne7iha
            if (currAct.cout < Integer.parseInt(priceTF.getValue().toString()) && !termineRadio.isSelected()) {

                int answer = confirmationMsg("la somme payée est supérieure au coût de l'acte, voulez-vous la définir comme terminée");
                if (answer == JOptionPane.YES_OPTION) {
                    termine = "1";
                } else {
                    termine = "0";
                }
            }*/

            DefaultTableModel model = (DefaultTableModel) usersTable.getModel();
            int selectedRowIndex = usersTable.getSelectedRow();

            String client_id = model.getValueAt(selectedRowIndex, 0).toString();
            //later use CURRENT_TIMESTAMP() 
            String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());

            if (termineRadio.isSelected()) {
                termine = "1";
            }
            String operation = String.valueOf(operationsComboBox.getSelectedItem());

            int[] selectedTeeth1 = getVisibleComponentIndexes(teethpanel);
            int[] selectedTeeth2 = getVisibleComponentIndexes(babyTeethPanel);
            int[] allSelectedTeeth = new int[selectedTeeth1.length + selectedTeeth2.length];

            System.arraycopy(selectedTeeth1, 0, allSelectedTeeth, 0, selectedTeeth1.length);
            System.arraycopy(selectedTeeth2, 0, allSelectedTeeth, selectedTeeth1.length, selectedTeeth2.length);

            String remarque = notesTextAreaNV.getText();
            System.out.println(remarque);
            try {
                String remarque_las9a = remarque.replaceAll("\\s", "");
                System.out.println(remarque_las9a);
                if (remarque_las9a.equals("laisseruneremarque")) {
                    remarque = null;
                }
                String operation_id = String.valueOf(UQM.getOperationIdByName(dbc, operation));
                // parameter #5 is admin id
                UQM.insertVisit(dbc, timeStamp, client_id, operation_id, String.valueOf(admin.id), priceTF.getValue().toString(), termine, allSelectedTeeth, remarque , priceFinalTF.getValue().toString());
                System.out.println("visit added");

                try {
                    String[] searchResult = UQM.getVisitsResults(dbc, model.getValueAt(selectedRowIndex, 0).toString(), 2);
                    UIC.paintVistsTable(visitsTable, searchResult);

                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);

            }
        }

        UIC.resetVisitPanel(priceTF, termineRadio, notesTextAreaNV, notesTextAreaNV1, teethpanel, babyTeethPanel, allTeethPanel , procedureLabel , resteLabel);


    }//GEN-LAST:event_savebtnActionPerformed
    
    private void clientSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientSearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientSearchBarActionPerformed

    private void newVisitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newVisitMouseClicked
        
        parentPanel.removeAll();
        parentPanel.add(visitPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
        UIC.resetBackgroundColor(mainContainer);
        
        try {
            UQM.updateCombo(operationsComboBox , dbc );
            UQM.updateCombo(operationsComboBox1 , dbc );
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(parentPanel, ex);
        }
        
    }//GEN-LAST:event_newVisitMouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
        UIC.resetVisitPanel(priceTF ,termineRadio , notesTextAreaNV , notesTextAreaNV1, teethpanel , babyTeethPanel , allTeethPanel  , procedureLabel , resteLabel  );
    }//GEN-LAST:event_jLabel18MouseClicked
    Boolean on = false ;
    private void newClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClientMouseClicked
        if (checkRights(admin.authorities, newClient)) {
            try {
                PopUp ppup = new PopUp("client", dbc, null , admin);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
                System.out.println("the new client button is clicked ");
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_newClientMouseClicked

    private void newOpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOpMouseClicked
        if (checkRights(admin.authorities, newOp)) {
            try {
                PopUp ppup = new PopUp("operation", dbc, null  , admin);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_newOpMouseClicked

    private void newAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdminMouseClicked
       if (checkRights(admin.authorities, newAdmin)) {
            try {
               PopUp ppup = new PopUp("admin", dbc, null , admin);
               ppup.setLocationRelativeTo(null);
               ppup.setVisible(true);
           } catch (SQLException ex) {
               Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newAdminMouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        if (checkRights(admin.authorities, jLabel25)) {
            try {
                PopUp ppup = new PopUp("client", dbc, null , admin , this);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        if (checkRights(admin.authorities, jLabel27)) {
            try {
                PopUp ppup = new PopUp("operation", dbc, null , admin , this);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_jLabel27MouseClicked

    private void clientSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientSearchBarKeyReleased
        
        String[] searchResult = new String[3];
        try {
            searchResult = UQM.getClientsResults(dbc , clientSearchBar.getText());
            UIC.paintUsersTable(usersTable , searchResult);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_clientSearchBarKeyReleased

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)usersTable.getModel();
        int selectedRowIndex = usersTable.getSelectedRow();
        
        visitTypeCards.removeAll();
        visitTypeCards.add(newVisitSect);
        visitTypeCards.revalidate();
        visitTypeCards.repaint();

        nomLabel.setText(model.getValueAt(selectedRowIndex, 1).toString());
        prenomLabel.setText(model.getValueAt(selectedRowIndex, 2).toString());
        updatePrice.setValue(0);
        
        try {
            curClient = UQM.currentClient(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        /*setting up the visits table */
        String[] searchResult = new String[6];
        
        try {
            searchResult = UQM.getVisitsResults(dbc , model.getValueAt(selectedRowIndex, 0).toString() , 2);
            UIC.paintVistsTable( visitsTable , searchResult  );

        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        
        System.out.println("notes : " +curClient.notes );
        if(curClient.notes== null || "".equals(curClient.notes) ){
            warningLabel.setVisible(false);
        }else{
            warningLabel.setVisible(true);
        }
        
        UIC.resetVisitPanel(priceTF ,termineRadio , notesTextAreaNV , notesTextAreaNV1, teethpanel , babyTeethPanel , allTeethPanel  , procedureLabel , resteLabel );
        
    }//GEN-LAST:event_usersTableMouseClicked

    private void updatePriceMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_updatePriceMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePriceMouseWheelMoved

    private void updatePriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePriceMouseClicked
        
    }//GEN-LAST:event_updatePriceMouseClicked

    private void updatebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseClicked
        if (visitsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "sélectionnez d'abord une operation");
        } else {
            
            
                
            try {
                String operation_id = String.valueOf(UQM.getOperationIdByName(dbc, String.valueOf(operationsComboBox1.getSelectedItem())));
                
                DefaultTableModel model = (DefaultTableModel) visitsTable.getModel();
                int selectedRowIndex = visitsTable.getSelectedRow();
                
                String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
                
                String visit_id = model.getValueAt(selectedRowIndex, 0).toString();
                
                String seance_nbr = model.getValueAt(selectedRowIndex, 4).toString();
                //update consultatoin when : the stutus is 0 and
                String remarque = notesTextAreaNV1.getText();
                System.out.println(remarque.replaceAll("\\s", ""));
                
                if (remarque.replaceAll("\\s", "").equals("laisseruneremarque")) {
                    remarque = null;
                }
                
                if (termineradio1.isSelected()) {
                    try {
                        UQM.setVisitTermine(dbc, visit_id);
                        UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, String.valueOf(admin.id), updatePrice.getValue().toString(), remarque , operation_id);
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    
                    if (currCons.cost <= Integer.parseInt(updatePrice.getValue().toString()) + Integer.parseInt(model.getValueAt(selectedRowIndex, 5).toString())) {
                        int answer = confirmationMsg("le montant payé est supérieur au coût final que vous avez défini \n souhaitez-vous marquer que cette opération est terminée");
                        
                        if (answer == JOptionPane.YES_OPTION) {

                            try {
                                // parameter #5 is admin id
                                UQM.setVisitTermine(dbc, visit_id);
                                UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, String.valueOf(admin.id), updatePrice.getValue().toString(), remarque, operation_id);
                                System.out.println("visit updated in interface");
                            } catch (SQLException ex) {
                                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                                System.out.println("exception code : " + ex.getErrorCode() + "select an operation");
                            }

                        } else {
                            try {
                                // parameter #5 is admin id
                                UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, String.valueOf(admin.id), updatePrice.getValue().toString(), remarque, operation_id);
                                System.out.println("visit updated in interface");
                            } catch (SQLException ex) {
                                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                                System.out.println("exception code : " + ex.getErrorCode() + "select an operation");
                            }
                        }
                        

                    }else{
                        
                        
                        try {
                            // parameter #5 is admin id
                            UQM.insertSeance(dbc, visit_id, seance_nbr, timeStamp, String.valueOf(admin.id), updatePrice.getValue().toString(), remarque , operation_id);
                            System.out.println("visit updated in interface");
                        } catch (SQLException ex) {
                            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            System.out.println("exception code : " + ex.getErrorCode() + "select an operation");
                        }
                    }
                    
                    
                    
                    
                }
                
                //setting the table
                DefaultTableModel usrmodel = (DefaultTableModel) usersTable.getModel();
                int selectedIndex = usersTable.getSelectedRow();

                /*setting up the visits table */
                String[] searchResult = new String[6];

                try {
                    searchResult = UQM.getVisitsResults(dbc, usrmodel.getValueAt(selectedIndex, 0).toString(), 2);
                    UIC.paintVistsTable(visitsTable, searchResult);

                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                UIC.resetVisitPanel( updatePrice ,termineradio1 , notesTextAreaNV1 , notesTextAreaNV , teethpanel , babyTeethPanel , allTeethPanel , procedureLabel , resteLabel );
            
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_updatebtnMouseClicked

    private void visitsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsTableMouseClicked
        
        UIC.resetVisitPanel( updatePrice ,termineradio1 , notesTextAreaNV1 , notesTextAreaNV , teethpanel , babyTeethPanel , allTeethPanel , procedureLabel , resteLabel   );
        
        try {
            UQM.updateCombo(modifyActConsCombo , dbc );
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(parentPanel, ex);
        }
        
        DefaultTableModel model = (DefaultTableModel) visitsTable.getModel();
        int selectedRowIndex = visitsTable.getSelectedRow();
        
        System.out.println("the search panell was created  : x " + searchPanel.getLocation().x  +" y "+ searchPanel.getLocation().y + searchPanel.isVisible());
        if(model.getValueAt(selectedRowIndex, 6).toString().equals("1")){
            visitTypeCards.removeAll();
            visitTypeCards.add(doneSect);
            visitTypeCards.repaint();
            visitTypeCards.revalidate(); 
        }else{
            visitTypeCards.removeAll();
            visitTypeCards.add(newSeanceSect);
            visitTypeCards.repaint();
            visitTypeCards.revalidate(); 
        }
        
        
        if (evt.getClickCount() == 2) {
            
            parentPanel.removeAll();
            parentPanel.add(detailedVisitPanel);
            parentPanel.repaint();
            parentPanel.revalidate();

            searchTypePanel.removeAll();
            searchTypePanel.add(seancesPanel);
            searchTypePanel.repaint();
            searchTypePanel.revalidate();
            //searchPanel.setVisible(true);
            
            String[] searchResult = new String[4];
            try {
                searchResult = UQM.getseancesResults(dbc, model.getValueAt(selectedRowIndex, 0).toString());
                UIC.paintSeances(seancesTable, searchResult);
                
                searchResult = UQM.getDetailedVisitsResults(dbc,"" , "" , ""  , "0"  ,"100000" , null , null , -1 ,  Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) );
                                                            
                UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, seancesPanel);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                
            }
        
            

            

        } else {
            
            // create consltation obj
            try {
                currCons = UQM.currentConsultation(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()));

            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            try {
                
                jLabel90.setVisible(UQM.notesFlag(dbc, String.valueOf(currCons.id)));
                
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            try {
                
                
                UIC.resetTeethPanel(teethpanel , babyTeethPanel);
                
                String operation=model.getValueAt(selectedRowIndex, 2).toString();
                currAct.cout = UQM.getOperationCostByName(dbc, operation) ;
                model = (DefaultTableModel) visitsTable.getModel();
                selectedRowIndex = visitsTable.getSelectedRow();
                //KBO
                String payed = model.getValueAt(selectedRowIndex , 5 ).toString();
                int rest = currCons.cost - (Integer.parseInt(payed)) ;
                if(rest<0 || model.getValueAt(selectedRowIndex , 6 ).toString().equals("1")){
                    rest = 0 ;
                }
                
                String[] teethIndexes = model.getValueAt(selectedRowIndex, 3).toString().split(",");
                
                for(String tooth : teethIndexes){
                    try{
                        if(Integer.parseInt(tooth.trim())> 49){
                        allTeethPanel.removeAll();
                        allTeethPanel.add(babyTeethPanel);
                        allTeethPanel.repaint();
                        allTeethPanel.revalidate();
                        }else{
                        allTeethPanel.removeAll();
                        allTeethPanel.add(teethpanel);
                        allTeethPanel.repaint();
                        allTeethPanel.revalidate(); 
                        }
                    }catch(Exception e){
                        allTeethPanel.removeAll();
                        allTeethPanel.add(teethpanel);
                        allTeethPanel.repaint();
                        allTeethPanel.revalidate(); 
                    }
                    
                    
                           
                }
                //tweli a for loop (multipe children effected !)
                
                Component[] components = teethpanel.getComponents();
                Component[] otherComponents = babyTeethPanel.getComponents();
                int totalSize = components.length + otherComponents.length;
                Component[] allComponents = new Component[totalSize];
                System.arraycopy(components, 0, allComponents, 0, components.length);
                System.arraycopy(otherComponents, 0, allComponents, components.length, otherComponents.length);

                for (int i = 0; i < teethIndexes.length; i++) {
                    String toothIndex = teethIndexes[i].trim();
                    for (Component component : allComponents) {
                        
                        System.out.println("component name :" + component.getName());
                        if (component.getName() == null ? toothIndex == null : component.getName().equals(toothIndex)) {
                            System.out.println("match");
                            component.setVisible(true);
                        }
                    }
                }
                /*
                for (int i = 0; i < teethIndexes.length; i++) {
                    String toothIndex = teethIndexes[i].trim();
                    for (Component component : otherComponents) {

                        System.out.println("component name :" + component.getName());
                        if (component.getName() == null ? toothIndex == null : component.getName().equals(toothIndex)) {
                            System.out.println("match");
                            component.setVisible(true);
                        }
                    }
                }*/
                resteLabel.setText(String.valueOf(rest));
                procedureLabel.setText(operation);
            } catch (Exception ex) {
                ex.printStackTrace();
                System.err.println("select a client first");
            }

        }


    }//GEN-LAST:event_visitsTableMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatebtnActionPerformed

    private void visitsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsListMouseClicked
        parentPanel.removeAll();
        parentPanel.add(detailedVisitPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
        
        
        UIC.resetBackgroundColor(mainContainer);
        
        try {
            UQM.updateCombo(modifyActConsCombo , dbc );
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(parentPanel, ex);
        }
    }//GEN-LAST:event_visitsListMouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
    }//GEN-LAST:event_jLabel34MouseClicked
        
    private void visitsTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel)visitsTable1.getModel();
        int selectedRowIndex = visitsTable1.getSelectedRow();
        //creating the consulation object
        try {
            currCons = UQM.currentConsultation(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) ) ;
            
            
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //KBO
        
        
        modifyDentsTextField.setText(model.getValueAt(selectedRowIndex, 4).toString().replace(",", " "));
        modifyClientTextField.setText(model.getValueAt(selectedRowIndex , 1).toString());
        
        coutFinalSpinner.setValue(Integer.parseInt(model.getValueAt(selectedRowIndex , 7).toString()));
        
        if(model.getValueAt(selectedRowIndex, 8).equals("1")){
            modifyTermine.setSelected(true);
        }else{
            modifyTermine.setSelected(false);
        }
        
        
        if (evt.getClickCount() == 2) {
            
            
            searchTypePanel.removeAll();
            searchTypePanel.add(seancesPanel);
            searchTypePanel.repaint();
            searchTypePanel.revalidate();
            
            
            /*setting up the seances table */
        String[] searchResult = new String[4];
        try {
            searchResult = UQM.getseancesResults(dbc , model.getValueAt(selectedRowIndex, 0).toString());
            UIC.paintSeances(seancesTable , searchResult );
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
        }
    }//GEN-LAST:event_visitsTable1MouseClicked

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_jLabel41MouseClicked

    private void backgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseClicked
        Point point = evt.getPoint(); // get the cursor position relative to the panel
        int x = point.x; // get the x coordinate of the cursor
        int y = point.y; 
        System.out.println("coordinates : "+x +", "+y);
        if (x >= 33 && x <= 46 && y <= 134 && y >= 118) {
            toothLbl1.setVisible(!toothLbl1.isVisible());
        } else if (x >= 30 && x <= 46 && y <= 116 && y >= 99) {
            toothLbl2.setVisible(!toothLbl2.isVisible());
        } else if (x >= 34 && x <= 49 && y <= 98 && y >= 84) {
            toothLbl3.setVisible(!toothLbl3.isVisible());
        } else if (x >= 37 && x <= 55 && y <= 80 && y >= 69) {
            toothLbl4.setVisible(!toothLbl4.isVisible());
        } else if (x >= 46 && x <= 62 && y <= 66 && y >= 55) {
            toothLbl5.setVisible(!toothLbl5.isVisible());
        } else if (x >= 54 && x <= 69 && y <= 51 && y >= 45) {
            toothLbl6.setVisible(!toothLbl6.isVisible());
        } else if (x >= 62 && x <= 79 && y <= 42 && y >= 31) {
            toothLbl7.setVisible(!toothLbl7.isVisible());
        } else if (x >= 80 && x <= 97 && y <= 41 && y >= 20) {
            toothLbl8.setVisible(!toothLbl8.isVisible());
        } else if (x >= 97 && x <= 115 && y <= 42 && y >= 23) {
            toothLbl9.setVisible(!toothLbl9.isVisible());
        } else if (x >= 114 && x <= 131 && y <= 46 && y >= 32) {
            toothLbl10.setVisible(!toothLbl10.isVisible());
        } else if (x >= 124 && x <= 137 && y <= 57 && y >= 42) {
            toothLbl11.setVisible(!toothLbl11.isVisible());
        } else if (x >= 132 && x <= 143 && y <= 69 && y >= 50) {
            toothLbl12.setVisible(!toothLbl12.isVisible());
        } else if (x >= 138 && x <= 151 && y <= 84 && y >= 65) {
            toothLbl13.setVisible(!toothLbl13.isVisible());
        } else if (x >= 143 && x <= 160 && y <= 100 && y >= 81) {
            toothLbl14.setVisible(!toothLbl14.isVisible());
        } else if (x >= 145 && x <= 164 && y <= 115 && y >= 98) {
            toothLbl15.setVisible(!toothLbl15.isVisible());
        } else if (x >= 142 && x <= 164 && y <= 134 && y >= 117) {
            toothLbl16.setVisible(!toothLbl16.isVisible());
        } else if (x >= 146 && x <= 163 && y <= 197 && y >= 177) {
            toothLbl17.setVisible(!toothLbl17.isVisible());
        } else if (x >= 147 && x <= 163 && y <= 216 && y >= 197) {
            toothLbl18.setVisible(!toothLbl18.isVisible());
        } else if (x >= 147 && x <= 163 && y <= 216 && y >= 197) {
            toothLbl18.setVisible(!toothLbl18.isVisible());
        } else if (x >= 143 && x <= 160 && y <= 231 && y >= 217) {
            toothLbl19.setVisible(!toothLbl19.isVisible());
        } else if (x >= 135 && x <= 155 && y <= 248 && y >= 234) {
            toothLbl20.setVisible(!toothLbl20.isVisible());
        } else if (x >= 125 && x <= 141 && y <= 261 && y >= 249) {
            toothLbl21.setVisible(!toothLbl21.isVisible());
        } else if (x >= 120 && x <= 130 && y <= 274 && y >= 261) {
            toothLbl22.setVisible(!toothLbl22.isVisible());
        } else if (x >= 110 && x <= 118 && y <= 282 && y >= 267) {
            toothLbl23.setVisible(!toothLbl23.isVisible());
        } else if (x >= 98 && x <= 108 && y <= 282 && y >= 268) {
            toothLbl24.setVisible(!toothLbl24.isVisible());
        } else if (x >= 84 && x <= 98 && y <= 283 && y >= 271) {
            toothLbl25.setVisible(!toothLbl25.isVisible());
        } else if (x >= 72 && x <= 86 && y <= 277 && y >= 267) {
            toothLbl26.setVisible(!toothLbl26.isVisible());
        } else if (x >= 62 && x <= 76 && y <= 274 && y >= 262) {
            toothLbl27.setVisible(!toothLbl27.isVisible());
        } else if (x >= 53 && x <= 67 && y <= 263 && y >= 247) {
            toothLbl28.setVisible(!toothLbl28.isVisible());
        } else if (x >= 43 && x <= 58 && y <= 250 && y >= 232) {
            toothLbl29.setVisible(!toothLbl29.isVisible());
        } else if (x >= 36 && x <= 50 && y <= 234 && y >= 214) {
            toothLbl30.setVisible(!toothLbl30.isVisible());
        } else if (x >= 33 && x <= 48 && y <= 218 && y >= 198) {
            toothLbl31.setVisible(!toothLbl31.isVisible());
        } else if (x >= 28 && x <= 50 && y <= 197 && y >= 177) {
            toothLbl32.setVisible(!toothLbl32.isVisible());
        } 


        
    }//GEN-LAST:event_backgroundMouseClicked

    private void termineComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termineComboActionPerformed
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_termineComboActionPerformed

    private void searchTypeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchTypeComboItemStateChanged
        System.out.println(searchTypeCombo.getSelectedIndex());
        
        switch (searchTypeCombo.getSelectedIndex()) {
            case 0:
                searchFieldPanel.removeAll();
                searchFieldPanel.add(nom_prenomSearch);
                searchFieldPanel.repaint();
                searchFieldPanel.revalidate();
                System.out.println("painted nom prenom");
                break;
            case 1:
                searchFieldPanel.removeAll();
                searchFieldPanel.add(actSearch);
                searchFieldPanel.repaint();
                searchFieldPanel.revalidate();
                
                break;
            case 2:
                searchFieldPanel.removeAll();
                searchFieldPanel.add(priceSearch);
                searchFieldPanel.repaint();
                searchFieldPanel.revalidate();
                System.out.println("painted admin search ");
                break;         
            default:
                break;
        }
    }//GEN-LAST:event_searchTypeComboItemStateChanged

    private void actDentSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actDentSearchFieldKeyReleased

        /*setting up the visits table */
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex(), -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_actDentSearchFieldKeyReleased

    private void calLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calLabelMouseClicked
        
        
        ImageIcon icon1 = new javax.swing.ImageIcon(getClass().getResource("/images/Cal.png"));
        
        ImageIcon icon2 = new javax.swing.ImageIcon(getClass().getResource("/images/blackCal.png"));
        if(dateSearch.isVisible()){
            
            dateFieldPanel.removeAll();
            dateFieldPanel.add(nothing);
            dateFieldPanel.repaint();
            dateFieldPanel.revalidate();

            dateSearch.setVisible(false);
            calLabel.setIcon(icon1);
            
            minDatePicker.setDate(null);
            maxDatePicker.setDate(null);
            
            
        }else{
            dateFieldPanel.removeAll();
            dateFieldPanel.add(dateSearch);
            dateFieldPanel.repaint();
            dateFieldPanel.revalidate();
            
            dateSearch.setVisible(true);
            calLabel.setIcon(icon2);
        }
        
    }//GEN-LAST:event_calLabelMouseClicked

    private void actDentSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actDentSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actDentSearchFieldActionPerformed

    private void operationsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_operationsComboBoxItemStateChanged
        try {
            priceFinalTF.setValue(UQM.getOperationCostByName(dbc , operationsComboBox.getSelectedItem().toString())); 
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        UIC.emptyTeethpanel(teethpanel);
        UIC.emptyTeethpanel(babyTeethPanel);
        
        
    }//GEN-LAST:event_operationsComboBoxItemStateChanged

    private void nomSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomSearchFieldKeyReleased
        /*setting up the visits table */
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex(), -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
        
    }//GEN-LAST:event_nomSearchFieldKeyReleased

    private void jLabel48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel48MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_jLabel48MouseClicked

    private void jLabel50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel50MouseClicked
        try {
            PopUp ppup = new PopUp("client", dbc , null , admin , this);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel50MouseClicked

    private void clientsSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientsSearchKeyReleased
        String[] searchResult = new String[20];
        try {
            searchResult = UQM.getDetailedClientsResults(dbc, clientsSearch.getText());
            UIC.paintPatientsTable(clientsTable, searchResult);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_clientsSearchKeyReleased

    private void consultPatientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultPatientsMouseClicked
        if (checkRights(admin.authorities, consultPatients)) {
            parentPanel.removeAll();
            parentPanel.add(patientsPanel);
            parentPanel.repaint();
            parentPanel.revalidate();
           
            String[] searchResult = new String[20];
            try {
                searchResult = UQM.getDetailedClientsResults(dbc, clientsSearch.getText());
                UIC.paintPatientsTable(clientsTable, searchResult);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_consultPatientsMouseClicked

    private void modifyTermineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyTermineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyTermineActionPerformed

    private void newVisitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newVisitMouseExited
        newVisit.setBackground(new Color(247,247,247));
        
    }//GEN-LAST:event_newVisitMouseExited

    private void consultPatientsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultPatientsMouseExited
        consultPatients.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_consultPatientsMouseExited

    private void visitsListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsListMouseExited
        visitsList.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_visitsListMouseExited

    private void newClientMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClientMouseExited
        newClient.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newClientMouseExited

    private void newOpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOpMouseExited
        newOp.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newOpMouseExited

    private void newAdminMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdminMouseExited
        newAdmin.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newAdminMouseExited

    private void newVisitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newVisitMouseEntered
        newVisit.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newVisitMouseEntered

    private void consultPatientsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultPatientsMouseEntered
        consultPatients.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_consultPatientsMouseEntered

    private void visitsListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsListMouseEntered
        visitsList.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_visitsListMouseEntered

    private void newClientMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClientMouseEntered
        newClient.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newClientMouseEntered

    private void newOpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOpMouseEntered
        newOp.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newOpMouseEntered

    private void newAdminMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdminMouseEntered
        newAdmin.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newAdminMouseEntered

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        try {
            //selected teet indexes
            PopUp ppup = new PopUp("facture" , dbc  , null , admin);
            ppup.setLocationRelativeTo(this);
            ppup.setVisible(true);
            System.out.println("the new client button is clicked ");
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jPanel2MouseClicked

    private void background1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_background1MouseClicked
        Point point = evt.getPoint(); // get the cursor position relative to the panel
        int x = point.x; // get the x coordinate of the cursor
        int y = point.y; 
        System.out.println("baby coordinates : "+x +", "+y);
        
        if (x >= 25 && x <= 50 && y >= 108 && y <= 132) {
            babytoothLbl1.setVisible(!babytoothLbl1.isVisible());
        } else if (x >= 32 && x <= 56 && y >= 88 && y <= 106) {
            babytoothLbl2.setVisible(!babytoothLbl2.isVisible());
        } else if (x >= 44 && x <= 65 && y >= 68 && y <= 82) {
            babytoothLbl3.setVisible(!babytoothLbl3.isVisible());
        } else if (x >= 58 && x <= 76 && y >= 52 && y <= 68) {
            babytoothLbl4.setVisible(!babytoothLbl4.isVisible());
        } else if (x >= 77 && x <= 95 && y >= 44 && y <= 67) {
            babytoothLbl5.setVisible(!babytoothLbl5.isVisible());
        } else if (x >= 94 && x <= 114 && y >= 45 && y <= 69) {
            babytoothLbl6.setVisible(!babytoothLbl6.isVisible());
        } else if (x >= 110 && x <= 130 && y >= 50 && y <= 73) {
            babytoothLbl7.setVisible(!babytoothLbl7.isVisible());
        } else if (x >= 124 && x <= 142 && y >= 66 && y <= 88) {
            babytoothLbl8.setVisible(!babytoothLbl8.isVisible());
        } else if (x >= 134 && x <= 156 && y >= 82 && y <= 109) {
            babytoothLbl9.setVisible(!babytoothLbl9.isVisible());
        } else if (x >= 141 && x <= 164 && y >= 104 && y <= 131) {
            babytoothLbl10.setVisible(!babytoothLbl10.isVisible());
        } else if (x >= 139 && x <= 166 && y >= 175 && y <= 200) {
            babytoothLbl11.setVisible(!babytoothLbl11.isVisible());
        } else if (x >= 132 && x <= 157 && y >= 203 && y <= 224) {
            babytoothLbl12.setVisible(!babytoothLbl12.isVisible());
        } else if (x >= 121 && x <= 140 && y >= 226 && y <= 236) {
            babytoothLbl13.setVisible(!babytoothLbl13.isVisible());
        } else if (x >= 113 && x <= 125 && y >= 235 && y <= 257) {
            babytoothLbl14.setVisible(!babytoothLbl14.isVisible());
        } else if ((x >= 92 && x <= 110 && y >= 231 && y <= 255)){
            babytoothLbl15.setVisible(!babytoothLbl15.isVisible());
        } else if (x >= 76 && x <= 93 && y >= 232 && y <= 254) {
            babytoothLbl16.setVisible(!babytoothLbl16.isVisible());
        } else if (x >= 57 && x <= 78 && y >= 238 && y <= 253) {
            babytoothLbl17.setVisible(!babytoothLbl17.isVisible());
        } else if (x >= 47 && x <= 65 && y >= 223 && y <= 239) {
            babytoothLbl18.setVisible(!babytoothLbl18.isVisible());
        } else if (x >= 36 && x <= 54 && y >= 200 && y <= 224) {
            babytoothLbl19.setVisible(!babytoothLbl19.isVisible());
        } else if (x >= 26 && x <= 46 && y >= 174 && y <= 201) {
            babytoothLbl20.setVisible(!babytoothLbl20.isVisible());
        }
    }//GEN-LAST:event_background1MouseClicked

    private void priceTFMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_priceTFMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTFMouseWheelMoved

    private void priceTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceTFMouseClicked
        
    }//GEN-LAST:event_priceTFMouseClicked

    private void termineRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termineRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_termineRadioActionPerformed

    private void clientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)clientsTable.getModel();
        int selectedRowIndex = clientsTable.getSelectedRow();
        try {
            curClient = UQM.currentClient(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        clientTextAreaFetch.setText(curClient.notes);
        
        
        
        
    }//GEN-LAST:event_clientsTableMouseClicked

    private void searchFieldPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldPanelMouseClicked
        String[] searchResult = new String[9] ;
                
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("panel mouse Clicked");
    }//GEN-LAST:event_searchFieldPanelMouseClicked

    private void searchFieldPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldPanelKeyPressed
        String[] searchResult = new String[9] ;
                
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate() ,  termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel); 
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("panel clicked");
    }//GEN-LAST:event_searchFieldPanelKeyPressed

    private void warningLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warningLabelMouseClicked
        
        String[] myArray = new String[1];
        
        myArray[0] = String.valueOf(curClient.id)+":::"+curClient.nom+":::"+curClient.prenom+"::: "+curClient.adresse+":::"+curClient.numero_tel+":::"+"---------";
        if(evt.getClickCount() == 2){
            parentPanel.removeAll();
            parentPanel.add(patientsPanel);
            parentPanel.repaint();
            parentPanel.revalidate();
            
            UIC.paintPatientsTable(clientsTable, myArray);
            clientTextAreaFetch.setText(curClient.notes);
        }
        
        
        
    }//GEN-LAST:event_warningLabelMouseClicked

    private void searchTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTypeComboActionPerformed

    private void personFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personFilterMouseClicked
        nomSearchField.setText(""); prenomSearchField.setText("") ;
        personFilter.setVisible(false);
        
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_personFilterMouseClicked

    private void actFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actFilterMouseClicked
        
        actDentSearchField.setText("");
        actFilter.setVisible(false);
        
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_actFilterMouseClicked

    private void cashFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashFilterMouseClicked
        minPriceSpinner.setValue(0);
        maxPriceSpinner.setValue(10000);
        
        cashFilter.setVisible(false);
        
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
        
    }//GEN-LAST:event_cashFilterMouseClicked

    private void prenomSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prenomSearchFieldKeyReleased
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_prenomSearchFieldKeyReleased

    private void actSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_actSearchFocusGained
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_actSearchFocusGained

    private void minPriceSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minPriceSpinnerStateChanged
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_minPriceSpinnerStateChanged

    private void maxPriceSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxPriceSpinnerStateChanged
        String[] searchResult = new String[9];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc , nomSearchField.getText(), prenomSearchField.getText() , actDentSearchField.getText(),minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString() , minDatePicker.getDate() , maxDatePicker.getDate() , termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult , searchTypePanel , consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if(!"".equals(nomSearchField.getText()) || !"".equals(prenomSearchField.getText())){
            personFilter.setVisible(true);
        }else{
            personFilter.setVisible(false);
        }
        if(!"".equals(actDentSearchField.getText())){
            actFilter.setVisible(true);
        }else{
            actFilter.setVisible(false);
        }
        if(!"0".equals(minPriceSpinner.getValue().toString())||!"10000".equals(maxPriceSpinner.getValue().toString())){
            cashFilter.setVisible(true);
        }else{
            cashFilter.setVisible(false);
        }
    }//GEN-LAST:event_maxPriceSpinnerStateChanged

    private void priceSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceSearchFocusGained
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_priceSearchFocusGained

    private void priceSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceSearchMouseClicked
        searchTypePanel.removeAll();
        searchTypePanel.add(consultationsPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
    }//GEN-LAST:event_priceSearchMouseClicked

    private void notesTextAreaNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_notesTextAreaNVFocusGained
        notesTextAreaNV.setFont(new Font("Arial", Font.PLAIN, 13));
        notesTextAreaNV.setForeground(Color.BLACK);
        notesTextAreaNV.setText("");
        
    }//GEN-LAST:event_notesTextAreaNVFocusGained

    private void notesTextAreaNV1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_notesTextAreaNV1FocusGained
        notesTextAreaNV1.setFont(new Font("Arial", Font.PLAIN, 13));
        notesTextAreaNV1.setForeground(Color.BLACK);
        notesTextAreaNV1.setText("");        
    }//GEN-LAST:event_notesTextAreaNV1FocusGained

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jLabel49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel49MouseClicked
        
        if (clientsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner un patient");
        } else {
            try {
                PopUp ppup = new PopUp("client", dbc , curClient , admin , this);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel49MouseClicked

    private void newClient1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClient1MouseClicked
        if (checkRights(admin.authorities, newClient1)) {
            parentPanel.removeAll();
            parentPanel.add(apercusPanel);
            parentPanel.repaint();
            parentPanel.revalidate();
            
            String[] searchResults = new String[7];
            try {
                searchResults = UQM.getApercusResults(dbc) ;
                UIC.paintApercus(searchResults , apercu1, apercu2, apercu3, apercu4, apercu5, apercu6, apercu7);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            for(String row : searchResults){
                System.out.println(row.toString());
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newClient1MouseClicked

    private void newClient1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClient1MouseEntered
        newClient1.setBackground(new Color(153,153,153));
   
    }//GEN-LAST:event_newClient1MouseEntered

    private void newClient1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClient1MouseExited
                                            
        newClient1.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newClient1MouseExited

    private void newOp1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOp1MouseClicked
        if (checkRights(admin.authorities, newOp1)) {
            parentPanel.removeAll();
            parentPanel.add(actsPanel);
            parentPanel.repaint();
            parentPanel.revalidate();
            
            String[] searchResult = new String[6];
            try {
                searchResult = UQM.getactsResults(dbc, actsSearch.getText());
                System.out.println("**" + actsSearch.getText() + "**");
                UIC.paintActsTable(actsTable, searchResult);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        UIC.resetBackgroundColor(mainContainer);
        
    }//GEN-LAST:event_newOp1MouseClicked

    private void newOp1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOp1MouseEntered
        newOp1.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newOp1MouseEntered

    private void newOp1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOp1MouseExited
        newOp1.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newOp1MouseExited

    private void newAdmin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin1MouseClicked
        if (checkRights(admin.authorities, newAdmin1)) {
            parentPanel.removeAll();
            parentPanel.add(adminsPanel);
            parentPanel.repaint();
            parentPanel.revalidate();
            
            String[] searchResults = new String[3];
            try {
                searchResults = UQM.getAdminsResults(dbc) ;
                UIC.paintRightsTable(rightsTable, searchResults);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            for(String row : searchResults){
                System.out.println(row.toString());
            }
            
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newAdmin1MouseClicked

    private void newAdmin1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin1MouseEntered
        newAdmin1.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newAdmin1MouseEntered

    private void newAdmin1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin1MouseExited
        newAdmin1.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newAdmin1MouseExited

    private void jLabel51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel51MouseClicked
        if (clientsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner un patient");
        } else {
            int confirmed =  confirmationMsg("la suppression de cet patient supprimera toutes les informations \n le concernant, ainsi que les sessions qu'il a faites , êtes-vous sûr de vouloir continuer ?");

            if (confirmed == JOptionPane.YES_OPTION) {
                 try {
                    UQM.deleteClient(dbc, curClient.id);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
             String[] searchResult = new String[20];
            try {
                searchResult = UQM.getDetailedClientsResults(dbc, clientsSearch.getText());
                UIC.paintPatientsTable(clientsTable, searchResult);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }        
    }//GEN-LAST:event_jLabel51MouseClicked

    private void searchPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchPanelMouseClicked
        System.out.println("panel exists");
    }//GEN-LAST:event_searchPanelMouseClicked

    private void jLabel50MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel50MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel50MouseEntered

    private void actsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)actsTable.getModel();
        int selectedRowIndex = actsTable.getSelectedRow();
        try {
            currAct = UQM.currentAct(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
              
    }//GEN-LAST:event_actsTableMouseClicked

    private void jLabel71MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel71MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_jLabel71MouseClicked

    private void jLabel72MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel72MouseClicked
        if (actsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner une acte");
        } else {
            try {
                PopUp ppup = new PopUp("operation", dbc , currAct , admin , this);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel72MouseClicked

    private void jLabel73MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel73MouseClicked
        try {
            PopUp ppup = new PopUp("operation", dbc , null, admin , this);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel73MouseClicked

    private void jLabel73MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel73MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel73MouseEntered

    private void jLabel74MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel74MouseClicked
        if (actsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner une ligne ");
        } else {
            int confirmed = confirmationMsg("supprimer cet acte signifierait qu'il n'existera plus dans la base de données,\n et tous les enregistrements précédents apparaîtront comme \"supprimés\" , êtes-vous sûr de vouloir continuer ?");

            if (confirmed == JOptionPane.YES_OPTION) {
                try {
                    UQM.deleteAct(dbc, currAct.id);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            String[] searchResult = new String[6];
            try {
                searchResult = UQM.getactsResults(dbc, actsSearch.getText());
                System.out.println("**" + actsSearch.getText() + "**");
                UIC.paintActsTable(actsTable, searchResult);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }                // TODO add your handling code here:
    }//GEN-LAST:event_jLabel74MouseClicked

    private void actsSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actsSearchKeyReleased
        
        String[] searchResult = new String[6];
        try {
            searchResult = UQM.getactsResults(dbc , actsSearch.getText() );
            System.out.println("**"+actsSearch.getText()+"**");
            UIC.paintActsTable(actsTable, searchResult);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_actsSearchKeyReleased

    private void seancesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seancesTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)seancesTable.getModel();
        int selectedRowIndex = seancesTable.getSelectedRow();
        
        try {
            currSeance = UQM.currentSeance(dbc, currCons.id ,Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString())  ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        modifyActConsCombo.setSelectedItem(model.getValueAt(selectedRowIndex, 2));
            
        seanceRemarque.setText(currSeance.notes);
        seanceMontant.setValue((int) currSeance.montant );
    }//GEN-LAST:event_seancesTableMouseClicked

    private void jLabel60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel60MouseClicked
        if (checkRights(admin.authorities, jLabel60)) {
            if (seancesTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "selectioner une seance");
            } else {
                try {
                   
                    UQM.modifySeance(dbc, currCons.id, currSeance.id, seanceRemarque.getText(), (int) seanceMontant.getValue() , UQM.getOperationIdByName(dbc, (String) modifyActConsCombo.getSelectedItem()));
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                String[] searchResult = new String[4];
                try {
                    searchResult = UQM.getseancesResults(dbc,String.valueOf(currCons.id));
                    UIC.paintSeances(seancesTable, searchResult);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        

    }//GEN-LAST:event_jLabel60MouseClicked

    private void jLabel59MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel59MouseClicked
        if (checkRights(admin.authorities, jLabel59)) {
            if (seancesTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "selectioner une seance");
            } else {
                int answer = confirmationMsg("êtes-vous sûr de vouloir supprimer ce seance");
                if (answer == JOptionPane.YES_OPTION) {
                    try {
                        UQM.deleteSeance(dbc, currCons.id, currSeance.id);
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    String[] searchResult = new String[4];
                    try {
                        searchResult = UQM.getseancesResults(dbc, String.valueOf(currCons.id));
                        UIC.paintSeances(seancesTable, searchResult);
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }
        } else {
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jLabel59MouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        if (checkRights(admin.authorities, jLabel29)) {
      
            if (visitsTable1.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "selectioner une consultation");
            } else {
                int answer = confirmationMsg("êtes-vous sûr de vouloir supprimer cette operation");
                if (answer == JOptionPane.YES_OPTION) {
                    try {
                        UQM.deleteConsultation(dbc, currCons.id);
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String[] searchResult = new String[8];

                    try {
                        searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex() , -1);
                        UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } 
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jLabel29MouseClicked

    private void modifyActConsComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyActConsComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyActConsComboActionPerformed

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        
        if (checkRights(admin.authorities, jLabel33)) {

            if (visitsTable1.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "selectioner une consultation");
            } else {
                int selectedValue = modifyTermine.isSelected() ? 1 : 0;
                // making teeth array 
                String teethString = modifyDentsTextField.getText().trim();
                String[] teethArrayString = teethString.split("\\s+");
                int[] teethArray = new int[teethArrayString.length];
                try {
                    for (int i = 0; i < teethArrayString.length; i++) {

                        teethArray[i] = Integer.parseInt(teethArrayString[i]);
                    }
                } catch (NumberFormatException e) {
                    teethArray = null;
                }

                //------------------
                try {

                    UQM.modifyConsultation(dbc, currCons.id, curClient.id, teethArray, selectedValue , coutFinalSpinner.getValue().toString());
                    curClient = new Client();
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                String[] searchResult = new String[8];

                try {
                    searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex() , -1);
                    UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jLabel33MouseClicked

    private void doneSectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneSectMouseClicked
        if(evt.getClickCount() == 2){
            try {

                UQM.modifyConsultation(dbc, currCons.id , currCons.client_id , null , 0, coutFinalSpinner.getValue().toString());
                
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel model = (DefaultTableModel) usersTable.getModel();
            int selectedRowIndex = usersTable.getSelectedRow();

            try {
                curClient = UQM.currentClient(dbc, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()));
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            /*setting up the visits table */
            String[] searchResult = new String[6];

            try {
                searchResult = UQM.getVisitsResults(dbc, model.getValueAt(selectedRowIndex, 0).toString(), 2);
                UIC.paintVistsTable(visitsTable, searchResult);

            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        
        }
    }//GEN-LAST:event_doneSectMouseClicked

    private void jLabel76MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel76MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_jLabel76MouseClicked

    private void jLabel77MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel77MouseClicked
        if (rightsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner un admin");
        } else {
            try {
                PopUp ppup = new PopUp("admin", dbc , modifAdmin , admin , this);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel77MouseClicked

    private void jLabel78MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel78MouseClicked
        if (checkRights(admin.authorities, newAdmin)) {
            try {
               PopUp ppup = new PopUp("admin", dbc, null , admin , this);
               ppup.setLocationRelativeTo(null);
               ppup.setVisible(true);
           } catch (SQLException ex) {
               Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
    
        String[] searchResults = new String[3];
        try {
            searchResults = UQM.getAdminsResults(dbc);
            UIC.paintRightsTable(rightsTable, searchResults);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel78MouseClicked

    private void jLabel78MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel78MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel78MouseEntered

    private void jLabel79MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel79MouseClicked
        if (checkRights(admin.authorities, newAdmin)) {
            
            int confirmed = confirmationMsg("supprimer cet admin entraînerait la suppression de toutes les opérations qu'il a saisies, voulez-vous continuer ?");

            if (confirmed == JOptionPane.YES_OPTION) {
                try {
                    UQM.deleteAdmin(dbc, modifAdmin.id);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
            String[] searchResults = new String[3];
            try {
                searchResults = UQM.getAdminsResults(dbc) ;
                UIC.paintRightsTable(rightsTable, searchResults);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            

        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel79MouseClicked

    private void rightsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightsTableMouseClicked
        
        DefaultTableModel model = (DefaultTableModel)rightsTable.getModel();
        int selectedRowIndex = rightsTable.getSelectedRow();
        try {
            modifAdmin = UQM.currentAdminWpass(dbc, model.getValueAt(selectedRowIndex, 1).toString() ) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rightsTableMouseClicked

    private void modifyClientTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modifyClientTextFieldKeyReleased
        try {
            String[] results = UQM.getClientsResults(dbc, modifyClientTextField.getText());

            DefaultListModel<String> listModel = new DefaultListModel<>();

            for (int i = 0; i < Math.min(results.length, 10); i++) {
                String[] splitStrings = results[i].split(":::");
                String stringToAdd = splitStrings[0] + "---" + splitStrings[1] + " " + splitStrings[2];
                listModel.addElement(stringToAdd);
            }

            suggestionList.setModel(listModel);
            suggestionList.setVisible(results.length > 0);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_modifyClientTextFieldKeyReleased

    private void suggestionListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suggestionListMouseClicked
        System.out.println("1");
        String[] secondSplit = suggestionList.getSelectedValue().split("---");
        System.out.println(Arrays.toString(secondSplit));
        System.out.println("2");
        try {
            curClient = UQM.currentClient(dbc, Integer.parseInt(secondSplit[0]));
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println("3");
        
        if(curClient!=null){
            modifyClientTextField.setText(curClient.nom +" "+curClient.prenom);
        }else {
            modifyClientTextField.setText("selectioner un patient");
        
        }
        
        suggestionList.setVisible(false);
    }//GEN-LAST:event_suggestionListMouseClicked

    private void suggestionListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_suggestionListFocusLost
        suggestionList.setVisible(false);
    }//GEN-LAST:event_suggestionListFocusLost

    private void jLabel80MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel80MouseClicked
        
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
    }//GEN-LAST:event_jLabel80MouseClicked

    private void modifyClientTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modifyClientTextFieldFocusGained
        modifyClientTextField.setText("");
    }//GEN-LAST:event_modifyClientTextFieldFocusGained

    private void jLabel47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseClicked
        login m = new login();
        this.setVisible(false);
        this.dispose();
        m.setVisible(true);
    }//GEN-LAST:event_jLabel47MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here: 
        if(teethpanel.isVisible()){
            
            teethpanel.setVisible(false);
            allTeethPanel.removeAll();
            allTeethPanel.add(babyTeethPanel);
            allTeethPanel.repaint();
            allTeethPanel.revalidate();  
            babyTeethPanel.setVisible(true);
        }else{
            
            babyTeethPanel.setVisible(false);
            allTeethPanel.removeAll();
            allTeethPanel.add(teethpanel);
            allTeethPanel.repaint();
            allTeethPanel.revalidate();   
            teethpanel.setVisible(true);
        
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void minDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_minDatePickerPropertyChange
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minDatePickerPropertyChange

    private void maxDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_maxDatePickerPropertyChange
        String[] searchResult = new String[8];
        
        try {
            searchResult = UQM.getDetailedVisitsResults(dbc, nomSearchField.getText(), prenomSearchField.getText(), actDentSearchField.getText(), minPriceSpinner.getValue().toString(), maxPriceSpinner.getValue().toString(), minDatePicker.getDate(), maxDatePicker.getDate(), termineCombo.getSelectedIndex() , -1);
            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_maxDatePickerPropertyChange

    private void priceFinalTFMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_priceFinalTFMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFinalTFMouseWheelMoved

    private void priceFinalTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceFinalTFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFinalTFMouseClicked

    private void priceTFStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_priceTFStateChanged
        
        String curval = priceTF.getValue().toString() ;
        if(Integer.parseInt(curval) > Integer.parseInt(priceFinalTF.getValue().toString()) ){
            
            priceFinalTF.setValue(priceTF.getValue());
            
        }
        
        
    }//GEN-LAST:event_priceTFStateChanged

    private void jLabel96MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel96MouseClicked
        if (checkRights(admin.authorities, jLabel27)) {
            try {
                PopUp ppup = new PopUp("operation", dbc, null , admin);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel96MouseClicked

    private void jLabel90MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel90MouseClicked
        
        DefaultTableModel model = (DefaultTableModel) visitsTable.getModel();
        int selectedRowIndex = visitsTable.getSelectedRow();
        
        parentPanel.removeAll();
            parentPanel.add(detailedVisitPanel);
            parentPanel.repaint();
            parentPanel.revalidate();

            searchTypePanel.removeAll();
            searchTypePanel.add(seancesPanel);
            searchTypePanel.repaint();
            searchTypePanel.revalidate();
            //searchPanel.setVisible(true);
            
            String[] searchResult = new String[4];
            try {
                searchResult = UQM.getseancesResults(dbc, model.getValueAt(selectedRowIndex, 0).toString());
                UIC.paintSeances(seancesTable, searchResult);
                
                searchResult = UQM.getDetailedVisitsResults(dbc,"" , "" , ""  , "0"  ,"100000" , null , null , -1 ,  Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()) );
                                                            
                UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, seancesPanel);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                
            }
    }//GEN-LAST:event_jLabel90MouseClicked

    private void newAdmin2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin2MouseClicked
        parentPanel.removeAll();
        parentPanel.add(facturesPanel);
        parentPanel.repaint();
        parentPanel.revalidate();

        String[] searchResult = new String[20];
        try {
            searchResult = UQM.getFacturesResults(dbc, facturesSearch.getText(), 1);
            UIC.paintFacturesTable(facturesTable, searchResult);
            
            depenseMois.setText(String.valueOf(UQM.getDepenseMois(dbc)) + " DA");
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIC.resetBackgroundColor(mainContainer);
    }//GEN-LAST:event_newAdmin2MouseClicked

    private void newAdmin2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin2MouseEntered
        newAdmin2.setBackground(new Color(153,153,153));
    }//GEN-LAST:event_newAdmin2MouseEntered

    private void newAdmin2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAdmin2MouseExited
        newAdmin2.setBackground(new Color(247,247,247));
    }//GEN-LAST:event_newAdmin2MouseExited

    private void facturesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facturesTableMouseClicked
        try {
            currFact = UQM.currentFacture(dbc, facturesTable.getModel().getValueAt(facturesTable.getSelectedRow(), 0)) ;
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_facturesTableMouseClicked

    private void jLabel99MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel99MouseClicked
        parentPanel.removeAll();
        parentPanel.add(homePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        
    }//GEN-LAST:event_jLabel99MouseClicked

    private void jLabel100MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel100MouseClicked
        if (facturesTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner une facture");
        } else {
            try {
                PopUp ppup = new PopUp("facture", dbc , currFact , admin, this);
                ppup.setLocationRelativeTo(null);
                ppup.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel100MouseClicked

    private void jLabel101MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel101MouseClicked
        try {
            PopUp ppup = new PopUp("facture", dbc , null , admin , this);
            ppup.setLocationRelativeTo(null);
            ppup.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel101MouseClicked

    private void jLabel101MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel101MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel101MouseEntered

    private void jLabel102MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel102MouseClicked
        if (facturesTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "selectioner une facture ");
        } else {
            int confirmed = confirmationMsg("êtes-vous sûr de vouloir supprimer cette facture ?");

            if (confirmed == JOptionPane.YES_OPTION) {
                try {
                    UQM.deleteFacture(dbc, currFact.id);
                    depenseMois.setText(String.valueOf(UQM.getDepenseMois(dbc)) + " DA");
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            String[] searchResult = new String[6];
            try {
                searchResult = UQM.getFacturesResults(dbc, facturesSearch.getText(), 1);
                
                UIC.paintFacturesTable(facturesTable, searchResult);
            } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } 
    }//GEN-LAST:event_jLabel102MouseClicked

    private void facturesSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_facturesSearchKeyReleased
        String[] searchResult = new String[20];
        try {
            searchResult = UQM.getFacturesResults(dbc, facturesSearch.getText(), 2);
            UIC.paintFacturesTable(facturesTable, searchResult);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_facturesSearchKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String[] searchResult = new String[20];
        try {
            searchResult = UQM.getFacturesResults(dbc, facturesSearch.getText(), 1);
            UIC.paintFacturesTable(facturesTable, searchResult);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String[] searchResult = new String[20];
        try {
            searchResult = UQM.getFacturesResults(dbc, facturesSearch.getText(), 2);
            UIC.paintFacturesTable(facturesTable, searchResult);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void visitsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsTableMouseReleased
        if(evt.isPopupTrigger()){
            jPopupMenu.show(visitsTable , evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_visitsTableMouseReleased

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        
        
    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) visitsTable.getModel();
        int selectedRowIndex = visitsTable.getSelectedRow();
        parentPanel.removeAll();
        parentPanel.add(detailedVisitPanel);
        parentPanel.repaint();
        parentPanel.revalidate();

        
        //searchPanel.setVisible(true);

        String[] searchResult = new String[4];
        try {
            
            searchResult = UQM.getDetailedVisitsResults(dbc, "", "", "", "0", "100000", null, null, -1, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()));

            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, consultationsPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) visitsTable.getModel();
        int selectedRowIndex = visitsTable.getSelectedRow();
        parentPanel.removeAll();
        parentPanel.add(detailedVisitPanel);
        parentPanel.repaint();
        parentPanel.revalidate();

        searchTypePanel.removeAll();
        searchTypePanel.add(seancesPanel);
        searchTypePanel.repaint();
        searchTypePanel.revalidate();
        //searchPanel.setVisible(true);

        String[] searchResult = new String[4];
        try {
            searchResult = UQM.getseancesResults(dbc, model.getValueAt(selectedRowIndex, 0).toString());
            UIC.paintSeances(seancesTable, searchResult);

            searchResult = UQM.getDetailedVisitsResults(dbc, "", "", "", "0", "100000", null, null, -1, Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()));

            UIC.paintDetailedVisit(visitsTable1, searchResult, searchTypePanel, seancesPanel);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (checkRights(admin.authorities, jLabel29)) {
      
            if (visitsTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "selectioner une consultation");
            } else {
                int answer = confirmationMsg("êtes-vous sûr de vouloir supprimer cette operation");
                if (answer == JOptionPane.YES_OPTION) {
                    try {
                        
                        UQM.deleteConsultation(dbc, Integer.parseInt((String) visitsTable.getModel().getValueAt(visitsTable.getSelectedRow(), 0)));
                        String[] searchResult = new String[8];

                        searchResult = UQM.getVisitsResults(dbc, usersTable.getModel().getValueAt(usersTable.getSelectedRow(), 0).toString(), 2);
                        UIC.paintVistsTable(visitsTable, searchResult);

                    } catch (SQLException ex) {
                        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } 
            }
        }else{
            JOptionPane.showMessageDialog(null, "Accès refusé.\n Vous n'avez pas le droit d'utiliser cette fonctionnalité.",
                "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void backupTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupTextMouseClicked
        try {
            
            boolean success = UQM.backupData();
            
            SwingUtilities.invokeLater(() -> {

                backupText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loading_small.gif")));
                backupText.setText("   Loading...");

                Timer timer = new Timer(3000, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (success) {
                            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/correct-database.png"));
                            backupText.setIcon(icon);
                            backupText.setText("backup succeeded");

                        } else {
                            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/delete-database.png"));
                            backupText.setIcon(icon);
                            backupText.setText("backup failed");
                            Timer restore_icon = new Timer(20000, new ActionListener() {
                                @Override
                                public void actionPerformed(ActionEvent e) {
                                    ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/data-backup.png"));
                                    backupText.setIcon(icon);
                                    backupText.setText("back-up data");

                                }

                            });
                            restore_icon.setRepeats(false);
                            restore_icon.start();

                        }

                    }

                });
                timer.setRepeats(false);
                timer.start();
                
            });
            

        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_backupTextMouseClicked
    
    private void connectToDataBase() {
        
        try
        {
            CON = DriverManager.getConnection("jdbc:mysql://localhost:3306/clinicdatabase" ,"aymen" , "aymenhhh");
        } catch ( SQLException e)
            {
                System.out.println("mainFrame couldnt connect !");
                System.out.println(e.getMessage());
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new mainFrame(dbc , admin.name).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actDentSearchField;
    private javax.swing.JLabel actFilter;
    private javax.swing.JPanel actSearch;
    private javax.swing.JPanel actsPanel;
    private javax.swing.JTextField actsSearch;
    private javax.swing.JTable actsTable;
    private javax.swing.JPanel adminsPanel;
    private javax.swing.JPanel allTeethPanel;
    private javax.swing.JLabel apercu1;
    private javax.swing.JLabel apercu2;
    private javax.swing.JLabel apercu3;
    private javax.swing.JLabel apercu4;
    private javax.swing.JLabel apercu5;
    private javax.swing.JLabel apercu6;
    private javax.swing.JLabel apercu7;
    private javax.swing.JPanel apercusPanel;
    private javax.swing.JPanel babyTeethPanel;
    private javax.swing.JLabel babytoothLbl1;
    private javax.swing.JLabel babytoothLbl10;
    private javax.swing.JLabel babytoothLbl11;
    private javax.swing.JLabel babytoothLbl12;
    private javax.swing.JLabel babytoothLbl13;
    private javax.swing.JLabel babytoothLbl14;
    private javax.swing.JLabel babytoothLbl15;
    private javax.swing.JLabel babytoothLbl16;
    private javax.swing.JLabel babytoothLbl17;
    private javax.swing.JLabel babytoothLbl18;
    private javax.swing.JLabel babytoothLbl19;
    private javax.swing.JLabel babytoothLbl2;
    private javax.swing.JLabel babytoothLbl20;
    private javax.swing.JLabel babytoothLbl3;
    private javax.swing.JLabel babytoothLbl4;
    private javax.swing.JLabel babytoothLbl5;
    private javax.swing.JLabel babytoothLbl6;
    private javax.swing.JLabel babytoothLbl7;
    private javax.swing.JLabel babytoothLbl8;
    private javax.swing.JLabel babytoothLbl9;
    private javax.swing.JLabel background;
    private javax.swing.JLabel background1;
    private javax.swing.JLabel backupText;
    private javax.swing.JLabel calLabel;
    private javax.swing.JLabel cashFilter;
    private javax.swing.JTextField clientSearchBar;
    private javax.swing.JTextArea clientTextAreaFetch;
    private javax.swing.JTextField clientsSearch;
    private javax.swing.JTable clientsTable;
    private javax.swing.JPanel consultPatients;
    private javax.swing.JPanel consultationsPanel;
    private javax.swing.JSpinner coutFinalSpinner;
    private javax.swing.JPanel dateFieldPanel;
    private javax.swing.JPanel dateSearch;
    private javax.swing.JLabel depenseMois;
    private javax.swing.JPanel detailedVisitPanel;
    private javax.swing.JDialog dialogBox;
    private javax.swing.JPanel doneSect;
    private javax.swing.JPanel facturesPanel;
    private javax.swing.JTextField facturesSearch;
    private javax.swing.JTable facturesTable;
    private javax.swing.JPanel homePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel mainContainer;
    private com.github.lgooddatepicker.components.DatePicker maxDatePicker;
    private javax.swing.JSpinner maxPriceSpinner;
    private com.github.lgooddatepicker.components.DatePicker minDatePicker;
    private javax.swing.JSpinner minPriceSpinner;
    private javax.swing.JComboBox<String> modifyActConsCombo;
    private javax.swing.JTextField modifyClientTextField;
    private javax.swing.JTextField modifyDentsTextField;
    private javax.swing.JCheckBox modifyTermine;
    private javax.swing.JPanel newAdmin;
    private javax.swing.JPanel newAdmin1;
    private javax.swing.JPanel newAdmin2;
    private javax.swing.JPanel newClient;
    private javax.swing.JPanel newClient1;
    private javax.swing.JPanel newOp;
    private javax.swing.JPanel newOp1;
    private javax.swing.JPanel newSeanceSect;
    private javax.swing.JPanel newVisit;
    private javax.swing.JPanel newVisitSect;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JTextField nomSearchField;
    private javax.swing.JPanel nom_prenomSearch;
    private javax.swing.JTextArea notesTextAreaNV;
    private javax.swing.JTextArea notesTextAreaNV1;
    private javax.swing.JPanel nothing;
    private javax.swing.JComboBox<String> operationsComboBox;
    private javax.swing.JComboBox<String> operationsComboBox1;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JPanel patientsPanel;
    private javax.swing.JLabel personFilter;
    private javax.swing.JLabel prenomLabel;
    private javax.swing.JTextField prenomSearchField;
    private javax.swing.JSpinner priceFinalTF;
    private javax.swing.JPanel priceSearch;
    private javax.swing.JSpinner priceTF;
    private javax.swing.JLabel procedureLabel;
    private javax.swing.JLabel resteLabel;
    private javax.swing.JTable rightsTable;
    private javax.swing.JButton savebtn;
    private javax.swing.JSpinner seanceMontant;
    private javax.swing.JTextArea seanceRemarque;
    private javax.swing.JPanel seancesPanel;
    private javax.swing.JTable seancesTable;
    private javax.swing.JPanel searchFieldPanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> searchTypeCombo;
    private javax.swing.JPanel searchTypePanel;
    private javax.swing.JList<String> suggestionList;
    private javax.swing.JPanel teethpanel;
    private javax.swing.JComboBox<String> termineCombo;
    private javax.swing.JCheckBox termineRadio;
    private javax.swing.JCheckBox termineradio1;
    private javax.swing.JLabel time;
    private javax.swing.JLabel toothLbl1;
    private javax.swing.JLabel toothLbl10;
    private javax.swing.JLabel toothLbl11;
    private javax.swing.JLabel toothLbl12;
    private javax.swing.JLabel toothLbl13;
    private javax.swing.JLabel toothLbl14;
    private javax.swing.JLabel toothLbl15;
    private javax.swing.JLabel toothLbl16;
    private javax.swing.JLabel toothLbl17;
    private javax.swing.JLabel toothLbl18;
    private javax.swing.JLabel toothLbl19;
    private javax.swing.JLabel toothLbl2;
    private javax.swing.JLabel toothLbl20;
    private javax.swing.JLabel toothLbl21;
    private javax.swing.JLabel toothLbl22;
    private javax.swing.JLabel toothLbl23;
    private javax.swing.JLabel toothLbl24;
    private javax.swing.JLabel toothLbl25;
    private javax.swing.JLabel toothLbl26;
    private javax.swing.JLabel toothLbl27;
    private javax.swing.JLabel toothLbl28;
    private javax.swing.JLabel toothLbl29;
    private javax.swing.JLabel toothLbl3;
    private javax.swing.JLabel toothLbl30;
    private javax.swing.JLabel toothLbl31;
    private javax.swing.JLabel toothLbl32;
    private javax.swing.JLabel toothLbl4;
    private javax.swing.JLabel toothLbl5;
    private javax.swing.JLabel toothLbl6;
    private javax.swing.JLabel toothLbl7;
    private javax.swing.JLabel toothLbl8;
    private javax.swing.JLabel toothLbl9;
    private javax.swing.JSpinner updatePrice;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTable usersTable;
    private javax.swing.JPanel visitPanel;
    private javax.swing.JPanel visitTypeCards;
    private javax.swing.JPanel visitsList;
    private javax.swing.JTable visitsTable;
    private javax.swing.JTable visitsTable1;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
//timer 
void displayTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat(" MMM d,  HH:mm");
                time.setText(s.format(d));
            }

        }).start();
    }


void adminNameFade() {
        new Timer(5000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                setTitle("");
            }

        }).start();
    }

boolean checkRights(int[] rights , Component comp){
    String compName = comp.getName() ;
    
    if(rights[0]==0 && "gestionAdmins".equals(compName)){
        return false ;
    }else if(rights[1]==0 && "gestionActs".equals(compName)){
        return false ;
    }else if(rights[2]==0 && "gestionPatients".equals(compName)){
        return false ;
    }else if(rights[3]==0 && "gestionVisits".equals(compName)){
        return false ;
    }else return !(rights[4]==0 && "voirApercus".equals(compName));
    
    
}

public static int[] getVisibleComponentIndexes(Container container) {
    Component[] components = container.getComponents() ;
    int count = 0;
    for (Component component : components) {
        if (component.isVisible()) {
            count++;
        }
    }
    // minus one because that's the background and it's always set to visible
    int[] indexes = new int[count-1];
    int index = 0;
    int tooth  ;
    for (int i = 0; i < components.length -1 ; i++) {
        if (components[i].isVisible()) {
            tooth = Integer.parseInt( components[i].getName());
            indexes[index] = tooth;
            index++;
        }
    }
    return indexes;
}
//cell render component code : 

    @Override
    
    public void onPopupClosed(String ActiveCard) {
        
        String[] searchResult = new String[20];
        
        switch (ActiveCard) {
            case "operationP":
                try {
                searchResult = UQM.getactsResults(dbc, actsSearch.getText());
                UIC.paintActsTable(actsTable, searchResult);
                
                UQM.updateCombo(operationsComboBox, dbc);
                UQM.updateCombo(operationsComboBox1, dbc);
                
                } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case "clientP":
                
                try {
                searchResult = UQM.getDetailedClientsResults(dbc, clientsSearch.getText());
                UIC.paintPatientsTable(clientsTable, searchResult);
                
                searchResult = UQM.getClientsResults(dbc , clientSearchBar.getText());
                UIC.paintUsersTable(usersTable , searchResult);
        
                
                } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                break;
            case "adminP":
                try {
                searchResult = UQM.getAdminsResults(dbc) ;
                UIC.paintRightsTable(rightsTable, searchResult);
                } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case "factureP":
                
                try {
                searchResult = UQM.getFacturesResults(dbc, facturesSearch.getText(), 1);
                
                UIC.paintFacturesTable(facturesTable, searchResult);
                } catch (SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;
            default:
                break;
        }
    
    }

public class CustomCellRenderer extends DefaultTableCellRenderer {
  @Override
  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    
    Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
   
    
    if(column == 6 ){
        
        Object tm = table.getModel().getValueAt(row, column);
        if (tm != null) {
            //because when the first table is initialized the values are null and it raises exception
            
             String termine = tm.toString();
             int termine_int = Integer.parseInt(termine);
            Color color = null ;
             if (termine_int == 1) {
                 color =  new Color(52, 235, 94);
            } else {
            color = new Color(251, 255, 125);
            }
             
            cellComponent.setBackground(color);
        } 
        
    }else {
        
        cellComponent.setBackground(Color.WHITE);
        if (isSelected) {
            cellComponent.setBackground(new Color(184, 207, 229));
         } else {
            cellComponent.setBackground(table.getBackground());
        }
    }
    // when it's selected 
    
    
    return cellComponent;
  }
}

public class adminsTableRenderer extends DefaultTableCellRenderer {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        if (column > 1) {
            if (value instanceof String && "0".equals(value)) {
                // If the value is a string with value "0", return the PNG image
                JLabel label = new JLabel(new javax.swing.ImageIcon(getClass().getResource("/images/no.png")));
                label.setHorizontalAlignment(JLabel.CENTER);
                return label;

            } else if (value instanceof String && "1".equals(value)) {
                // If the value is a string with value "0", return the PNG image
                JLabel label = new JLabel(new javax.swing.ImageIcon(getClass().getResource("/images/yes.png")));
                label.setHorizontalAlignment(JLabel.CENTER);
                return label;

            }
        }else{
            setHorizontalAlignment(JLabel.CENTER);
        }
        
        
        // For other types of values, use the default renderer
        return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    }
}

int confirmationMsg(String msg){
    ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/question-mark-40.png"));
    Object[] options = { "Oui", "Non" };
    return JOptionPane.showOptionDialog(parentPanel, msg, "confirmation", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, icon , options , options[0] ) ;
           
}


class MultiLineCellRenderer extends DefaultTableCellRenderer {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        JTextArea textArea = new JTextArea();
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        textArea.setText((String) value);
        
        // Calculate preferred height based on the text content
        int rowHeight = table.getRowHeight();
        
        String textInside = table.getModel().getValueAt(row, 4).toString() ;

        
        int required_height = 30*(textInside.length()/35) ;
        
        table.setRowHeight(row, Math.max(rowHeight, required_height));

        return textArea;
    }
}



}



